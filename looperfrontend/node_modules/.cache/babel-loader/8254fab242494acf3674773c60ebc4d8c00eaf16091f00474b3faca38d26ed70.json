{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\looper-frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import {\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer\n// } from 'recharts';\n\n// interface Transaction {\n//   _id: string;\n//   date: string;\n//   amount: number;\n//   category: string;\n//   description?: string;\n//   user_id: string;\n//   status: 'Paid' | 'Pending';\n// }\n\n// function Dashboard() {\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\n//   const [month, setMonth] = useState('');\n//   const [status, setStatus] = useState('');\n//   const [category, setCategory] = useState('');\n//   const [user, setUser] = useState('');\n//   const [minAmount, setMinAmount] = useState('');\n//   const [maxAmount, setMaxAmount] = useState('');\n//   const [groupByWeek, setGroupByWeek] = useState(false);\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const rowsPerPage = 10;\n//   const [error, setError] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [darkMode, setDarkMode] = useState(() => {\n//     // On first load, check localStorage or system preference\n//     if (typeof window !== \"undefined\") {\n//       const stored = localStorage.getItem('dashboard-darkmode');\n//       if (stored) return stored === 'true';\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\n//     }\n//     return false;\n//   });\n\n//   const navigate = useNavigate();\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\n\n//   // Apply dark mode class to <html>\n//   useEffect(() => {\n//     if (darkMode) {\n//       document.documentElement.classList.add('dark');\n//       localStorage.setItem('dashboard-darkmode', 'true');\n//     } else {\n//       document.documentElement.classList.remove('dark');\n//       localStorage.setItem('dashboard-darkmode', 'false');\n//     }\n//   }, [darkMode]);\n\n//   useEffect(() => {\n//     const fetchTransactions = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\n//         setTransactions(data);\n//         setFiltered(data);\n//       } catch (err) {\n//         setError('Failed to load transactions');\n//       }\n//     };\n//     fetchTransactions();\n//   }, []);\n\n//   useEffect(() => {\n//     let result = [...transactions];\n\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\n//     if (status) result = result.filter((t) => t.status === status);\n//     if (category) result = result.filter((t) => t.category === category);\n//     if (user) result = result.filter((t) => t.user_id === user);\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\n\n//     // Real-time search filter\n//     if (search.trim()) {\n//       const s = search.trim().toLowerCase();\n//       result = result.filter((t) =>\n//         t.user_id?.toLowerCase().includes(s) ||\n//         t.status?.toLowerCase().includes(s) ||\n//         t.category?.toLowerCase().includes(s) ||\n//         t.description?.toLowerCase().includes(s) ||\n//         t.amount.toString().includes(s) ||\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\n//       );\n//     }\n\n//     setCurrentPage(1);\n//     setFiltered(result);\n//   }, [\n//     month, status, category, user, minAmount, maxAmount,\n//     startDate, endDate, transactions, search\n//   ]);\n\n//   const exportToCSV = () => {\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\n//     const rows = filtered\n//       .map((t) => {\n//         const date = new Date(t.date).toISOString().split('T')[0];\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\n//       })\n//       .join('\\n');\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = 'transactions.csv';\n//     a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     navigate('/');\n//   };\n\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\n\n//   const getWeek = (dateStr: string) => {\n//     const date = new Date(dateStr);\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//     const dayOfWeek = firstDay.getDay();\n//     const adjustedDate = date.getDate() + dayOfWeek;\n//     return Math.ceil(adjustedDate / 7);\n//   };\n\n//   const categoryData = Object.entries(\n//     filtered.reduce((acc, t) => {\n//       const key = t.category || 'Uncategorized';\n//       acc[key] = (acc[key] || 0) + t.amount;\n//       return acc;\n//     }, {} as Record<string, number>)\n//   ).map(([name, value]) => ({ name, value }));\n\n//   const barData = groupByWeek\n//     ? Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const weeks = [0, 0, 0, 0, 0];\n//         filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .forEach((t) => {\n//             const week = getWeek(t.date);\n//             weeks[week - 1] += t.amount;\n//           });\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\n//       })\n//     : Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const total = filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .reduce((sum, t) => sum + t.amount, 0);\n//         return { name: monthName, total };\n//       });\n\n//   const totalEntries = filtered.length;\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\n//   const startIndex = (currentPage - 1) * rowsPerPage;\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\n\n//   // --- SUMMARY METRICS LOGIC ---\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\n\n//   return (\n//     <div className=\"p-6 min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\n//       <div className=\"flex justify-between items-center mb-6\">\n//         <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">üìä Dashboard</h1>\n//         <div className=\"flex gap-3 items-center\">\n//           <button\n//             onClick={() => setDarkMode(d => !d)}\n//             className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\n//             title=\"Toggle dark mode\"\n//           >\n//             {darkMode ? '‚òÄÔ∏è' : 'üåô'}\n//           </button>\n//           <button\n//             onClick={handleLogout}\n//             className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* --- REAL-TIME SEARCH INPUT --- */}\n//       <div className=\"mb-4 flex\">\n//         <input\n//           type=\"text\"\n//           className=\"w-full md:w-1/3 p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\n//           placeholder=\"üîç Search transactions (user, status, amount, date, category, description)...\"\n//           value={search}\n//           onChange={e => setSearch(e.target.value)}\n//         />\n//       </div>\n\n//       {/* --- SUMMARY METRICS SECTION --- */}\n//       <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\n//           <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\n//         </div>\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\n//           <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">‚Çπ{totalAmount.toLocaleString()}</span>\n//         </div>\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\n//           <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">‚Çπ{totalPaid.toLocaleString()}</span>\n//         </div>\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\n//           <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">‚Çπ{totalPending.toLocaleString()}</span>\n//         </div>\n//       </div>\n//       {/* --- END SUMMARY METRICS SECTION --- */}\n\n//       {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n\n//       {/* Filters */}\n//       <div className=\"grid md:grid-cols-3 lg:grid-cols-6 gap-4 mb-4\">\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\n//           <option value=\"\">All Months</option>\n//           {Array.from({ length: 12 }, (_, i) => (\n//             <option key={i + 1} value={i + 1}>\n//               {new Date(0, i).toLocaleString('default', { month: 'long' })}\n//             </option>\n//           ))}\n//         </select>\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\n//           <option value=\"\">All Status</option>\n//           <option value=\"Paid\">Paid</option>\n//           <option value=\"Pending\">Pending</option>\n//         </select>\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\n//           <option value=\"\">All Categories</option>\n//           {uniqueCategories.map((cat) => (\n//             <option key={cat}>{cat}</option>\n//           ))}\n//         </select>\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\n//           <option value=\"\">All Users</option>\n//           {uniqueUsers.map((u) => (\n//             <option key={u}>{u}</option>\n//           ))}\n//         </select>\n//         <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Min ‚Çπ\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\n//         <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Max ‚Çπ\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\n//       </div>\n//       <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n//         <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n//         <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n//         <button onClick={exportToCSV} className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\">Export CSV</button>\n//         <button onClick={() => {\n//           setMonth(''); setStatus(''); setCategory(''); setUser('');\n//           setMinAmount(''); setMaxAmount(''); setStartDate('');\n//           setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\n//           setFiltered(transactions);\n//           setSearch('');\n//         }} className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\">Reset Filters</button>\n//       </div>\n\n//       <label className=\"flex items-center gap-2 mb-4 text-sm dark:text-gray-300\">\n//         <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\n//         Group by Week\n//       </label>\n\n//       {/* Table */}\n//       <div className=\"overflow-x-auto mb-2\">\n//         <table className=\"w-full bg-white dark:bg-gray-800 rounded shadow-md\">\n//           <thead className=\"bg-blue-600 dark:bg-blue-900 text-white\">\n//             <tr>\n//               <th className=\"p-3 text-left\">User ID</th>\n//               <th className=\"p-3 text-left\">Date</th>\n//               <th className=\"p-3 text-left\">Amount (‚Çπ)</th>\n//               <th className=\"p-3 text-left\">Category</th>\n//               <th className=\"p-3 text-left\">Description</th>\n//               <th className=\"p-3 text-left\">Status</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {currentEntries.length === 0 ? (\n//               <tr>\n//                 <td colSpan={6} className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No transactions found.</td>\n//               </tr>\n//             ) : (\n//               currentEntries.map((t) => (\n//                 <tr key={t._id} className=\"border-t hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                   <td className=\"p-3\">{t.user_id}</td>\n//                   <td className=\"p-3\">{new Date(t.date).toLocaleDateString()}</td>\n//                   <td className=\"p-3\">‚Çπ{t.amount}</td>\n//                   <td className=\"p-3\">{t.category || 'N/A'}</td>\n//                   <td className=\"p-3\">{t.description || '-'}</td>\n//                   <td className={`p-3 font-medium ${t.status === 'Paid' ? 'text-green-600 dark:text-green-400' : 'text-yellow-600 dark:text-yellow-400'}`}>{t.status}</td>\n//                 </tr>\n//               ))\n//             )}\n//           </tbody>\n//         </table>\n//       </div>\n\n//       <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-2 text-center\">\n//         Showing {startIndex + 1}‚Äì{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\n//       </div>\n\n//       <div className=\"flex items-center justify-center gap-4 mb-10\">\n//         <button onClick={() => setCurrentPage((p) => Math.max(1, p - 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\n//           Prev\n//         </button>\n//         <span className=\"dark:text-gray-200\">Page</span>\n//         <input\n//           type=\"number\"\n//           min={1}\n//           max={totalPages}\n//           value={currentPage}\n//           onChange={(e) => {\n//             const val = parseInt(e.target.value);\n//             if (!isNaN(val) && val >= 1 && val <= totalPages) {\n//               setCurrentPage(val);\n//             }\n//           }}\n//           className=\"w-16 p-1 border rounded text-center dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\"\n//         />\n//         <span className=\"dark:text-gray-200\">of {totalPages}</span>\n//         <button onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\n//           Next\n//         </button>\n//       </div>\n\n//       {/* Charts */}\n//       <h2 className=\"text-xl font-semibold mt-8 mb-4 text-blue-600 dark:text-blue-300\">üìà Spending by Category</h2>\n//       <ResponsiveContainer width=\"100%\" height={300}>\n//         <PieChart>\n//           <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\n//             {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </ResponsiveContainer>\n\n//       <h2 className=\"text-xl font-semibold mt-8 mb-4 text-green-600 dark:text-green-300\">üìä Monthly Spending</h2>\n//       <ResponsiveContainer width=\"100%\" height={300}>\n//         <BarChart data={barData}>\n//           <CartesianGrid strokeDasharray=\"3 3\" />\n//           <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\n//           <YAxis stroke={darkMode ? '#ddd' : '#333'} />\n//           <Tooltip />\n//           <Legend />\n//           {groupByWeek\n//             ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\n//             : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\n//         </BarChart>\n//       </ResponsiveContainer>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [month, setMonth] = useState('');\n  const [status, setStatus] = useState('');\n  const [category, setCategory] = useState('');\n  const [user, setUser] = useState('');\n  const [minAmount, setMinAmount] = useState('');\n  const [maxAmount, setMaxAmount] = useState('');\n  const [groupByWeek, setGroupByWeek] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 10;\n  const [error, setError] = useState('');\n  const [search, setSearch] = useState('');\n  const [darkMode, setDarkMode] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const stored = localStorage.getItem('dashboard-darkmode');\n      if (stored) return stored === 'true';\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\n    }\n    return false;\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  const navigate = useNavigate();\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('dashboard-darkmode', 'true');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('dashboard-darkmode', 'false');\n    }\n  }, [darkMode]);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get('http://localhost:5000/api/transactions', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\n        setTransactions(data);\n        setFiltered(data);\n      } catch (err) {\n        setError('Failed to load transactions');\n      }\n    };\n    fetchTransactions();\n  }, []);\n  useEffect(() => {\n    let result = [...transactions];\n    if (month) result = result.filter(t => new Date(t.date).getMonth() + 1 === Number(month));\n    if (status) result = result.filter(t => t.status === status);\n    if (category) result = result.filter(t => t.category === category);\n    if (user) result = result.filter(t => t.user_id === user);\n    if (minAmount) result = result.filter(t => t.amount >= parseFloat(minAmount));\n    if (maxAmount) result = result.filter(t => t.amount <= parseFloat(maxAmount));\n    if (startDate) result = result.filter(t => new Date(t.date) >= new Date(startDate));\n    if (endDate) result = result.filter(t => new Date(t.date) <= new Date(endDate));\n    if (search.trim()) {\n      const s = search.trim().toLowerCase();\n      result = result.filter(t => {\n        var _t$user_id, _t$status, _t$category, _t$description;\n        return ((_t$user_id = t.user_id) === null || _t$user_id === void 0 ? void 0 : _t$user_id.toLowerCase().includes(s)) || ((_t$status = t.status) === null || _t$status === void 0 ? void 0 : _t$status.toLowerCase().includes(s)) || ((_t$category = t.category) === null || _t$category === void 0 ? void 0 : _t$category.toLowerCase().includes(s)) || ((_t$description = t.description) === null || _t$description === void 0 ? void 0 : _t$description.toLowerCase().includes(s)) || t.amount.toString().includes(s) || new Date(t.date).toLocaleDateString().toLowerCase().includes(s);\n      });\n    }\n    setCurrentPage(1);\n    setFiltered(result);\n  }, [month, status, category, user, minAmount, maxAmount, startDate, endDate, transactions, search]);\n  const exportToCSV = () => {\n    const header = 'User ID,Status,Date,Amount,Category,Description\\n';\n    const rows = filtered.map(t => {\n      const date = new Date(t.date).toISOString().split('T')[0];\n      return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\n    }).join('\\n');\n    const blob = new Blob([header + rows], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'transactions.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  const uniqueCategories = Array.from(new Set(transactions.map(t => t.category)));\n  const uniqueUsers = Array.from(new Set(transactions.map(t => t.user_id)));\n  const getWeek = dateStr => {\n    const date = new Date(dateStr);\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfWeek = firstDay.getDay();\n    const adjustedDate = date.getDate() + dayOfWeek;\n    return Math.ceil(adjustedDate / 7);\n  };\n  const categoryData = Object.entries(filtered.reduce((acc, t) => {\n    const key = t.category || 'Uncategorized';\n    acc[key] = (acc[key] || 0) + t.amount;\n    return acc;\n  }, {})).map(([name, value]) => ({\n    name,\n    value\n  }));\n  const barData = groupByWeek ? Array.from({\n    length: 12\n  }, (_, i) => {\n    const monthName = new Date(0, i).toLocaleString('default', {\n      month: 'short'\n    });\n    const weeks = [0, 0, 0, 0, 0];\n    filtered.filter(t => new Date(t.date).getMonth() === i).forEach(t => {\n      const week = getWeek(t.date);\n      weeks[week - 1] += t.amount;\n    });\n    return {\n      name: monthName,\n      ...weeks.reduce((acc, val, idx) => ({\n        ...acc,\n        [`W${idx + 1}`]: val\n      }), {})\n    };\n  }) : Array.from({\n    length: 12\n  }, (_, i) => {\n    const monthName = new Date(0, i).toLocaleString('default', {\n      month: 'short'\n    });\n    const total = filtered.filter(t => new Date(t.date).getMonth() === i).reduce((sum, t) => sum + t.amount, 0);\n    return {\n      name: monthName,\n      total\n    };\n  });\n  const totalEntries = filtered.length;\n  const totalPages = Math.ceil(totalEntries / rowsPerPage);\n  const startIndex = (currentPage - 1) * rowsPerPage;\n  const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\n\n  // Summary metrics\n  const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\n  const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\n  const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-white dark:bg-gray-800 shadow-md p-4 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-blue-600 dark:text-blue-300\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowFilters(!showFilters),\n        className: \"flex items-center justify-between w-full p-2 mb-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: showFilters ? '‚ñ≤' : '‚ñº'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: month,\n          onChange: e => setMonth(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this), Array.from({\n            length: 12\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: new Date(0, i).toLocaleString('default', {\n              month: 'long'\n            })\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: status,\n          onChange: e => setStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Paid\",\n            children: \"Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this), uniqueCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: user,\n          onChange: e => setUser(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this), uniqueUsers.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          placeholder: \"Min \\u20B9\",\n          value: minAmount,\n          onChange: e => setMinAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          placeholder: \"Max \\u20B9\",\n          value: maxAmount,\n          onChange: e => setMaxAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportToCSV,\n            className: \"flex-1 bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700 text-sm\",\n            children: \"Export CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setMonth('');\n              setStatus('');\n              setCategory('');\n              setUser('');\n              setMinAmount('');\n              setMaxAmount('');\n              setStartDate('');\n              setEndDate('');\n              setGroupByWeek(false);\n              setCurrentPage(1);\n              setFiltered(transactions);\n              setSearch('');\n            },\n            className: \"flex-1 bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600 text-sm\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-blue-600 dark:text-blue-300\",\n          children: \"Transaction Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-3 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\",\n            placeholder: \"\\uD83D\\uDD0D Search transactions...\",\n            value: search,\n            onChange: e => setSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDarkMode(d => !d),\n            className: \"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\",\n            title: \"Toggle dark mode\",\n            children: darkMode ? '‚òÄÔ∏è' : 'üåô'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 dark:text-gray-400 text-sm\",\n            children: \"Total Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold text-blue-700 dark:text-blue-300\",\n            children: filtered.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 dark:text-gray-400 text-sm\",\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold text-green-700 dark:text-green-400\",\n            children: [\"\\u20B9\", totalAmount.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 dark:text-gray-400 text-sm\",\n            children: \"Paid Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold text-green-600 dark:text-green-300\",\n            children: [\"\\u20B9\", totalPaid.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 dark:text-gray-400 text-sm\",\n            children: \"Pending Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold text-yellow-600 dark:text-yellow-400\",\n            children: [\"\\u20B9\", totalPending.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded shadow p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4 text-blue-600 dark:text-blue-300\",\n            children: \"\\uD83D\\uDCC8 Spending by Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: categoryData,\n                dataKey: \"value\",\n                nameKey: \"name\",\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 100,\n                fill: \"#8884d8\",\n                label: true,\n                children: categoryData.map((_, i) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[i % COLORS.length]\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 47\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded shadow p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4 text-green-600 dark:text-green-300\",\n            children: \"\\uD83D\\uDCCA Monthly Spending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: barData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\",\n                stroke: darkMode ? '#ddd' : '#333'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                stroke: darkMode ? '#ddd' : '#333'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 17\n              }, this), groupByWeek ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: w,\n                fill: COLORS[i % COLORS.length]\n              }, w, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 66\n              }, this)) : /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"total\",\n                fill: \"#82ca9d\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center gap-2 text-sm dark:text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: groupByWeek,\n            onChange: e => setGroupByWeek(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this), \"Group by Week\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-300\",\n          children: [\"Showing \", startIndex + 1, \"\\u2013\", Math.min(startIndex + rowsPerPage, totalEntries), \" of \", totalEntries, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full bg-white dark:bg-gray-800 rounded shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-blue-600 dark:bg-blue-900 text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3 text-left\",\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3 text-left\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3 text-left\",\n                children: \"Amount (\\u20B9)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3 text-left\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3 text-left\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3 text-left\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentEntries.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 6,\n                className: \"p-4 text-center text-gray-500 dark:text-gray-400\",\n                children: \"No transactions found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this) : currentEntries.map(t => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t hover:bg-gray-50 dark:hover:bg-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3\",\n                children: t.user_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3\",\n                children: new Date(t.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3\",\n                children: [\"\\u20B9\", t.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3\",\n                children: t.category || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3\",\n                children: t.description || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: `p-3 font-medium ${t.status === 'Paid' ? 'text-green-600 dark:text-green-400' : 'text-yellow-600 dark:text-yellow-400'}`,\n                children: t.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 21\n              }, this)]\n            }, t._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center gap-4 mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n          className: \"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\",\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dark:text-gray-200\",\n          children: \"Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 1,\n          max: totalPages,\n          value: currentPage,\n          onChange: e => {\n            const val = parseInt(e.target.value);\n            if (!isNaN(val) && val >= 1 && val <= totalPages) {\n              setCurrentPage(val);\n            }\n          },\n          className: \"w-16 p-1 border rounded text-center dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dark:text-gray-200\",\n          children: [\"of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n          className: \"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"G4bxFE1luZoBTAJbqHfhxN0hMQs=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","axios","useNavigate","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Dashboard","_s","transactions","setTransactions","filtered","setFiltered","month","setMonth","status","setStatus","category","setCategory","user","setUser","minAmount","setMinAmount","maxAmount","setMaxAmount","groupByWeek","setGroupByWeek","startDate","setStartDate","endDate","setEndDate","currentPage","setCurrentPage","rowsPerPage","error","setError","search","setSearch","darkMode","setDarkMode","window","stored","localStorage","getItem","matchMedia","matches","showFilters","setShowFilters","navigate","COLORS","document","documentElement","classList","add","setItem","remove","fetchTransactions","token","res","get","headers","Authorization","data","Array","isArray","err","result","filter","t","Date","date","getMonth","Number","user_id","amount","parseFloat","trim","s","toLowerCase","_t$user_id","_t$status","_t$category","_t$description","includes","description","toString","toLocaleDateString","exportToCSV","header","rows","map","toISOString","split","join","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","handleLogout","removeItem","uniqueCategories","from","Set","uniqueUsers","getWeek","dateStr","firstDay","getFullYear","dayOfWeek","getDay","adjustedDate","getDate","Math","ceil","categoryData","Object","entries","reduce","acc","key","name","value","barData","length","_","i","monthName","toLocaleString","weeks","forEach","week","val","idx","total","sum","totalEntries","totalPages","startIndex","currentEntries","slice","totalAmount","totalPaid","totalPending","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","cat","u","placeholder","d","title","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","label","strokeDasharray","stroke","w","checked","min","colSpan","_id","p","max","parseInt","isNaN","_c","$RefreshReg$"],"sources":["C:/Users/Asus/looper-frontend/src/pages/Dashboard.tsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import {\r\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\r\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer\r\n// } from 'recharts';\r\n\r\n// interface Transaction {\r\n//   _id: string;\r\n//   date: string;\r\n//   amount: number;\r\n//   category: string;\r\n//   description?: string;\r\n//   user_id: string;\r\n//   status: 'Paid' | 'Pending';\r\n// }\r\n\r\n// function Dashboard() {\r\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\r\n//   const [month, setMonth] = useState('');\r\n//   const [status, setStatus] = useState('');\r\n//   const [category, setCategory] = useState('');\r\n//   const [user, setUser] = useState('');\r\n//   const [minAmount, setMinAmount] = useState('');\r\n//   const [maxAmount, setMaxAmount] = useState('');\r\n//   const [groupByWeek, setGroupByWeek] = useState(false);\r\n//   const [startDate, setStartDate] = useState('');\r\n//   const [endDate, setEndDate] = useState('');\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const rowsPerPage = 10;\r\n//   const [error, setError] = useState('');\r\n//   const [search, setSearch] = useState('');\r\n//   const [darkMode, setDarkMode] = useState(() => {\r\n//     // On first load, check localStorage or system preference\r\n//     if (typeof window !== \"undefined\") {\r\n//       const stored = localStorage.getItem('dashboard-darkmode');\r\n//       if (stored) return stored === 'true';\r\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n//     }\r\n//     return false;\r\n//   });\r\n\r\n//   const navigate = useNavigate();\r\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\r\n\r\n//   // Apply dark mode class to <html>\r\n//   useEffect(() => {\r\n//     if (darkMode) {\r\n//       document.documentElement.classList.add('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'true');\r\n//     } else {\r\n//       document.documentElement.classList.remove('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'false');\r\n//     }\r\n//   }, [darkMode]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchTransactions = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\r\n//         setTransactions(data);\r\n//         setFiltered(data);\r\n//       } catch (err) {\r\n//         setError('Failed to load transactions');\r\n//       }\r\n//     };\r\n//     fetchTransactions();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     let result = [...transactions];\r\n\r\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\r\n//     if (status) result = result.filter((t) => t.status === status);\r\n//     if (category) result = result.filter((t) => t.category === category);\r\n//     if (user) result = result.filter((t) => t.user_id === user);\r\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\r\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\r\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\r\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\r\n\r\n//     // Real-time search filter\r\n//     if (search.trim()) {\r\n//       const s = search.trim().toLowerCase();\r\n//       result = result.filter((t) =>\r\n//         t.user_id?.toLowerCase().includes(s) ||\r\n//         t.status?.toLowerCase().includes(s) ||\r\n//         t.category?.toLowerCase().includes(s) ||\r\n//         t.description?.toLowerCase().includes(s) ||\r\n//         t.amount.toString().includes(s) ||\r\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\r\n//       );\r\n//     }\r\n\r\n//     setCurrentPage(1);\r\n//     setFiltered(result);\r\n//   }, [\r\n//     month, status, category, user, minAmount, maxAmount,\r\n//     startDate, endDate, transactions, search\r\n//   ]);\r\n\r\n//   const exportToCSV = () => {\r\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\r\n//     const rows = filtered\r\n//       .map((t) => {\r\n//         const date = new Date(t.date).toISOString().split('T')[0];\r\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\r\n//       })\r\n//       .join('\\n');\r\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.href = url;\r\n//     a.download = 'transactions.csv';\r\n//     a.click();\r\n//     URL.revokeObjectURL(url);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\r\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\r\n\r\n//   const getWeek = (dateStr: string) => {\r\n//     const date = new Date(dateStr);\r\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n//     const dayOfWeek = firstDay.getDay();\r\n//     const adjustedDate = date.getDate() + dayOfWeek;\r\n//     return Math.ceil(adjustedDate / 7);\r\n//   };\r\n\r\n//   const categoryData = Object.entries(\r\n//     filtered.reduce((acc, t) => {\r\n//       const key = t.category || 'Uncategorized';\r\n//       acc[key] = (acc[key] || 0) + t.amount;\r\n//       return acc;\r\n//     }, {} as Record<string, number>)\r\n//   ).map(([name, value]) => ({ name, value }));\r\n\r\n//   const barData = groupByWeek\r\n//     ? Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const weeks = [0, 0, 0, 0, 0];\r\n//         filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .forEach((t) => {\r\n//             const week = getWeek(t.date);\r\n//             weeks[week - 1] += t.amount;\r\n//           });\r\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\r\n//       })\r\n//     : Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const total = filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .reduce((sum, t) => sum + t.amount, 0);\r\n//         return { name: monthName, total };\r\n//       });\r\n\r\n//   const totalEntries = filtered.length;\r\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\r\n//   const startIndex = (currentPage - 1) * rowsPerPage;\r\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n//   // --- SUMMARY METRICS LOGIC ---\r\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\r\n\r\n//   return (\r\n//     <div className=\"p-6 min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\r\n//       <div className=\"flex justify-between items-center mb-6\">\r\n//         <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">üìä Dashboard</h1>\r\n//         <div className=\"flex gap-3 items-center\">\r\n//           <button\r\n//             onClick={() => setDarkMode(d => !d)}\r\n//             className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\r\n//             title=\"Toggle dark mode\"\r\n//           >\r\n//             {darkMode ? '‚òÄÔ∏è' : 'üåô'}\r\n//           </button>\r\n//           <button\r\n//             onClick={handleLogout}\r\n//             className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\r\n//           >\r\n//             Logout\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* --- REAL-TIME SEARCH INPUT --- */}\r\n//       <div className=\"mb-4 flex\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"w-full md:w-1/3 p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\r\n//           placeholder=\"üîç Search transactions (user, status, amount, date, category, description)...\"\r\n//           value={search}\r\n//           onChange={e => setSearch(e.target.value)}\r\n//         />\r\n//       </div>\r\n\r\n//       {/* --- SUMMARY METRICS SECTION --- */}\r\n//       <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\r\n//           <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\r\n//         </div>\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\r\n//           <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">‚Çπ{totalAmount.toLocaleString()}</span>\r\n//         </div>\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\r\n//           <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">‚Çπ{totalPaid.toLocaleString()}</span>\r\n//         </div>\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\r\n//           <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">‚Çπ{totalPending.toLocaleString()}</span>\r\n//         </div>\r\n//       </div>\r\n//       {/* --- END SUMMARY METRICS SECTION --- */}\r\n\r\n//       {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n//       {/* Filters */}\r\n//       <div className=\"grid md:grid-cols-3 lg:grid-cols-6 gap-4 mb-4\">\r\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\r\n//           <option value=\"\">All Months</option>\r\n//           {Array.from({ length: 12 }, (_, i) => (\r\n//             <option key={i + 1} value={i + 1}>\r\n//               {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\r\n//           <option value=\"\">All Status</option>\r\n//           <option value=\"Paid\">Paid</option>\r\n//           <option value=\"Pending\">Pending</option>\r\n//         </select>\r\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n//           <option value=\"\">All Categories</option>\r\n//           {uniqueCategories.map((cat) => (\r\n//             <option key={cat}>{cat}</option>\r\n//           ))}\r\n//         </select>\r\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\r\n//           <option value=\"\">All Users</option>\r\n//           {uniqueUsers.map((u) => (\r\n//             <option key={u}>{u}</option>\r\n//           ))}\r\n//         </select>\r\n//         <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Min ‚Çπ\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\r\n//         <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Max ‚Çπ\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\r\n//       </div>\r\n//       <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n//         <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n//         <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n//         <button onClick={exportToCSV} className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\">Export CSV</button>\r\n//         <button onClick={() => {\r\n//           setMonth(''); setStatus(''); setCategory(''); setUser('');\r\n//           setMinAmount(''); setMaxAmount(''); setStartDate('');\r\n//           setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\r\n//           setFiltered(transactions);\r\n//           setSearch('');\r\n//         }} className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\">Reset Filters</button>\r\n//       </div>\r\n\r\n//       <label className=\"flex items-center gap-2 mb-4 text-sm dark:text-gray-300\">\r\n//         <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\r\n//         Group by Week\r\n//       </label>\r\n\r\n//       {/* Table */}\r\n//       <div className=\"overflow-x-auto mb-2\">\r\n//         <table className=\"w-full bg-white dark:bg-gray-800 rounded shadow-md\">\r\n//           <thead className=\"bg-blue-600 dark:bg-blue-900 text-white\">\r\n//             <tr>\r\n//               <th className=\"p-3 text-left\">User ID</th>\r\n//               <th className=\"p-3 text-left\">Date</th>\r\n//               <th className=\"p-3 text-left\">Amount (‚Çπ)</th>\r\n//               <th className=\"p-3 text-left\">Category</th>\r\n//               <th className=\"p-3 text-left\">Description</th>\r\n//               <th className=\"p-3 text-left\">Status</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {currentEntries.length === 0 ? (\r\n//               <tr>\r\n//                 <td colSpan={6} className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No transactions found.</td>\r\n//               </tr>\r\n//             ) : (\r\n//               currentEntries.map((t) => (\r\n//                 <tr key={t._id} className=\"border-t hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                   <td className=\"p-3\">{t.user_id}</td>\r\n//                   <td className=\"p-3\">{new Date(t.date).toLocaleDateString()}</td>\r\n//                   <td className=\"p-3\">‚Çπ{t.amount}</td>\r\n//                   <td className=\"p-3\">{t.category || 'N/A'}</td>\r\n//                   <td className=\"p-3\">{t.description || '-'}</td>\r\n//                   <td className={`p-3 font-medium ${t.status === 'Paid' ? 'text-green-600 dark:text-green-400' : 'text-yellow-600 dark:text-yellow-400'}`}>{t.status}</td>\r\n//                 </tr>\r\n//               ))\r\n//             )}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n\r\n//       <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-2 text-center\">\r\n//         Showing {startIndex + 1}‚Äì{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\r\n//       </div>\r\n\r\n//       <div className=\"flex items-center justify-center gap-4 mb-10\">\r\n//         <button onClick={() => setCurrentPage((p) => Math.max(1, p - 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\r\n//           Prev\r\n//         </button>\r\n//         <span className=\"dark:text-gray-200\">Page</span>\r\n//         <input\r\n//           type=\"number\"\r\n//           min={1}\r\n//           max={totalPages}\r\n//           value={currentPage}\r\n//           onChange={(e) => {\r\n//             const val = parseInt(e.target.value);\r\n//             if (!isNaN(val) && val >= 1 && val <= totalPages) {\r\n//               setCurrentPage(val);\r\n//             }\r\n//           }}\r\n//           className=\"w-16 p-1 border rounded text-center dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\"\r\n//         />\r\n//         <span className=\"dark:text-gray-200\">of {totalPages}</span>\r\n//         <button onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\r\n//           Next\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Charts */}\r\n//       <h2 className=\"text-xl font-semibold mt-8 mb-4 text-blue-600 dark:text-blue-300\">üìà Spending by Category</h2>\r\n//       <ResponsiveContainer width=\"100%\" height={300}>\r\n//         <PieChart>\r\n//           <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\r\n//             {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\r\n//           </Pie>\r\n//           <Tooltip />\r\n//           <Legend />\r\n//         </PieChart>\r\n//       </ResponsiveContainer>\r\n\r\n//       <h2 className=\"text-xl font-semibold mt-8 mb-4 text-green-600 dark:text-green-300\">üìä Monthly Spending</h2>\r\n//       <ResponsiveContainer width=\"100%\" height={300}>\r\n//         <BarChart data={barData}>\r\n//           <CartesianGrid strokeDasharray=\"3 3\" />\r\n//           <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\r\n//           <YAxis stroke={darkMode ? '#ddd' : '#333'} />\r\n//           <Tooltip />\r\n//           <Legend />\r\n//           {groupByWeek\r\n//             ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\r\n//             : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\r\n//         </BarChart>\r\n//       </ResponsiveContainer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\r\n  XAxis, YAxis, CartesianGrid, ResponsiveContainer\r\n} from 'recharts';\r\n\r\ninterface Transaction {\r\n  _id: string;\r\n  date: string;\r\n  amount: number;\r\n  category: string;\r\n  description?: string;\r\n  user_id: string;\r\n  status: 'Paid' | 'Pending';\r\n}\r\n\r\nfunction Dashboard() {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [filtered, setFiltered] = useState<Transaction[]>([]);\r\n  const [month, setMonth] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [user, setUser] = useState('');\r\n  const [minAmount, setMinAmount] = useState('');\r\n  const [maxAmount, setMaxAmount] = useState('');\r\n  const [groupByWeek, setGroupByWeek] = useState(false);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 10;\r\n  const [error, setError] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const stored = localStorage.getItem('dashboard-darkmode');\r\n      if (stored) return stored === 'true';\r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    }\r\n    return false;\r\n  });\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('dashboard-darkmode', 'true');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('dashboard-darkmode', 'false');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await axios.get('http://localhost:5000/api/transactions', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\r\n        setTransactions(data);\r\n        setFiltered(data);\r\n      } catch (err) {\r\n        setError('Failed to load transactions');\r\n      }\r\n    };\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let result = [...transactions];\r\n\r\n    if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\r\n    if (status) result = result.filter((t) => t.status === status);\r\n    if (category) result = result.filter((t) => t.category === category);\r\n    if (user) result = result.filter((t) => t.user_id === user);\r\n    if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\r\n    if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\r\n    if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\r\n    if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\r\n\r\n    if (search.trim()) {\r\n      const s = search.trim().toLowerCase();\r\n      result = result.filter((t) =>\r\n        t.user_id?.toLowerCase().includes(s) ||\r\n        t.status?.toLowerCase().includes(s) ||\r\n        t.category?.toLowerCase().includes(s) ||\r\n        t.description?.toLowerCase().includes(s) ||\r\n        t.amount.toString().includes(s) ||\r\n        new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\r\n      );\r\n    }\r\n\r\n    setCurrentPage(1);\r\n    setFiltered(result);\r\n  }, [\r\n    month, status, category, user, minAmount, maxAmount,\r\n    startDate, endDate, transactions, search\r\n  ]);\r\n\r\n  const exportToCSV = () => {\r\n    const header = 'User ID,Status,Date,Amount,Category,Description\\n';\r\n    const rows = filtered\r\n      .map((t) => {\r\n        const date = new Date(t.date).toISOString().split('T')[0];\r\n        return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\r\n      })\r\n      .join('\\n');\r\n    const blob = new Blob([header + rows], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'transactions.csv';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  };\r\n\r\n  const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\r\n  const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\r\n\r\n  const getWeek = (dateStr: string) => {\r\n    const date = new Date(dateStr);\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfWeek = firstDay.getDay();\r\n    const adjustedDate = date.getDate() + dayOfWeek;\r\n    return Math.ceil(adjustedDate / 7);\r\n  };\r\n\r\n  const categoryData = Object.entries(\r\n    filtered.reduce((acc, t) => {\r\n      const key = t.category || 'Uncategorized';\r\n      acc[key] = (acc[key] || 0) + t.amount;\r\n      return acc;\r\n    }, {} as Record<string, number>)\r\n  ).map(([name, value]) => ({ name, value }));\r\n\r\n  const barData = groupByWeek\r\n    ? Array.from({ length: 12 }, (_, i) => {\r\n        const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n        const weeks = [0, 0, 0, 0, 0];\r\n        filtered\r\n          .filter((t) => new Date(t.date).getMonth() === i)\r\n          .forEach((t) => {\r\n            const week = getWeek(t.date);\r\n            weeks[week - 1] += t.amount;\r\n          });\r\n        return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\r\n      })\r\n    : Array.from({ length: 12 }, (_, i) => {\r\n        const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n        const total = filtered\r\n          .filter((t) => new Date(t.date).getMonth() === i)\r\n          .reduce((sum, t) => sum + t.amount, 0);\r\n        return { name: monthName, total };\r\n      });\r\n\r\n  const totalEntries = filtered.length;\r\n  const totalPages = Math.ceil(totalEntries / rowsPerPage);\r\n  const startIndex = (currentPage - 1) * rowsPerPage;\r\n  const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n  // Summary metrics\r\n  const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\r\n  const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\r\n  const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-64 bg-white dark:bg-gray-800 shadow-md p-4 flex flex-col\">\r\n        <h2 className=\"text-xl font-bold mb-4 text-blue-600 dark:text-blue-300\">Dashboard</h2>\r\n        \r\n        {/* Filter toggle button */}\r\n        <button \r\n          onClick={() => setShowFilters(!showFilters)}\r\n          className=\"flex items-center justify-between w-full p-2 mb-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n        >\r\n          <span className=\"font-medium\">Filters</span>\r\n          <span>{showFilters ? '‚ñ≤' : '‚ñº'}</span>\r\n        </button>\r\n        \r\n        {/* Filters section - conditionally rendered */}\r\n        {showFilters && (\r\n          <div className=\"space-y-4 mb-4\">\r\n            <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\r\n              <option value=\"\">All Months</option>\r\n              {Array.from({ length: 12 }, (_, i) => (\r\n                <option key={i + 1} value={i + 1}>\r\n                  {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            \r\n            <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\r\n              <option value=\"\">All Status</option>\r\n              <option value=\"Paid\">Paid</option>\r\n              <option value=\"Pending\">Pending</option>\r\n            </select>\r\n            \r\n            <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n              <option value=\"\">All Categories</option>\r\n              {uniqueCategories.map((cat) => (\r\n                <option key={cat}>{cat}</option>\r\n              ))}\r\n            </select>\r\n            \r\n            <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\r\n              <option value=\"\">All Users</option>\r\n              {uniqueUsers.map((u) => (\r\n                <option key={u}>{u}</option>\r\n              ))}\r\n            </select>\r\n            \r\n            <input type=\"number\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" placeholder=\"Min ‚Çπ\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\r\n            <input type=\"number\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" placeholder=\"Max ‚Çπ\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\r\n            \r\n            <input type=\"date\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n            <input type=\"date\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n            \r\n            <div className=\"flex space-x-2\">\r\n              <button onClick={exportToCSV} className=\"flex-1 bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700 text-sm\">Export CSV</button>\r\n              <button onClick={() => {\r\n                setMonth(''); setStatus(''); setCategory(''); setUser('');\r\n                setMinAmount(''); setMaxAmount(''); setStartDate('');\r\n                setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\r\n                setFiltered(transactions);\r\n                setSearch('');\r\n              }} className=\"flex-1 bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600 text-sm\">Reset</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex-1 p-6\">\r\n        {/* Header with search and dark mode toggle */}\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">Transaction Dashboard</h1>\r\n          <div className=\"flex gap-3 items-center\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\r\n              placeholder=\"üîç Search transactions...\"\r\n              value={search}\r\n              onChange={e => setSearch(e.target.value)}\r\n            />\r\n            <button\r\n              onClick={() => setDarkMode(d => !d)}\r\n              className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\r\n              title=\"Toggle dark mode\"\r\n            >\r\n              {darkMode ? '‚òÄÔ∏è' : 'üåô'}\r\n            </button>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Summary metrics */}\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n            <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\r\n            <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n            <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\r\n            <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">‚Çπ{totalAmount.toLocaleString()}</span>\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n            <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\r\n            <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">‚Çπ{totalPaid.toLocaleString()}</span>\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n            <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\r\n            <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">‚Çπ{totalPending.toLocaleString()}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n        {/* Charts - Side by side */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-blue-600 dark:text-blue-300\">üìà Spending by Category</h2>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <PieChart>\r\n                <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\r\n                  {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-green-600 dark:text-green-300\">üìä Monthly Spending</h2>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={barData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\r\n                <YAxis stroke={darkMode ? '#ddd' : '#333'} />\r\n                <Tooltip />\r\n                <Legend />\r\n                {groupByWeek\r\n                  ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\r\n                  : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Group by week toggle */}\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <label className=\"flex items-center gap-2 text-sm dark:text-gray-300\">\r\n            <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\r\n            Group by Week\r\n          </label>\r\n          <div className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n            Showing {startIndex + 1}‚Äì{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\r\n          </div>\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto mb-2\">\r\n          <table className=\"w-full bg-white dark:bg-gray-800 rounded shadow-md\">\r\n            <thead className=\"bg-blue-600 dark:bg-blue-900 text-white\">\r\n              <tr>\r\n                <th className=\"p-3 text-left\">User ID</th>\r\n                <th className=\"p-3 text-left\">Date</th>\r\n                <th className=\"p-3 text-left\">Amount (‚Çπ)</th>\r\n                <th className=\"p-3 text-left\">Category</th>\r\n                <th className=\"p-3 text-left\">Description</th>\r\n                <th className=\"p-3 text-left\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentEntries.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={6} className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No transactions found.</td>\r\n                </tr>\r\n              ) : (\r\n                currentEntries.map((t) => (\r\n                  <tr key={t._id} className=\"border-t hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                    <td className=\"p-3\">{t.user_id}</td>\r\n                    <td className=\"p-3\">{new Date(t.date).toLocaleDateString()}</td>\r\n                    <td className=\"p-3\">‚Çπ{t.amount}</td>\r\n                    <td className=\"p-3\">{t.category || 'N/A'}</td>\r\n                    <td className=\"p-3\">{t.description || '-'}</td>\r\n                    <td className={`p-3 font-medium ${t.status === 'Paid' ? 'text-green-600 dark:text-green-400' : 'text-yellow-600 dark:text-yellow-400'}`}>{t.status}</td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        <div className=\"flex items-center justify-center gap-4 mb-10\">\r\n          <button onClick={() => setCurrentPage((p) => Math.max(1, p - 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\r\n            Prev\r\n          </button>\r\n          <span className=\"dark:text-gray-200\">Page</span>\r\n          <input\r\n            type=\"number\"\r\n            min={1}\r\n            max={totalPages}\r\n            value={currentPage}\r\n            onChange={(e) => {\r\n              const val = parseInt(e.target.value);\r\n              if (!isNaN(val) && val >= 1 && val <= totalPages) {\r\n                setCurrentPage(val);\r\n              }\r\n            }}\r\n            className=\"w-16 p-1 border rounded text-center dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\"\r\n          />\r\n          <span className=\"dark:text-gray-200\">of {totalPages}</span>\r\n          <button onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}