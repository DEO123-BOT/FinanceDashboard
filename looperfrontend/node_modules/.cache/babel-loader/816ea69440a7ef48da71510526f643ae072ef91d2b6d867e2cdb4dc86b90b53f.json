{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\looper-frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [month, setMonth] = useState('');\n  const [status, setStatus] = useState('');\n  const [category, setCategory] = useState('');\n  const [user, setUser] = useState('');\n  const [minAmount, setMinAmount] = useState('');\n  const [maxAmount, setMaxAmount] = useState('');\n  const [groupByWeek, setGroupByWeek] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 10;\n  const [error, setError] = useState('');\n  const [search, setSearch] = useState('');\n  const [darkMode, setDarkMode] = useState(() => {\n    // On first load, check localStorage or system preference\n    if (typeof window !== \"undefined\") {\n      const stored = localStorage.getItem('dashboard-darkmode');\n      if (stored) return stored === 'true';\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\n    }\n    return false;\n  });\n  const navigate = useNavigate();\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\n\n  // Apply dark mode class to <html>\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('dashboard-darkmode', 'true');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('dashboard-darkmode', 'false');\n    }\n  }, [darkMode]);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get('http://localhost:5000/api/transactions', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\n        setTransactions(data);\n        setFiltered(data);\n      } catch (err) {\n        setError('Failed to load transactions');\n      }\n    };\n    fetchTransactions();\n  }, []);\n  useEffect(() => {\n    let result = [...transactions];\n    if (month) result = result.filter(t => new Date(t.date).getMonth() + 1 === Number(month));\n    if (status) result = result.filter(t => t.status === status);\n    if (category) result = result.filter(t => t.category === category);\n    if (user) result = result.filter(t => t.user_id === user);\n    if (minAmount) result = result.filter(t => t.amount >= parseFloat(minAmount));\n    if (maxAmount) result = result.filter(t => t.amount <= parseFloat(maxAmount));\n    if (startDate) result = result.filter(t => new Date(t.date) >= new Date(startDate));\n    if (endDate) result = result.filter(t => new Date(t.date) <= new Date(endDate));\n\n    // Real-time search filter\n    if (search.trim()) {\n      const s = search.trim().toLowerCase();\n      result = result.filter(t => {\n        var _t$user_id, _t$status, _t$category, _t$description;\n        return ((_t$user_id = t.user_id) === null || _t$user_id === void 0 ? void 0 : _t$user_id.toLowerCase().includes(s)) || ((_t$status = t.status) === null || _t$status === void 0 ? void 0 : _t$status.toLowerCase().includes(s)) || ((_t$category = t.category) === null || _t$category === void 0 ? void 0 : _t$category.toLowerCase().includes(s)) || ((_t$description = t.description) === null || _t$description === void 0 ? void 0 : _t$description.toLowerCase().includes(s)) || t.amount.toString().includes(s) || new Date(t.date).toLocaleDateString().toLowerCase().includes(s);\n      });\n    }\n    setCurrentPage(1);\n    setFiltered(result);\n  }, [month, status, category, user, minAmount, maxAmount, startDate, endDate, transactions, search]);\n  const exportToCSV = () => {\n    const header = 'User ID,Status,Date,Amount,Category,Description\\n';\n    const rows = filtered.map(t => {\n      const date = new Date(t.date).toISOString().split('T')[0];\n      return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\n    }).join('\\n');\n    const blob = new Blob([header + rows], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'transactions.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  const uniqueCategories = Array.from(new Set(transactions.map(t => t.category)));\n  const uniqueUsers = Array.from(new Set(transactions.map(t => t.user_id)));\n  const getWeek = dateStr => {\n    const date = new Date(dateStr);\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfWeek = firstDay.getDay();\n    const adjustedDate = date.getDate() + dayOfWeek;\n    return Math.ceil(adjustedDate / 7);\n  };\n  const categoryData = Object.entries(filtered.reduce((acc, t) => {\n    const key = t.category || 'Uncategorized';\n    acc[key] = (acc[key] || 0) + t.amount;\n    return acc;\n  }, {})).map(([name, value]) => ({\n    name,\n    value\n  }));\n  const barData = groupByWeek ? Array.from({\n    length: 12\n  }, (_, i) => {\n    const monthName = new Date(0, i).toLocaleString('default', {\n      month: 'short'\n    });\n    const weeks = [0, 0, 0, 0, 0];\n    filtered.filter(t => new Date(t.date).getMonth() === i).forEach(t => {\n      const week = getWeek(t.date);\n      weeks[week - 1] += t.amount;\n    });\n    return {\n      name: monthName,\n      ...weeks.reduce((acc, val, idx) => ({\n        ...acc,\n        [`W${idx + 1}`]: val\n      }), {})\n    };\n  }) : Array.from({\n    length: 12\n  }, (_, i) => {\n    const monthName = new Date(0, i).toLocaleString('default', {\n      month: 'short'\n    });\n    const total = filtered.filter(t => new Date(t.date).getMonth() === i).reduce((sum, t) => sum + t.amount, 0);\n    return {\n      name: monthName,\n      total\n    };\n  });\n  const totalEntries = filtered.length;\n  const totalPages = Math.ceil(totalEntries / rowsPerPage);\n  const startIndex = (currentPage - 1) * rowsPerPage;\n  const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\n\n  // --- SUMMARY METRICS LOGIC ---\n  const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\n  const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\n  const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-blue-600 dark:text-blue-300\",\n        children: \"\\uD83D\\uDCCA Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDarkMode(d => !d),\n          className: \"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\",\n          title: \"Toggle dark mode\",\n          children: darkMode ? '☀️' : '🌙'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"w-full md:w-1/3 p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\",\n        placeholder: \"\\uD83D\\uDD0D Search transactions (user, status, amount, date, category, description)...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500 dark:text-gray-400 text-sm\",\n          children: \"Total Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-bold text-blue-700 dark:text-blue-300\",\n          children: filtered.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500 dark:text-gray-400 text-sm\",\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-bold text-green-700 dark:text-green-400\",\n          children: [\"\\u20B9\", totalAmount.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500 dark:text-gray-400 text-sm\",\n          children: \"Paid Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-bold text-green-600 dark:text-green-300\",\n          children: [\"\\u20B9\", totalPaid.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500 dark:text-gray-400 text-sm\",\n          children: \"Pending Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-bold text-yellow-600 dark:text-yellow-400\",\n          children: [\"\\u20B9\", totalPending.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-3 lg:grid-cols-6 gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\",\n        value: month,\n        onChange: e => setMonth(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), Array.from({\n          length: 12\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i + 1,\n          children: new Date(0, i).toLocaleString('default', {\n            month: 'long'\n          })\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\",\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Paid\",\n          children: \"Paid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\",\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), uniqueCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\",\n        value: user,\n        onChange: e => setUser(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), uniqueUsers.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: u\n        }, u, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\",\n        placeholder: \"Min \\u20B9\",\n        value: minAmount,\n        onChange: e => setMinAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\",\n        placeholder: \"Max \\u20B9\",\n        value: maxAmount,\n        onChange: e => setMaxAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToCSV,\n        className: \"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\",\n        children: \"Export CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setMonth('');\n          setStatus('');\n          setCategory('');\n          setUser('');\n          setMinAmount('');\n          setMaxAmount('');\n          setStartDate('');\n          setEndDate('');\n          setGroupByWeek(false);\n          setCurrentPage(1);\n          setFiltered(transactions);\n          setSearch('');\n        },\n        className: \"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\",\n        children: \"Reset Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"flex items-center gap-2 mb-4 text-sm dark:text-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: groupByWeek,\n        onChange: e => setGroupByWeek(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), \"Group by Week\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full bg-white dark:bg-gray-800 rounded shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-blue-600 dark:bg-blue-900 text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Amount (\\u20B9)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentEntries.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 6,\n              className: \"p-4 text-center text-gray-500 dark:text-gray-400\",\n              children: \"No transactions found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this) : currentEntries.map(t => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-t hover:bg-gray-50 dark:hover:bg-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: t.user_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: new Date(t.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: [\"\\u20B9\", t.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: t.category || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: t.description || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `p-3 font-medium ${t.status === 'Paid' ? 'text-green-600 dark:text-green-400' : 'text-yellow-600 dark:text-yellow-400'}`,\n              children: t.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this)]\n          }, t._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm text-gray-600 dark:text-gray-300 mb-2 text-center\",\n      children: [\"Showing \", startIndex + 1, \"\\u2013\", Math.min(startIndex + rowsPerPage, totalEntries), \" of \", totalEntries, \" entries\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center gap-4 mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n        className: \"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\",\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dark:text-gray-200\",\n        children: \"Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 1,\n        max: totalPages,\n        value: currentPage,\n        onChange: e => {\n          const val = parseInt(e.target.value);\n          if (!isNaN(val) && val >= 1 && val <= totalPages) {\n            setCurrentPage(val);\n          }\n        },\n        className: \"w-16 p-1 border rounded text-center dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dark:text-gray-200\",\n        children: [\"of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n        className: \"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mt-8 mb-4 text-blue-600 dark:text-blue-300\",\n      children: \"\\uD83D\\uDCC8 Spending by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: categoryData,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 100,\n          fill: \"#8884d8\",\n          label: true,\n          children: categoryData.map((_, i) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[i % COLORS.length]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mt-8 mb-4 text-green-600 dark:text-green-300\",\n      children: \"\\uD83D\\uDCCA Monthly Spending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: barData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\",\n          stroke: darkMode ? '#ddd' : '#333'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: darkMode ? '#ddd' : '#333'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), groupByWeek ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: w,\n          fill: COLORS[i % COLORS.length]\n        }, w, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 60\n        }, this)) : /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"total\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"RAQmUDOWHkg89NGh6WwHf3a6xlU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import {\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer, AreaChart, Area\n// } from 'recharts';\n\n// interface Transaction {\n//   _id: string;\n//   date: string;\n//   amount: number;\n//   category: string;\n//   description?: string;\n//   user_id: string;\n//   status: 'Paid' | 'Pending';\n// }\n\n// function Dashboard() {\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\n//   const [month, setMonth] = useState('');\n//   const [status, setStatus] = useState('');\n//   const [category, setCategory] = useState('');\n//   const [user, setUser] = useState('');\n//   const [minAmount, setMinAmount] = useState('');\n//   const [maxAmount, setMaxAmount] = useState('');\n//   const [groupByWeek, setGroupByWeek] = useState(false);\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const rowsPerPage = 10;\n//   const [error, setError] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [darkMode, setDarkMode] = useState(() => {\n//     if (typeof window !== \"undefined\") {\n//       const stored = localStorage.getItem('dashboard-darkmode');\n//       if (stored) return stored === 'true';\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\n//     }\n//     return false;\n//   });\n//   const [showFilters, setShowFilters] = useState(false);\n//   const [activeTab, setActiveTab] = useState('dashboard');\n//   const [showTransactions, setShowTransactions] = useState(false);\n\n//   const navigate = useNavigate();\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\n\n//   useEffect(() => {\n//     if (darkMode) {\n//       document.documentElement.classList.add('dark');\n//       localStorage.setItem('dashboard-darkmode', 'true');\n//     } else {\n//       document.documentElement.classList.remove('dark');\n//       localStorage.setItem('dashboard-darkmode', 'false');\n//     }\n//   }, [darkMode]);\n\n//   useEffect(() => {\n//     const fetchTransactions = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\n//         setTransactions(data);\n//         setFiltered(data);\n//       } catch (err) {\n//         setError('Failed to load transactions');\n//       }\n//     };\n//     fetchTransactions();\n//   }, []);\n\n//   useEffect(() => {\n//     let result = [...transactions];\n\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\n//     if (status) result = result.filter((t) => t.status === status);\n//     if (category) result = result.filter((t) => t.category === category);\n//     if (user) result = result.filter((t) => t.user_id === user);\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\n\n//     if (search.trim()) {\n//       const s = search.trim().toLowerCase();\n//       result = result.filter((t) =>\n//         t.user_id?.toLowerCase().includes(s) ||\n//         t.status?.toLowerCase().includes(s) ||\n//         t.category?.toLowerCase().includes(s) ||\n//         t.description?.toLowerCase().includes(s) ||\n//         t.amount.toString().includes(s) ||\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\n//       );\n//     }\n\n//     setCurrentPage(1);\n//     setFiltered(result);\n//   }, [\n//     month, status, category, user, minAmount, maxAmount,\n//     startDate, endDate, transactions, search\n//   ]);\n\n//   const exportToCSV = () => {\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\n//     const rows = filtered\n//       .map((t) => {\n//         const date = new Date(t.date).toISOString().split('T')[0];\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\n//       })\n//       .join('\\n');\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = 'transactions.csv';\n//     a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     navigate('/');\n//   };\n\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\n\n//   const getWeek = (dateStr: string) => {\n//     const date = new Date(dateStr);\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//     const dayOfWeek = firstDay.getDay();\n//     const adjustedDate = date.getDate() + dayOfWeek;\n//     return Math.ceil(adjustedDate / 7);\n//   };\n\n//   const categoryData = Object.entries(\n//     filtered.reduce((acc, t) => {\n//       const key = t.category || 'Uncategorized';\n//       acc[key] = (acc[key] || 0) + t.amount;\n//       return acc;\n//     }, {} as Record<string, number>)\n//   ).map(([name, value]) => ({ name, value }));\n\n//   const barData = groupByWeek\n//     ? Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const weeks = [0, 0, 0, 0, 0];\n//         filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .forEach((t) => {\n//             const week = getWeek(t.date);\n//             weeks[week - 1] += t.amount;\n//           });\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\n//       })\n//     : Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const total = filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .reduce((sum, t) => sum + t.amount, 0);\n//         return { name: monthName, total };\n//       });\n\n//   // Recent transactions data for the sidebar\n//   const recentTransactions = [...transactions]\n//     .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n//     .slice(0, 5);\n\n//   const totalEntries = filtered.length;\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\n//   const startIndex = (currentPage - 1) * rowsPerPage;\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\n\n//   // Summary metrics\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\n\n//   return (\n//     <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\n//       {/* Sidebar - Redesigned */}\n//       <div className=\"w-64 bg-indigo-700 dark:bg-gray-800 shadow-md p-4 flex flex-col text-white\">\n//         <div className=\"flex items-center mb-8\">\n//           <div className=\"w-10 h-10 rounded-full bg-white flex items-center justify-center mr-3\">\n//             <span className=\"text-indigo-700 font-bold text-xl\">$</span>\n//           </div>\n//           <h2 className=\"text-xl font-bold\">Finance Dashboard</h2>\n//         </div>\n\n//         {/* Main Navigation */}\n//         <nav className=\"space-y-1 mb-8\">\n//           <button \n//             onClick={() => { setActiveTab('dashboard'); setShowTransactions(false); }}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'dashboard' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">📊</span>\n//             Dashboard\n//           </button>\n\n//           <button \n//             onClick={() => { setActiveTab('transactions'); setShowTransactions(true); }}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'transactions' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">💳</span>\n//             Transactions\n//           </button>\n\n//           <button \n//             onClick={() => setActiveTab('accounts')}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'accounts' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">🏦</span>\n//             Accounts\n//           </button>\n\n//           <button \n//             onClick={() => setActiveTab('reports')}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'reports' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">📈</span>\n//             Reports\n//           </button>\n\n//           <button \n//             onClick={() => setActiveTab('settings')}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'settings' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">⚙️</span>\n//             Settings\n//           </button>\n//         </nav>\n\n//         {/* Recent Transactions Section */}\n//         <div className=\"mt-auto\">\n//           <h3 className=\"text-sm font-semibold uppercase tracking-wider mb-2 opacity-70\">Recent Transactions</h3>\n//           <div className=\"space-y-3\">\n//             {recentTransactions.map((t) => (\n//               <div key={t._id} className=\"flex justify-between items-center p-2 bg-indigo-600 dark:bg-gray-700 rounded-lg\">\n//                 <div>\n//                   <p className=\"text-sm font-medium\">{t.category || 'Other'}</p>\n//                   <p className=\"text-xs opacity-80\">{new Date(t.date).toLocaleDateString()}</p>\n//                 </div>\n//                 <div className={`text-sm font-bold ${t.status === 'Paid' ? 'text-green-300' : 'text-yellow-300'}`}>\n//                   ₹{t.amount}\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Main content */}\n//       <div className=\"flex-1 p-6\">\n//         {/* Header with search and user controls */}\n//         <div className=\"flex justify-between items-center mb-8\">\n//           <h1 className=\"text-2xl font-bold text-gray-800 dark:text-white\">\n//             {activeTab === 'dashboard' && 'Dashboard Overview'}\n//             {activeTab === 'transactions' && 'Transaction History'}\n//             {activeTab === 'accounts' && 'Accounts Management'}\n//             {activeTab === 'reports' && 'Financial Reports'}\n//             {activeTab === 'settings' && 'Settings'}\n//           </h1>\n\n//           <div className=\"flex items-center space-x-4\">\n//             <div className=\"relative\">\n//               <input\n//                 type=\"text\"\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-full shadow-sm dark:bg-gray-800 dark:text-white\"\n//                 placeholder=\"Search...\"\n//                 value={search}\n//                 onChange={e => setSearch(e.target.value)}\n//               />\n//               <span className=\"absolute left-3 top-2.5\">🔍</span>\n//             </div>\n\n//             <button\n//               onClick={() => setDarkMode(d => !d)}\n//               className=\"p-2 rounded-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600\"\n//               title=\"Toggle dark mode\"\n//             >\n//               {darkMode ? '☀️' : '🌙'}\n//             </button>\n\n//             <div className=\"flex items-center\">\n//               <div className=\"w-8 h-8 rounded-full bg-indigo-600 flex items-center justify-center text-white mr-2\">\n//                 {user ? user.charAt(0).toUpperCase() : 'U'}\n//               </div>\n//               <button\n//                 onClick={handleLogout}\n//                 className=\"text-sm text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n//               >\n//                 Logout\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Dashboard Content */}\n//         {activeTab === 'dashboard' && (\n//           <>\n//             {/* Summary metrics - Redesigned */}\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\n//                 <div className=\"p-3 rounded-full bg-blue-100 dark:bg-blue-900 mr-4\">\n//                   <span className=\"text-blue-600 dark:text-blue-300\">💰</span>\n//                 </div>\n//                 <div>\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Balance</p>\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">₹{totalAmount.toLocaleString()}</p>\n//                 </div>\n//               </div>\n\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\n//                 <div className=\"p-3 rounded-full bg-green-100 dark:bg-green-900 mr-4\">\n//                   <span className=\"text-green-600 dark:text-green-300\">↑</span>\n//                 </div>\n//                 <div>\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Income</p>\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">₹{totalPaid.toLocaleString()}</p>\n//                 </div>\n//               </div>\n\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\n//                 <div className=\"p-3 rounded-full bg-red-100 dark:bg-red-900 mr-4\">\n//                   <span className=\"text-red-600 dark:text-red-300\">↓</span>\n//                 </div>\n//                 <div>\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Expenses</p>\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">₹{totalPending.toLocaleString()}</p>\n//                 </div>\n//               </div>\n\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\n//                 <div className=\"p-3 rounded-full bg-purple-100 dark:bg-purple-900 mr-4\">\n//                   <span className=\"text-purple-600 dark:text-purple-300\">📊</span>\n//                 </div>\n//                 <div>\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</p>\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">{filtered.length}</p>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Charts Section */}\n//             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n//               {/* Spending Overview Chart */}\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//                 <div className=\"flex justify-between items-center mb-4\">\n//                   <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Spending Overview</h2>\n//                   <select \n//                     className=\"text-sm border-none bg-gray-100 dark:bg-gray-700 rounded-lg px-3 py-1\"\n//                     value={month}\n//                     onChange={(e) => setMonth(e.target.value)}\n//                   >\n//                     <option value=\"\">All Months</option>\n//                     {Array.from({ length: 12 }, (_, i) => (\n//                       <option key={i + 1} value={i + 1}>\n//                         {new Date(0, i).toLocaleString('default', { month: 'long' })}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div className=\"h-64\">\n//                   <ResponsiveContainer width=\"100%\" height=\"100%\">\n//                     <AreaChart data={barData}>\n//                       <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" strokeOpacity={darkMode ? 0.1 : 1} />\n//                       <XAxis dataKey=\"name\" stroke={darkMode ? '#aaa' : '#666'} />\n//                       <YAxis stroke={darkMode ? '#aaa' : '#666'} />\n//                       <Tooltip />\n//                       <Area type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.2} />\n//                     </AreaChart>\n//                   </ResponsiveContainer>\n//                 </div>\n//               </div>\n\n//               {/* Categories Chart */}\n//               {/* <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Spending by Category</h2>\n//                 <div className=\"h-64\">\n//                   <ResponsiveContainer width=\"100%\" height=\"100%\">\n//                     <PieChart>\n//                       <Pie \n//                         data={categoryData} \n//                         dataKey=\"value\" \n//                         nameKey=\"name\" \n//                         cx=\"50%\" \n//                         cy=\"50%\" \n//                         outerRadius={80} \n//                         fill=\"#8884d8\" \n//                         label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n//                       >\n//                         {categoryData.map((_, i) => (\n//                           <Cell key={i} fill={COLORS[i % COLORS.length]} />\n//                         ))}\n//                       </Pie>\n//                       <Tooltip formatter={(value) => [`₹${value}`, 'Amount']} />\n//                       <Legend />\n//                     </PieChart>\n//                   </ResponsiveContainer>\n//                 </div> */}\n//               {/* </div> */}\n//             </div>\n\n//             {/* Recent Transactions Table */}\n//             <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow overflow-hidden\">\n//               <div className=\"p-6 flex justify-between items-center\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Recent Transactions</h2>\n//                 <button \n//                   onClick={() => setShowTransactions(true)}\n//                   className=\"text-sm text-indigo-600 dark:text-indigo-400 hover:underline\"\n//                 >\n//                   View All\n//                 </button>\n//               </div>\n\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50 dark:bg-gray-700\">\n//                     <tr>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Category</th>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n//                     {transactions.slice(0, 5).map((t) => (\n//                       <tr key={t._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"flex items-center\">\n//                             <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-indigo-100 dark:bg-indigo-900 flex items-center justify-center\">\n//                               <span className=\"text-indigo-600 dark:text-indigo-300\">💳</span>\n//                             </div>\n//                             <div className=\"ml-4\">\n//                               <div className=\"text-sm font-medium text-gray-900 dark:text-white\">{t.category || 'Other'}</div>\n//                               <div className=\"text-sm text-gray-500 dark:text-gray-400\">{t.user_id}</div>\n//                             </div>\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"text-sm text-gray-900 dark:text-white\">{t.description || '-'}</div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"text-sm text-gray-900 dark:text-white\">\n//                             {new Date(t.date).toLocaleDateString()}\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n//                             ₹{t.amount}\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n//                             ${t.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \n//                               'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\n//                             {t.status}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               </div>\n//             </div>\n//           </>\n//         )}\n\n//         {/* Transactions Tab Content */}\n//         {(activeTab === 'transactions' || showTransactions) && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow overflow-hidden\">\n//             <div className=\"p-6 flex justify-between items-center\">\n//               <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Transaction History</h2>\n//               <div className=\"flex space-x-3\">\n//                 <button \n//                   onClick={exportToCSV}\n//                   className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 text-sm\"\n//                 >\n//                   Export CSV\n//                 </button>\n//                 <button \n//                   onClick={() => setShowFilters(!showFilters)}\n//                   className=\"px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 text-sm\"\n//                 >\n//                   {showFilters ? 'Hide Filters' : 'Show Filters'}\n//                 </button>\n//               </div>\n//             </div>\n\n//             {/* Filters Section */}\n//             {showFilters && (\n//               <div className=\"px-6 pb-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n//                 <select \n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\n//                   value={status}\n//                   onChange={(e) => setStatus(e.target.value)}\n//                 >\n//                   <option value=\"\">All Status</option>\n//                   <option value=\"Paid\">Paid</option>\n//                   <option value=\"Pending\">Pending</option>\n//                 </select>\n\n//                 <select \n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\n//                   value={category}\n//                   onChange={(e) => setCategory(e.target.value)}\n//                 >\n//                   <option value=\"\">All Categories</option>\n//                   {uniqueCategories.map((cat) => (\n//                     <option key={cat}>{cat}</option>\n//                   ))}\n//                 </select>\n\n//                 <input \n//                   type=\"number\" \n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\n//                   placeholder=\"Min Amount\"\n//                   value={minAmount}\n//                   onChange={(e) => setMinAmount(e.target.value)}\n//                 />\n\n//                 <input \n//                   type=\"number\" \n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\n//                   placeholder=\"Max Amount\"\n//                   value={maxAmount}\n//                   onChange={(e) => setMaxAmount(e.target.value)}\n//                 />\n//               </div>\n//             )}\n\n//             {/* Transactions Table */}\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50 dark:bg-gray-700\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">User</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Category</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n//                   {currentEntries.length === 0 ? (\n//                     <tr>\n//                       <td colSpan={6} className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\">\n//                         No transactions found.\n//                       </td>\n//                     </tr>\n//                   ) : (\n//                     currentEntries.map((t) => (\n//                       <tr key={t._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n//                           {t.user_id}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n//                           {new Date(t.date).toLocaleDateString()}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n//                           ₹{t.amount}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n//                           {t.category || 'N/A'}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n//                           {t.description || '-'}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n//                             ${t.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \n//                               'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\n//                             {t.status}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))\n//                   )}\n//                 </tbody>\n//               </table>\n//             </div>\n\n//             {/* Pagination */}\n//             <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200 dark:border-gray-700\">\n//               <div className=\"flex-1 flex justify-between sm:hidden\">\n//                 <button \n//                   onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n//                   disabled={currentPage === 1}\n//                   className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n//                 >\n//                   Previous\n//                 </button>\n//                 <button \n//                   onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n//                   disabled={currentPage === totalPages}\n//                   className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n//                 >\n//                   Next\n//                 </button>\n//               </div>\n//               <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n//                 <div>\n//                   <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n//                     Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{Math.min(startIndex + rowsPerPage, totalEntries)}</span> of <span className=\"font-medium\">{totalEntries}</span> results\n//                   </p>\n//                 </div>\n//                 <div>\n//                   <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n//                     <button\n//                       onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n//                       disabled={currentPage === 1}\n//                       className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\n//                     >\n//                       <span className=\"sr-only\">Previous</span>\n//                       &larr;\n//                     </button>\n//                     {Array.from({ length: totalPages }, (_, i) => (\n//                       <button\n//                         key={i + 1}\n//                         onClick={() => setCurrentPage(i + 1)}\n//                         className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n//                           currentPage === i + 1\n//                             ? 'z-10 bg-indigo-50 border-indigo-500 text-indigo-600 dark:bg-indigo-900 dark:border-indigo-700 dark:text-indigo-200'\n//                             : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300'\n//                         }`}\n//                       >\n//                         {i + 1}\n//                       </button>\n//                     ))}\n//                     <button\n//                       onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n//                       disabled={currentPage === totalPages}\n//                       className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\n//                     >\n//                       <span className=\"sr-only\">Next</span>\n//                       &rarr;\n//                     </button>\n//                   </nav>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Other Tab Content Placeholders */}\n//         {activeTab === 'accounts' && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Accounts Management</h2>\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your accounts management content will appear here.</p>\n//           </div>\n//         )}\n\n//         {activeTab === 'reports' && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Financial Reports</h2>\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your financial reports will appear here.</p>\n//           </div>\n//         )}\n\n//         {activeTab === 'settings' && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Settings</h2>\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your settings will appear here.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\n// dash board 3\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import {\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer\n// } from 'recharts';\n\n// interface Transaction {\n//   _id: string;\n//   date: string;\n//   amount: number;\n//   category: string;\n//   description?: string;\n//   user_id: string;\n//   status: 'Paid' | 'Pending';\n// }\n\n// function Dashboard() {\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\n//   const [month, setMonth] = useState('');\n//   const [status, setStatus] = useState('');\n//   const [category, setCategory] = useState('');\n//   const [user, setUser] = useState('');\n//   const [minAmount, setMinAmount] = useState('');\n//   const [maxAmount, setMaxAmount] = useState('');\n//   const [groupByWeek, setGroupByWeek] = useState(false);\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const rowsPerPage = 10;\n//   const [error, setError] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [darkMode, setDarkMode] = useState(() => {\n//     if (typeof window !== \"undefined\") {\n//       const stored = localStorage.getItem('dashboard-darkmode');\n//       if (stored) return stored === 'true';\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\n//     }\n//     return false;\n//   });\n//   const [showFilters, setShowFilters] = useState(false);\n\n//   // Sidebar navigation\n//   const [activeView, setActiveView] = useState<'dashboard' | 'transactions' | 'analytics' | 'wallet' | 'messages' | 'settings'>('dashboard');\n\n//   const navigate = useNavigate();\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\n\n//   useEffect(() => {\n//     if (darkMode) {\n//       document.documentElement.classList.add('dark');\n//       localStorage.setItem('dashboard-darkmode', 'true');\n//     } else {\n//       document.documentElement.classList.remove('dark');\n//       localStorage.setItem('dashboard-darkmode', 'false');\n//     }\n//   }, [darkMode]);\n\n//   useEffect(() => {\n//     const fetchTransactions = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\n//         setTransactions(data);\n//         setFiltered(data);\n//       } catch (err) {\n//         setError('Failed to load transactions');\n//       }\n//     };\n//     fetchTransactions();\n//   }, []);\n\n//   useEffect(() => {\n//     let result = [...transactions];\n\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\n//     if (status) result = result.filter((t) => t.status === status);\n//     if (category) result = result.filter((t) => t.category === category);\n//     if (user) result = result.filter((t) => t.user_id === user);\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\n\n//     if (search.trim()) {\n//       const s = search.trim().toLowerCase();\n//       result = result.filter((t) =>\n//         t.user_id?.toLowerCase().includes(s) ||\n//         t.status?.toLowerCase().includes(s) ||\n//         t.category?.toLowerCase().includes(s) ||\n//         t.description?.toLowerCase().includes(s) ||\n//         t.amount.toString().includes(s) ||\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\n//       );\n//     }\n\n//     setCurrentPage(1);\n//     setFiltered(result);\n//   }, [\n//     month, status, category, user, minAmount, maxAmount,\n//     startDate, endDate, transactions, search\n//   ]);\n\n//   const exportToCSV = () => {\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\n//     const rows = filtered\n//       .map((t) => {\n//         const date = new Date(t.date).toISOString().split('T')[0];\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\n//       })\n//       .join('\\n');\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = 'transactions.csv';\n//     a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     navigate('/');\n//   };\n\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\n\n//   const getWeek = (dateStr: string) => {\n//     const date = new Date(dateStr);\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//     const dayOfWeek = firstDay.getDay();\n//     const adjustedDate = date.getDate() + dayOfWeek;\n//     return Math.ceil(adjustedDate / 7);\n//   };\n\n//   const categoryData = Object.entries(\n//     filtered.reduce((acc, t) => {\n//       const key = t.category || 'Uncategorized';\n//       acc[key] = (acc[key] || 0) + t.amount;\n//       return acc;\n//     }, {} as Record<string, number>)\n//   ).map(([name, value]) => ({ name, value }));\n\n//   const barData = groupByWeek\n//     ? Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const weeks = [0, 0, 0, 0, 0];\n//         filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .forEach((t) => {\n//             const week = getWeek(t.date);\n//             weeks[week - 1] += t.amount;\n//           });\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\n//       })\n//     : Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const total = filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .reduce((sum, t) => sum + t.amount, 0);\n//         return { name: monthName, total };\n//       });\n\n//   const totalEntries = filtered.length;\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\n//   const startIndex = (currentPage - 1) * rowsPerPage;\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\n\n//   // Summary metrics\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\n\n//   return (\n//     <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\n//       {/* Sidebar */}\n//       <div className=\"w-64 bg-white dark:bg-gray-800 shadow-md p-4 flex flex-col\">\n//         <h2 className=\"text-xl font-bold mb-6 text-blue-600 dark:text-blue-300\">Looper.ai</h2>\n//         {/* Sidebar Menu Items */}\n//         <nav className=\"flex-1 space-y-2 mb-6\">\n//           <button\n//             onClick={() => setActiveView('dashboard')}\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'dashboard' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\n//             <span className=\"mr-3\">📊</span>\n//             <span>Dashboard</span>\n//           </button>\n//           <button\n//             onClick={() => setActiveView('transactions')}\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'transactions' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\n//             <span className=\"mr-3\">💰</span>\n//             <span>Transactions</span>\n//           </button>\n//           <button\n//             onClick={() => setActiveView('analytics')}\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'analytics' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\n//             <span className=\"mr-3\">📈</span>\n//             <span>Analytics</span>\n//           </button>\n//           <button\n//             onClick={() => setActiveView('wallet')}\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'wallet' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\n//             <span className=\"mr-3\">👛</span>\n//             <span>Wallet</span>\n//           </button>\n//           <button\n//             onClick={() => setActiveView('messages')}\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'messages' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\n//             <span className=\"mr-3\">💬</span>\n//             <span>Messages</span>\n//           </button>\n//           <button\n//             onClick={() => setActiveView('settings')}\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'settings' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\n//             <span className=\"mr-3\">⚙️</span>\n//             <span>Settings</span>\n//           </button>\n//         </nav>\n\n//         {/* Filter toggle button */}\n//         <button\n//           onClick={() => setShowFilters(!showFilters)}\n//           className=\"flex items-center justify-between w-full p-2 mb-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n//         >\n//           <span className=\"font-medium\">Filters</span>\n//           <span>{showFilters ? '▲' : '▼'}</span>\n//         </button>\n\n//         {/* Filters section - conditionally rendered */}\n//         {showFilters && (\n//           <div className=\"space-y-4 mb-4\">\n//             <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\n//               <option value=\"\">All Months</option>\n//               {Array.from({ length: 12 }, (_, i) => (\n//                 <option key={i + 1} value={i + 1}>\n//                   {new Date(0, i).toLocaleString('default', { month: 'long' })}\n//                 </option>\n//               ))}\n//             </select>\n\n//             <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\n//               <option value=\"\">All Status</option>\n//               <option value=\"Paid\">Paid</option>\n//               <option value=\"Pending\">Pending</option>\n//             </select>\n\n//             <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\n//               <option value=\"\">All Categories</option>\n//               {uniqueCategories.map((cat) => (\n//                 <option key={cat}>{cat}</option>\n//               ))}\n//             </select>\n\n//             <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\n//               <option value=\"\">All Users</option>\n//               {uniqueUsers.map((u) => (\n//                 <option key={u}>{u}</option>\n//               ))}\n//             </select>\n\n//             <input type=\"number\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" placeholder=\"Min ₹\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\n//             <input type=\"number\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" placeholder=\"Max ₹\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\n\n//             <input type=\"date\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n//             <input type=\"date\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n\n//             <div className=\"flex space-x-2\">\n//               <button onClick={exportToCSV} className=\"flex-1 bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700 text-sm\">Export CSV</button>\n//               <button onClick={() => {\n//                 setMonth(''); setStatus(''); setCategory(''); setUser('');\n//                 setMinAmount(''); setMaxAmount(''); setStartDate('');\n//                 setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\n//                 setFiltered(transactions);\n//                 setSearch('');\n//               }} className=\"flex-1 bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600 text-sm\">Reset</button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Main content */}\n//       <div className=\"flex-1 p-6\">\n//         {/* Header with search and dark mode toggle */}\n//         <div className=\"flex justify-between items-center mb-6\">\n//           <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">\n//             {activeView === 'dashboard' ? 'Dashboard' :\n//               activeView === 'transactions' ? 'Transactions' :\n//                 activeView.charAt(0).toUpperCase() + activeView.slice(1)}\n//           </h1>\n//           <div className=\"flex gap-3 items-center\">\n//             <input\n//               type=\"text\"\n//               className=\"p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\n//               placeholder=\"🔍 Search transactions...\"\n//               value={search}\n//               onChange={e => setSearch(e.target.value)}\n//             />\n//             <button\n//               onClick={() => setDarkMode(d => !d)}\n//               className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\n//               title=\"Toggle dark mode\"\n//             >\n//               {darkMode ? '☀️' : '🌙'}\n//             </button>\n//             <button\n//               onClick={handleLogout}\n//               className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         </div>\n\n//         {/* DASHBOARD VIEW */}\n//         {activeView === 'dashboard' && (\n//           <>\n//             {/* Summary metrics */}\n//             <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//                 <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\n//                 <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\n//               </div>\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//                 <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\n//                 <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">₹{totalAmount.toLocaleString()}</span>\n//               </div>\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//                 <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\n//                 <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">₹{totalPaid.toLocaleString()}</span>\n//               </div>\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//                 <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\n//                 <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">₹{totalPending.toLocaleString()}</span>\n//               </div>\n//             </div>\n\n//             {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n\n//             {/* Charts */}\n//             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4\">\n//                 <h2 className=\"text-xl font-semibold mb-4 text-blue-600 dark:text-blue-300\">📈 Spending by Category</h2>\n//                 <ResponsiveContainer width=\"100%\" height={300}>\n//                   <PieChart>\n//                     <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\n//                       {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\n//                     </Pie>\n//                     <Tooltip />\n//                     <Legend />\n//                   </PieChart>\n//                 </ResponsiveContainer>\n//               </div>\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4\">\n//                 <h2 className=\"text-xl font-semibold mb-4 text-green-600 dark:text-green-300\">📊 Monthly Spending</h2>\n//                 <ResponsiveContainer width=\"100%\" height={300}>\n//                   <BarChart data={barData}>\n//                     <CartesianGrid strokeDasharray=\"3 3\" />\n//                     <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\n//                     <YAxis stroke={darkMode ? '#ddd' : '#333'} />\n//                     <Tooltip />\n//                     <Legend />\n//                     {groupByWeek\n//                       ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\n//                       : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\n//                   </BarChart>\n//                 </ResponsiveContainer>\n//               </div>\n//             </div>\n\n//             {/* Group by week toggle */}\n//             <div className=\"flex justify-between items-center mb-4\">\n//               <label className=\"flex items-center gap-2 text-sm dark:text-gray-300\">\n//                 <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\n//                 Group by Week\n//               </label>\n//               <div className=\"text-sm text-gray-600 dark:text-gray-300\">\n//                 Showing {startIndex + 1}–{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\n//               </div>\n//             </div>\n//           </>\n//         )}\n\n//         {/* TRANSACTIONS VIEW */}\n//         {activeView === 'transactions' && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded shadow overflow-hidden\">\n//             <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n//               <thead className=\"bg-gray-50 dark:bg-gray-900\">\n//                 <tr>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Date</th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Amount</th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Category</th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Description</th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Status</th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n//                 {currentEntries.map((transaction) => (\n//                   <tr key={transaction._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\n//                       {new Date(transaction.date).toLocaleDateString()}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\n//                       ₹{transaction.amount.toLocaleString()}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\n//                       {transaction.category}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\n//                       {transaction.description || '-'}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                       <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n//                         transaction.status === 'Paid'\n//                           ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n//                           : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\n//                       }`}>\n//                         {transaction.status}\n//                       </span>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {/* Pagination */}\n//             <div className=\"px-4 py-3 flex items-center justify-between border-t border-gray-200 dark:border-gray-700 sm:px-6\">\n//               <div className=\"flex-1 flex justify-between sm:hidden\">\n//                 <button onClick={() => setCurrentPage(p => Math.max(1, p - 1))} disabled={currentPage === 1} className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n//                   Previous\n//                 </button>\n//                 <button onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))} disabled={currentPage === totalPages} className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n//                   Next\n//                 </button>\n//               </div>\n//               <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n//                 <div>\n//                   <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n//                     Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{Math.min(startIndex + rowsPerPage, totalEntries)}</span> of{' '}\n//                     <span className=\"font-medium\">{totalEntries}</span> results\n//                   </p>\n//                 </div>\n//                 <div>\n//                   <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n//                     <button onClick={() => setCurrentPage(p => Math.max(1, p - 1))} disabled={currentPage === 1} className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                       Previous\n//                     </button>\n//                     {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n//                       <button key={page} onClick={() => setCurrentPage(page)} className={`relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium ${currentPage === page ? 'text-blue-600 dark:text-blue-400' : 'text-gray-700 dark:text-gray-300'} hover:bg-gray-50 dark:hover:bg-gray-700`}>\n//                         {page}\n//                       </button>\n//                     ))}\n//                     <button onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))} disabled={currentPage === totalPages} className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                       Next\n//                     </button>\n//                   </nav>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* ANALYTICS VIEW */}\n//         {activeView === 'analytics' && (\n//           <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\n//             <h2 className=\"text-2xl font-semibold mb-2\">Analytics</h2>\n//             <p>Analytics content will appear here.</p>\n//           </div>\n//         )}\n\n//         {/* WALLET VIEW */}\n//         {activeView === 'wallet' && (\n//           <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\n//             <h2 className=\"text-2xl font-semibold mb-2\">Wallet</h2>\n//             <p>Wallet content will appear here.</p>\n//           </div>\n//         )}\n\n//         {/* MESSAGES VIEW */}\n//         {activeView === 'messages' && (\n//           <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\n//             <h2 className=\"text-2xl font-semibold mb-2\">Messages</h2>\n//             <p>Messages content will appear here.</p>\n//           </div>\n//         )}\n\n//         {/* SETTINGS VIEW */}\n//         {activeView === 'settings' && (\n//           <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\n//             <h2 className=\"text-2xl font-semibold mb-2\">Settings</h2>\n//             <p>Settings content will appear here.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","axios","useNavigate","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Dashboard","_s","transactions","setTransactions","filtered","setFiltered","month","setMonth","status","setStatus","category","setCategory","user","setUser","minAmount","setMinAmount","maxAmount","setMaxAmount","groupByWeek","setGroupByWeek","startDate","setStartDate","endDate","setEndDate","currentPage","setCurrentPage","rowsPerPage","error","setError","search","setSearch","darkMode","setDarkMode","window","stored","localStorage","getItem","matchMedia","matches","navigate","COLORS","document","documentElement","classList","add","setItem","remove","fetchTransactions","token","res","get","headers","Authorization","data","Array","isArray","err","result","filter","t","Date","date","getMonth","Number","user_id","amount","parseFloat","trim","s","toLowerCase","_t$user_id","_t$status","_t$category","_t$description","includes","description","toString","toLocaleDateString","exportToCSV","header","rows","map","toISOString","split","join","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","handleLogout","removeItem","uniqueCategories","from","Set","uniqueUsers","getWeek","dateStr","firstDay","getFullYear","dayOfWeek","getDay","adjustedDate","getDate","Math","ceil","categoryData","Object","entries","reduce","acc","key","name","value","barData","length","_","i","monthName","toLocaleString","weeks","forEach","week","val","idx","total","sum","totalEntries","totalPages","startIndex","currentEntries","slice","totalAmount","totalPaid","totalPending","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","d","title","placeholder","onChange","e","target","cat","u","checked","colSpan","_id","min","p","max","parseInt","isNaN","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","label","strokeDasharray","stroke","w","_c","$RefreshReg$"],"sources":["C:/Users/Asus/looper-frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\r\n  XAxis, YAxis, CartesianGrid, ResponsiveContainer\r\n} from 'recharts';\r\n\r\ninterface Transaction {\r\n  _id: string;\r\n  date: string;\r\n  amount: number;\r\n  category: string;\r\n  description?: string;\r\n  user_id: string;\r\n  status: 'Paid' | 'Pending';\r\n}\r\n\r\nfunction Dashboard() {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [filtered, setFiltered] = useState<Transaction[]>([]);\r\n  const [month, setMonth] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [user, setUser] = useState('');\r\n  const [minAmount, setMinAmount] = useState('');\r\n  const [maxAmount, setMaxAmount] = useState('');\r\n  const [groupByWeek, setGroupByWeek] = useState(false);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 10;\r\n  const [error, setError] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    // On first load, check localStorage or system preference\r\n    if (typeof window !== \"undefined\") {\r\n      const stored = localStorage.getItem('dashboard-darkmode');\r\n      if (stored) return stored === 'true';\r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\r\n\r\n  // Apply dark mode class to <html>\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('dashboard-darkmode', 'true');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('dashboard-darkmode', 'false');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await axios.get('http://localhost:5000/api/transactions', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\r\n        setTransactions(data);\r\n        setFiltered(data);\r\n      } catch (err) {\r\n        setError('Failed to load transactions');\r\n      }\r\n    };\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let result = [...transactions];\r\n\r\n    if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\r\n    if (status) result = result.filter((t) => t.status === status);\r\n    if (category) result = result.filter((t) => t.category === category);\r\n    if (user) result = result.filter((t) => t.user_id === user);\r\n    if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\r\n    if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\r\n    if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\r\n    if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\r\n\r\n    // Real-time search filter\r\n    if (search.trim()) {\r\n      const s = search.trim().toLowerCase();\r\n      result = result.filter((t) =>\r\n        t.user_id?.toLowerCase().includes(s) ||\r\n        t.status?.toLowerCase().includes(s) ||\r\n        t.category?.toLowerCase().includes(s) ||\r\n        t.description?.toLowerCase().includes(s) ||\r\n        t.amount.toString().includes(s) ||\r\n        new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\r\n      );\r\n    }\r\n\r\n    setCurrentPage(1);\r\n    setFiltered(result);\r\n  }, [\r\n    month, status, category, user, minAmount, maxAmount,\r\n    startDate, endDate, transactions, search\r\n  ]);\r\n\r\n  const exportToCSV = () => {\r\n    const header = 'User ID,Status,Date,Amount,Category,Description\\n';\r\n    const rows = filtered\r\n      .map((t) => {\r\n        const date = new Date(t.date).toISOString().split('T')[0];\r\n        return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\r\n      })\r\n      .join('\\n');\r\n    const blob = new Blob([header + rows], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'transactions.csv';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  };\r\n\r\n  const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\r\n  const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\r\n\r\n  const getWeek = (dateStr: string) => {\r\n    const date = new Date(dateStr);\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfWeek = firstDay.getDay();\r\n    const adjustedDate = date.getDate() + dayOfWeek;\r\n    return Math.ceil(adjustedDate / 7);\r\n  };\r\n\r\n  const categoryData = Object.entries(\r\n    filtered.reduce((acc, t) => {\r\n      const key = t.category || 'Uncategorized';\r\n      acc[key] = (acc[key] || 0) + t.amount;\r\n      return acc;\r\n    }, {} as Record<string, number>)\r\n  ).map(([name, value]) => ({ name, value }));\r\n\r\n  const barData = groupByWeek\r\n    ? Array.from({ length: 12 }, (_, i) => {\r\n        const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n        const weeks = [0, 0, 0, 0, 0];\r\n        filtered\r\n          .filter((t) => new Date(t.date).getMonth() === i)\r\n          .forEach((t) => {\r\n            const week = getWeek(t.date);\r\n            weeks[week - 1] += t.amount;\r\n          });\r\n        return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\r\n      })\r\n    : Array.from({ length: 12 }, (_, i) => {\r\n        const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n        const total = filtered\r\n          .filter((t) => new Date(t.date).getMonth() === i)\r\n          .reduce((sum, t) => sum + t.amount, 0);\r\n        return { name: monthName, total };\r\n      });\r\n\r\n  const totalEntries = filtered.length;\r\n  const totalPages = Math.ceil(totalEntries / rowsPerPage);\r\n  const startIndex = (currentPage - 1) * rowsPerPage;\r\n  const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n  // --- SUMMARY METRICS LOGIC ---\r\n  const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\r\n  const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\r\n  const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\r\n\r\n  return (\r\n    <div className=\"p-6 min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">📊 Dashboard</h1>\r\n        <div className=\"flex gap-3 items-center\">\r\n          <button\r\n            onClick={() => setDarkMode(d => !d)}\r\n            className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\r\n            title=\"Toggle dark mode\"\r\n          >\r\n            {darkMode ? '☀️' : '🌙'}\r\n          </button>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* --- REAL-TIME SEARCH INPUT --- */}\r\n      <div className=\"mb-4 flex\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-full md:w-1/3 p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\r\n          placeholder=\"🔍 Search transactions (user, status, amount, date, category, description)...\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* --- SUMMARY METRICS SECTION --- */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n          <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\r\n          <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\r\n        </div>\r\n        <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n          <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\r\n          <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">₹{totalAmount.toLocaleString()}</span>\r\n        </div>\r\n        <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n          <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\r\n          <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">₹{totalPaid.toLocaleString()}</span>\r\n        </div>\r\n        <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n          <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\r\n          <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">₹{totalPending.toLocaleString()}</span>\r\n        </div>\r\n      </div>\r\n      {/* --- END SUMMARY METRICS SECTION --- */}\r\n\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      {/* Filters */}\r\n      <div className=\"grid md:grid-cols-3 lg:grid-cols-6 gap-4 mb-4\">\r\n        <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\r\n          <option value=\"\">All Months</option>\r\n          {Array.from({ length: 12 }, (_, i) => (\r\n            <option key={i + 1} value={i + 1}>\r\n              {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\r\n          <option value=\"\">All Status</option>\r\n          <option value=\"Paid\">Paid</option>\r\n          <option value=\"Pending\">Pending</option>\r\n        </select>\r\n        <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n          <option value=\"\">All Categories</option>\r\n          {uniqueCategories.map((cat) => (\r\n            <option key={cat}>{cat}</option>\r\n          ))}\r\n        </select>\r\n        <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\r\n          <option value=\"\">All Users</option>\r\n          {uniqueUsers.map((u) => (\r\n            <option key={u}>{u}</option>\r\n          ))}\r\n        </select>\r\n        <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Min ₹\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\r\n        <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Max ₹\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\r\n      </div>\r\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n        <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n        <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n        <button onClick={exportToCSV} className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\">Export CSV</button>\r\n        <button onClick={() => {\r\n          setMonth(''); setStatus(''); setCategory(''); setUser('');\r\n          setMinAmount(''); setMaxAmount(''); setStartDate('');\r\n          setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\r\n          setFiltered(transactions);\r\n          setSearch('');\r\n        }} className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\">Reset Filters</button>\r\n      </div>\r\n\r\n      <label className=\"flex items-center gap-2 mb-4 text-sm dark:text-gray-300\">\r\n        <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\r\n        Group by Week\r\n      </label>\r\n\r\n      {/* Table */}\r\n      <div className=\"overflow-x-auto mb-2\">\r\n        <table className=\"w-full bg-white dark:bg-gray-800 rounded shadow-md\">\r\n          <thead className=\"bg-blue-600 dark:bg-blue-900 text-white\">\r\n            <tr>\r\n              <th className=\"p-3 text-left\">User ID</th>\r\n              <th className=\"p-3 text-left\">Date</th>\r\n              <th className=\"p-3 text-left\">Amount (₹)</th>\r\n              <th className=\"p-3 text-left\">Category</th>\r\n              <th className=\"p-3 text-left\">Description</th>\r\n              <th className=\"p-3 text-left\">Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentEntries.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={6} className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No transactions found.</td>\r\n              </tr>\r\n            ) : (\r\n              currentEntries.map((t) => (\r\n                <tr key={t._id} className=\"border-t hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                  <td className=\"p-3\">{t.user_id}</td>\r\n                  <td className=\"p-3\">{new Date(t.date).toLocaleDateString()}</td>\r\n                  <td className=\"p-3\">₹{t.amount}</td>\r\n                  <td className=\"p-3\">{t.category || 'N/A'}</td>\r\n                  <td className=\"p-3\">{t.description || '-'}</td>\r\n                  <td className={`p-3 font-medium ${t.status === 'Paid' ? 'text-green-600 dark:text-green-400' : 'text-yellow-600 dark:text-yellow-400'}`}>{t.status}</td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-2 text-center\">\r\n        Showing {startIndex + 1}–{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\r\n      </div>\r\n\r\n      <div className=\"flex items-center justify-center gap-4 mb-10\">\r\n        <button onClick={() => setCurrentPage((p) => Math.max(1, p - 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\r\n          Prev\r\n        </button>\r\n        <span className=\"dark:text-gray-200\">Page</span>\r\n        <input\r\n          type=\"number\"\r\n          min={1}\r\n          max={totalPages}\r\n          value={currentPage}\r\n          onChange={(e) => {\r\n            const val = parseInt(e.target.value);\r\n            if (!isNaN(val) && val >= 1 && val <= totalPages) {\r\n              setCurrentPage(val);\r\n            }\r\n          }}\r\n          className=\"w-16 p-1 border rounded text-center dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\"\r\n        />\r\n        <span className=\"dark:text-gray-200\">of {totalPages}</span>\r\n        <button onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <h2 className=\"text-xl font-semibold mt-8 mb-4 text-blue-600 dark:text-blue-300\">📈 Spending by Category</h2>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <PieChart>\r\n          <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\r\n            {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\r\n          </Pie>\r\n          <Tooltip />\r\n          <Legend />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2 className=\"text-xl font-semibold mt-8 mb-4 text-green-600 dark:text-green-300\">📊 Monthly Spending</h2>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={barData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\r\n          <YAxis stroke={darkMode ? '#ddd' : '#333'} />\r\n          <Tooltip />\r\n          <Legend />\r\n          {groupByWeek\r\n            ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\r\n            : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n// import { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import {\r\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\r\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer, AreaChart, Area\r\n// } from 'recharts';\r\n\r\n// interface Transaction {\r\n//   _id: string;\r\n//   date: string;\r\n//   amount: number;\r\n//   category: string;\r\n//   description?: string;\r\n//   user_id: string;\r\n//   status: 'Paid' | 'Pending';\r\n// }\r\n\r\n// function Dashboard() {\r\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\r\n//   const [month, setMonth] = useState('');\r\n//   const [status, setStatus] = useState('');\r\n//   const [category, setCategory] = useState('');\r\n//   const [user, setUser] = useState('');\r\n//   const [minAmount, setMinAmount] = useState('');\r\n//   const [maxAmount, setMaxAmount] = useState('');\r\n//   const [groupByWeek, setGroupByWeek] = useState(false);\r\n//   const [startDate, setStartDate] = useState('');\r\n//   const [endDate, setEndDate] = useState('');\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const rowsPerPage = 10;\r\n//   const [error, setError] = useState('');\r\n//   const [search, setSearch] = useState('');\r\n//   const [darkMode, setDarkMode] = useState(() => {\r\n//     if (typeof window !== \"undefined\") {\r\n//       const stored = localStorage.getItem('dashboard-darkmode');\r\n//       if (stored) return stored === 'true';\r\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n//     }\r\n//     return false;\r\n//   });\r\n//   const [showFilters, setShowFilters] = useState(false);\r\n//   const [activeTab, setActiveTab] = useState('dashboard');\r\n//   const [showTransactions, setShowTransactions] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\r\n\r\n//   useEffect(() => {\r\n//     if (darkMode) {\r\n//       document.documentElement.classList.add('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'true');\r\n//     } else {\r\n//       document.documentElement.classList.remove('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'false');\r\n//     }\r\n//   }, [darkMode]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchTransactions = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\r\n//         setTransactions(data);\r\n//         setFiltered(data);\r\n//       } catch (err) {\r\n//         setError('Failed to load transactions');\r\n//       }\r\n//     };\r\n//     fetchTransactions();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     let result = [...transactions];\r\n\r\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\r\n//     if (status) result = result.filter((t) => t.status === status);\r\n//     if (category) result = result.filter((t) => t.category === category);\r\n//     if (user) result = result.filter((t) => t.user_id === user);\r\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\r\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\r\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\r\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\r\n\r\n//     if (search.trim()) {\r\n//       const s = search.trim().toLowerCase();\r\n//       result = result.filter((t) =>\r\n//         t.user_id?.toLowerCase().includes(s) ||\r\n//         t.status?.toLowerCase().includes(s) ||\r\n//         t.category?.toLowerCase().includes(s) ||\r\n//         t.description?.toLowerCase().includes(s) ||\r\n//         t.amount.toString().includes(s) ||\r\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\r\n//       );\r\n//     }\r\n\r\n//     setCurrentPage(1);\r\n//     setFiltered(result);\r\n//   }, [\r\n//     month, status, category, user, minAmount, maxAmount,\r\n//     startDate, endDate, transactions, search\r\n//   ]);\r\n\r\n//   const exportToCSV = () => {\r\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\r\n//     const rows = filtered\r\n//       .map((t) => {\r\n//         const date = new Date(t.date).toISOString().split('T')[0];\r\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\r\n//       })\r\n//       .join('\\n');\r\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.href = url;\r\n//     a.download = 'transactions.csv';\r\n//     a.click();\r\n//     URL.revokeObjectURL(url);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\r\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\r\n\r\n//   const getWeek = (dateStr: string) => {\r\n//     const date = new Date(dateStr);\r\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n//     const dayOfWeek = firstDay.getDay();\r\n//     const adjustedDate = date.getDate() + dayOfWeek;\r\n//     return Math.ceil(adjustedDate / 7);\r\n//   };\r\n\r\n//   const categoryData = Object.entries(\r\n//     filtered.reduce((acc, t) => {\r\n//       const key = t.category || 'Uncategorized';\r\n//       acc[key] = (acc[key] || 0) + t.amount;\r\n//       return acc;\r\n//     }, {} as Record<string, number>)\r\n//   ).map(([name, value]) => ({ name, value }));\r\n\r\n//   const barData = groupByWeek\r\n//     ? Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const weeks = [0, 0, 0, 0, 0];\r\n//         filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .forEach((t) => {\r\n//             const week = getWeek(t.date);\r\n//             weeks[week - 1] += t.amount;\r\n//           });\r\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\r\n//       })\r\n//     : Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const total = filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .reduce((sum, t) => sum + t.amount, 0);\r\n//         return { name: monthName, total };\r\n//       });\r\n\r\n//   // Recent transactions data for the sidebar\r\n//   const recentTransactions = [...transactions]\r\n//     .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\r\n//     .slice(0, 5);\r\n\r\n//   const totalEntries = filtered.length;\r\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\r\n//   const startIndex = (currentPage - 1) * rowsPerPage;\r\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n//   // Summary metrics\r\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\r\n\r\n//   return (\r\n//     <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\r\n//       {/* Sidebar - Redesigned */}\r\n//       <div className=\"w-64 bg-indigo-700 dark:bg-gray-800 shadow-md p-4 flex flex-col text-white\">\r\n//         <div className=\"flex items-center mb-8\">\r\n//           <div className=\"w-10 h-10 rounded-full bg-white flex items-center justify-center mr-3\">\r\n//             <span className=\"text-indigo-700 font-bold text-xl\">$</span>\r\n//           </div>\r\n//           <h2 className=\"text-xl font-bold\">Finance Dashboard</h2>\r\n//         </div>\r\n        \r\n//         {/* Main Navigation */}\r\n//         <nav className=\"space-y-1 mb-8\">\r\n//           <button \r\n//             onClick={() => { setActiveTab('dashboard'); setShowTransactions(false); }}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'dashboard' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">📊</span>\r\n//             Dashboard\r\n//           </button>\r\n          \r\n//           <button \r\n//             onClick={() => { setActiveTab('transactions'); setShowTransactions(true); }}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'transactions' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">💳</span>\r\n//             Transactions\r\n//           </button>\r\n          \r\n//           <button \r\n//             onClick={() => setActiveTab('accounts')}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'accounts' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">🏦</span>\r\n//             Accounts\r\n//           </button>\r\n          \r\n//           <button \r\n//             onClick={() => setActiveTab('reports')}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'reports' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">📈</span>\r\n//             Reports\r\n//           </button>\r\n          \r\n//           <button \r\n//             onClick={() => setActiveTab('settings')}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'settings' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">⚙️</span>\r\n//             Settings\r\n//           </button>\r\n//         </nav>\r\n        \r\n//         {/* Recent Transactions Section */}\r\n//         <div className=\"mt-auto\">\r\n//           <h3 className=\"text-sm font-semibold uppercase tracking-wider mb-2 opacity-70\">Recent Transactions</h3>\r\n//           <div className=\"space-y-3\">\r\n//             {recentTransactions.map((t) => (\r\n//               <div key={t._id} className=\"flex justify-between items-center p-2 bg-indigo-600 dark:bg-gray-700 rounded-lg\">\r\n//                 <div>\r\n//                   <p className=\"text-sm font-medium\">{t.category || 'Other'}</p>\r\n//                   <p className=\"text-xs opacity-80\">{new Date(t.date).toLocaleDateString()}</p>\r\n//                 </div>\r\n//                 <div className={`text-sm font-bold ${t.status === 'Paid' ? 'text-green-300' : 'text-yellow-300'}`}>\r\n//                   ₹{t.amount}\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Main content */}\r\n//       <div className=\"flex-1 p-6\">\r\n//         {/* Header with search and user controls */}\r\n//         <div className=\"flex justify-between items-center mb-8\">\r\n//           <h1 className=\"text-2xl font-bold text-gray-800 dark:text-white\">\r\n//             {activeTab === 'dashboard' && 'Dashboard Overview'}\r\n//             {activeTab === 'transactions' && 'Transaction History'}\r\n//             {activeTab === 'accounts' && 'Accounts Management'}\r\n//             {activeTab === 'reports' && 'Financial Reports'}\r\n//             {activeTab === 'settings' && 'Settings'}\r\n//           </h1>\r\n          \r\n//           <div className=\"flex items-center space-x-4\">\r\n//             <div className=\"relative\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-full shadow-sm dark:bg-gray-800 dark:text-white\"\r\n//                 placeholder=\"Search...\"\r\n//                 value={search}\r\n//                 onChange={e => setSearch(e.target.value)}\r\n//               />\r\n//               <span className=\"absolute left-3 top-2.5\">🔍</span>\r\n//             </div>\r\n            \r\n//             <button\r\n//               onClick={() => setDarkMode(d => !d)}\r\n//               className=\"p-2 rounded-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600\"\r\n//               title=\"Toggle dark mode\"\r\n//             >\r\n//               {darkMode ? '☀️' : '🌙'}\r\n//             </button>\r\n            \r\n//             <div className=\"flex items-center\">\r\n//               <div className=\"w-8 h-8 rounded-full bg-indigo-600 flex items-center justify-center text-white mr-2\">\r\n//                 {user ? user.charAt(0).toUpperCase() : 'U'}\r\n//               </div>\r\n//               <button\r\n//                 onClick={handleLogout}\r\n//                 className=\"text-sm text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\r\n//               >\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Dashboard Content */}\r\n//         {activeTab === 'dashboard' && (\r\n//           <>\r\n//             {/* Summary metrics - Redesigned */}\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\r\n//                 <div className=\"p-3 rounded-full bg-blue-100 dark:bg-blue-900 mr-4\">\r\n//                   <span className=\"text-blue-600 dark:text-blue-300\">💰</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Balance</p>\r\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">₹{totalAmount.toLocaleString()}</p>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\r\n//                 <div className=\"p-3 rounded-full bg-green-100 dark:bg-green-900 mr-4\">\r\n//                   <span className=\"text-green-600 dark:text-green-300\">↑</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Income</p>\r\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">₹{totalPaid.toLocaleString()}</p>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\r\n//                 <div className=\"p-3 rounded-full bg-red-100 dark:bg-red-900 mr-4\">\r\n//                   <span className=\"text-red-600 dark:text-red-300\">↓</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Expenses</p>\r\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">₹{totalPending.toLocaleString()}</p>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\r\n//                 <div className=\"p-3 rounded-full bg-purple-100 dark:bg-purple-900 mr-4\">\r\n//                   <span className=\"text-purple-600 dark:text-purple-300\">📊</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</p>\r\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">{filtered.length}</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Charts Section */}\r\n//             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n//               {/* Spending Overview Chart */}\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//                 <div className=\"flex justify-between items-center mb-4\">\r\n//                   <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Spending Overview</h2>\r\n//                   <select \r\n//                     className=\"text-sm border-none bg-gray-100 dark:bg-gray-700 rounded-lg px-3 py-1\"\r\n//                     value={month}\r\n//                     onChange={(e) => setMonth(e.target.value)}\r\n//                   >\r\n//                     <option value=\"\">All Months</option>\r\n//                     {Array.from({ length: 12 }, (_, i) => (\r\n//                       <option key={i + 1} value={i + 1}>\r\n//                         {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div className=\"h-64\">\r\n//                   <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n//                     <AreaChart data={barData}>\r\n//                       <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" strokeOpacity={darkMode ? 0.1 : 1} />\r\n//                       <XAxis dataKey=\"name\" stroke={darkMode ? '#aaa' : '#666'} />\r\n//                       <YAxis stroke={darkMode ? '#aaa' : '#666'} />\r\n//                       <Tooltip />\r\n//                       <Area type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.2} />\r\n//                     </AreaChart>\r\n//                   </ResponsiveContainer>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               {/* Categories Chart */}\r\n//               {/* <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//                 <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Spending by Category</h2>\r\n//                 <div className=\"h-64\">\r\n//                   <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n//                     <PieChart>\r\n//                       <Pie \r\n//                         data={categoryData} \r\n//                         dataKey=\"value\" \r\n//                         nameKey=\"name\" \r\n//                         cx=\"50%\" \r\n//                         cy=\"50%\" \r\n//                         outerRadius={80} \r\n//                         fill=\"#8884d8\" \r\n//                         label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n//                       >\r\n//                         {categoryData.map((_, i) => (\r\n//                           <Cell key={i} fill={COLORS[i % COLORS.length]} />\r\n//                         ))}\r\n//                       </Pie>\r\n//                       <Tooltip formatter={(value) => [`₹${value}`, 'Amount']} />\r\n//                       <Legend />\r\n//                     </PieChart>\r\n//                   </ResponsiveContainer>\r\n//                 </div> */}\r\n//               {/* </div> */}\r\n//             </div>\r\n\r\n//             {/* Recent Transactions Table */}\r\n//             <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow overflow-hidden\">\r\n//               <div className=\"p-6 flex justify-between items-center\">\r\n//                 <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Recent Transactions</h2>\r\n//                 <button \r\n//                   onClick={() => setShowTransactions(true)}\r\n//                   className=\"text-sm text-indigo-600 dark:text-indigo-400 hover:underline\"\r\n//                 >\r\n//                   View All\r\n//                 </button>\r\n//               </div>\r\n              \r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n//                     <tr>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Category</th>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n//                     {transactions.slice(0, 5).map((t) => (\r\n//                       <tr key={t._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"flex items-center\">\r\n//                             <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-indigo-100 dark:bg-indigo-900 flex items-center justify-center\">\r\n//                               <span className=\"text-indigo-600 dark:text-indigo-300\">💳</span>\r\n//                             </div>\r\n//                             <div className=\"ml-4\">\r\n//                               <div className=\"text-sm font-medium text-gray-900 dark:text-white\">{t.category || 'Other'}</div>\r\n//                               <div className=\"text-sm text-gray-500 dark:text-gray-400\">{t.user_id}</div>\r\n//                             </div>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"text-sm text-gray-900 dark:text-white\">{t.description || '-'}</div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"text-sm text-gray-900 dark:text-white\">\r\n//                             {new Date(t.date).toLocaleDateString()}\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n//                             ₹{t.amount}\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \r\n//                             ${t.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \r\n//                               'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\r\n//                             {t.status}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               </div>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n\r\n//         {/* Transactions Tab Content */}\r\n//         {(activeTab === 'transactions' || showTransactions) && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow overflow-hidden\">\r\n//             <div className=\"p-6 flex justify-between items-center\">\r\n//               <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Transaction History</h2>\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button \r\n//                   onClick={exportToCSV}\r\n//                   className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 text-sm\"\r\n//                 >\r\n//                   Export CSV\r\n//                 </button>\r\n//                 <button \r\n//                   onClick={() => setShowFilters(!showFilters)}\r\n//                   className=\"px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 text-sm\"\r\n//                 >\r\n//                   {showFilters ? 'Hide Filters' : 'Show Filters'}\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Filters Section */}\r\n//             {showFilters && (\r\n//               <div className=\"px-6 pb-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n//                 <select \r\n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\r\n//                   value={status}\r\n//                   onChange={(e) => setStatus(e.target.value)}\r\n//                 >\r\n//                   <option value=\"\">All Status</option>\r\n//                   <option value=\"Paid\">Paid</option>\r\n//                   <option value=\"Pending\">Pending</option>\r\n//                 </select>\r\n                \r\n//                 <select \r\n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\r\n//                   value={category}\r\n//                   onChange={(e) => setCategory(e.target.value)}\r\n//                 >\r\n//                   <option value=\"\">All Categories</option>\r\n//                   {uniqueCategories.map((cat) => (\r\n//                     <option key={cat}>{cat}</option>\r\n//                   ))}\r\n//                 </select>\r\n                \r\n//                 <input \r\n//                   type=\"number\" \r\n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\r\n//                   placeholder=\"Min Amount\"\r\n//                   value={minAmount}\r\n//                   onChange={(e) => setMinAmount(e.target.value)}\r\n//                 />\r\n                \r\n//                 <input \r\n//                   type=\"number\" \r\n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\r\n//                   placeholder=\"Max Amount\"\r\n//                   value={maxAmount}\r\n//                   onChange={(e) => setMaxAmount(e.target.value)}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n\r\n//             {/* Transactions Table */}\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">User</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Category</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n//                   {currentEntries.length === 0 ? (\r\n//                     <tr>\r\n//                       <td colSpan={6} className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\">\r\n//                         No transactions found.\r\n//                       </td>\r\n//                     </tr>\r\n//                   ) : (\r\n//                     currentEntries.map((t) => (\r\n//                       <tr key={t._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n//                           {t.user_id}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n//                           {new Date(t.date).toLocaleDateString()}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\r\n//                           ₹{t.amount}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n//                           {t.category || 'N/A'}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n//                           {t.description || '-'}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \r\n//                             ${t.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \r\n//                               'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\r\n//                             {t.status}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))\r\n//                   )}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n\r\n//             {/* Pagination */}\r\n//             <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200 dark:border-gray-700\">\r\n//               <div className=\"flex-1 flex justify-between sm:hidden\">\r\n//                 <button \r\n//                   onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\r\n//                   disabled={currentPage === 1}\r\n//                   className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n//                 >\r\n//                   Previous\r\n//                 </button>\r\n//                 <button \r\n//                   onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\r\n//                   disabled={currentPage === totalPages}\r\n//                   className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n//                 >\r\n//                   Next\r\n//                 </button>\r\n//               </div>\r\n//               <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n//                 <div>\r\n//                   <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n//                     Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{Math.min(startIndex + rowsPerPage, totalEntries)}</span> of <span className=\"font-medium\">{totalEntries}</span> results\r\n//                   </p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\r\n//                     <button\r\n//                       onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\r\n//                       disabled={currentPage === 1}\r\n//                       className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\r\n//                     >\r\n//                       <span className=\"sr-only\">Previous</span>\r\n//                       &larr;\r\n//                     </button>\r\n//                     {Array.from({ length: totalPages }, (_, i) => (\r\n//                       <button\r\n//                         key={i + 1}\r\n//                         onClick={() => setCurrentPage(i + 1)}\r\n//                         className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\r\n//                           currentPage === i + 1\r\n//                             ? 'z-10 bg-indigo-50 border-indigo-500 text-indigo-600 dark:bg-indigo-900 dark:border-indigo-700 dark:text-indigo-200'\r\n//                             : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300'\r\n//                         }`}\r\n//                       >\r\n//                         {i + 1}\r\n//                       </button>\r\n//                     ))}\r\n//                     <button\r\n//                       onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\r\n//                       disabled={currentPage === totalPages}\r\n//                       className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\r\n//                     >\r\n//                       <span className=\"sr-only\">Next</span>\r\n//                       &rarr;\r\n//                     </button>\r\n//                   </nav>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Other Tab Content Placeholders */}\r\n//         {activeTab === 'accounts' && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Accounts Management</h2>\r\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your accounts management content will appear here.</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reports' && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Financial Reports</h2>\r\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your financial reports will appear here.</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'settings' && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Settings</h2>\r\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your settings will appear here.</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n\r\n// dash board 3\r\n// import { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import {\r\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\r\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer\r\n// } from 'recharts';\r\n\r\n// interface Transaction {\r\n//   _id: string;\r\n//   date: string;\r\n//   amount: number;\r\n//   category: string;\r\n//   description?: string;\r\n//   user_id: string;\r\n//   status: 'Paid' | 'Pending';\r\n// }\r\n\r\n// function Dashboard() {\r\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\r\n//   const [month, setMonth] = useState('');\r\n//   const [status, setStatus] = useState('');\r\n//   const [category, setCategory] = useState('');\r\n//   const [user, setUser] = useState('');\r\n//   const [minAmount, setMinAmount] = useState('');\r\n//   const [maxAmount, setMaxAmount] = useState('');\r\n//   const [groupByWeek, setGroupByWeek] = useState(false);\r\n//   const [startDate, setStartDate] = useState('');\r\n//   const [endDate, setEndDate] = useState('');\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const rowsPerPage = 10;\r\n//   const [error, setError] = useState('');\r\n//   const [search, setSearch] = useState('');\r\n//   const [darkMode, setDarkMode] = useState(() => {\r\n//     if (typeof window !== \"undefined\") {\r\n//       const stored = localStorage.getItem('dashboard-darkmode');\r\n//       if (stored) return stored === 'true';\r\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n//     }\r\n//     return false;\r\n//   });\r\n//   const [showFilters, setShowFilters] = useState(false);\r\n\r\n//   // Sidebar navigation\r\n//   const [activeView, setActiveView] = useState<'dashboard' | 'transactions' | 'analytics' | 'wallet' | 'messages' | 'settings'>('dashboard');\r\n\r\n//   const navigate = useNavigate();\r\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\r\n\r\n//   useEffect(() => {\r\n//     if (darkMode) {\r\n//       document.documentElement.classList.add('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'true');\r\n//     } else {\r\n//       document.documentElement.classList.remove('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'false');\r\n//     }\r\n//   }, [darkMode]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchTransactions = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\r\n//         setTransactions(data);\r\n//         setFiltered(data);\r\n//       } catch (err) {\r\n//         setError('Failed to load transactions');\r\n//       }\r\n//     };\r\n//     fetchTransactions();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     let result = [...transactions];\r\n\r\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\r\n//     if (status) result = result.filter((t) => t.status === status);\r\n//     if (category) result = result.filter((t) => t.category === category);\r\n//     if (user) result = result.filter((t) => t.user_id === user);\r\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\r\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\r\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\r\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\r\n\r\n//     if (search.trim()) {\r\n//       const s = search.trim().toLowerCase();\r\n//       result = result.filter((t) =>\r\n//         t.user_id?.toLowerCase().includes(s) ||\r\n//         t.status?.toLowerCase().includes(s) ||\r\n//         t.category?.toLowerCase().includes(s) ||\r\n//         t.description?.toLowerCase().includes(s) ||\r\n//         t.amount.toString().includes(s) ||\r\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\r\n//       );\r\n//     }\r\n\r\n//     setCurrentPage(1);\r\n//     setFiltered(result);\r\n//   }, [\r\n//     month, status, category, user, minAmount, maxAmount,\r\n//     startDate, endDate, transactions, search\r\n//   ]);\r\n\r\n//   const exportToCSV = () => {\r\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\r\n//     const rows = filtered\r\n//       .map((t) => {\r\n//         const date = new Date(t.date).toISOString().split('T')[0];\r\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\r\n//       })\r\n//       .join('\\n');\r\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.href = url;\r\n//     a.download = 'transactions.csv';\r\n//     a.click();\r\n//     URL.revokeObjectURL(url);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\r\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\r\n\r\n//   const getWeek = (dateStr: string) => {\r\n//     const date = new Date(dateStr);\r\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n//     const dayOfWeek = firstDay.getDay();\r\n//     const adjustedDate = date.getDate() + dayOfWeek;\r\n//     return Math.ceil(adjustedDate / 7);\r\n//   };\r\n\r\n//   const categoryData = Object.entries(\r\n//     filtered.reduce((acc, t) => {\r\n//       const key = t.category || 'Uncategorized';\r\n//       acc[key] = (acc[key] || 0) + t.amount;\r\n//       return acc;\r\n//     }, {} as Record<string, number>)\r\n//   ).map(([name, value]) => ({ name, value }));\r\n\r\n//   const barData = groupByWeek\r\n//     ? Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const weeks = [0, 0, 0, 0, 0];\r\n//         filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .forEach((t) => {\r\n//             const week = getWeek(t.date);\r\n//             weeks[week - 1] += t.amount;\r\n//           });\r\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\r\n//       })\r\n//     : Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const total = filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .reduce((sum, t) => sum + t.amount, 0);\r\n//         return { name: monthName, total };\r\n//       });\r\n\r\n//   const totalEntries = filtered.length;\r\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\r\n//   const startIndex = (currentPage - 1) * rowsPerPage;\r\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n//   // Summary metrics\r\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\r\n\r\n//   return (\r\n//     <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\r\n//       {/* Sidebar */}\r\n//       <div className=\"w-64 bg-white dark:bg-gray-800 shadow-md p-4 flex flex-col\">\r\n//         <h2 className=\"text-xl font-bold mb-6 text-blue-600 dark:text-blue-300\">Looper.ai</h2>\r\n//         {/* Sidebar Menu Items */}\r\n//         <nav className=\"flex-1 space-y-2 mb-6\">\r\n//           <button\r\n//             onClick={() => setActiveView('dashboard')}\r\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'dashboard' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n//             <span className=\"mr-3\">📊</span>\r\n//             <span>Dashboard</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveView('transactions')}\r\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'transactions' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n//             <span className=\"mr-3\">💰</span>\r\n//             <span>Transactions</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveView('analytics')}\r\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'analytics' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n//             <span className=\"mr-3\">📈</span>\r\n//             <span>Analytics</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveView('wallet')}\r\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'wallet' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n//             <span className=\"mr-3\">👛</span>\r\n//             <span>Wallet</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveView('messages')}\r\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'messages' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n//             <span className=\"mr-3\">💬</span>\r\n//             <span>Messages</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveView('settings')}\r\n//             className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'settings' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n//             <span className=\"mr-3\">⚙️</span>\r\n//             <span>Settings</span>\r\n//           </button>\r\n//         </nav>\r\n\r\n//         {/* Filter toggle button */}\r\n//         <button\r\n//           onClick={() => setShowFilters(!showFilters)}\r\n//           className=\"flex items-center justify-between w-full p-2 mb-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n//         >\r\n//           <span className=\"font-medium\">Filters</span>\r\n//           <span>{showFilters ? '▲' : '▼'}</span>\r\n//         </button>\r\n\r\n//         {/* Filters section - conditionally rendered */}\r\n//         {showFilters && (\r\n//           <div className=\"space-y-4 mb-4\">\r\n//             <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\r\n//               <option value=\"\">All Months</option>\r\n//               {Array.from({ length: 12 }, (_, i) => (\r\n//                 <option key={i + 1} value={i + 1}>\r\n//                   {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n\r\n//             <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\r\n//               <option value=\"\">All Status</option>\r\n//               <option value=\"Paid\">Paid</option>\r\n//               <option value=\"Pending\">Pending</option>\r\n//             </select>\r\n\r\n//             <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n//               <option value=\"\">All Categories</option>\r\n//               {uniqueCategories.map((cat) => (\r\n//                 <option key={cat}>{cat}</option>\r\n//               ))}\r\n//             </select>\r\n\r\n//             <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\r\n//               <option value=\"\">All Users</option>\r\n//               {uniqueUsers.map((u) => (\r\n//                 <option key={u}>{u}</option>\r\n//               ))}\r\n//             </select>\r\n\r\n//             <input type=\"number\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" placeholder=\"Min ₹\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\r\n//             <input type=\"number\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" placeholder=\"Max ₹\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\r\n\r\n//             <input type=\"date\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n//             <input type=\"date\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n\r\n//             <div className=\"flex space-x-2\">\r\n//               <button onClick={exportToCSV} className=\"flex-1 bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700 text-sm\">Export CSV</button>\r\n//               <button onClick={() => {\r\n//                 setMonth(''); setStatus(''); setCategory(''); setUser('');\r\n//                 setMinAmount(''); setMaxAmount(''); setStartDate('');\r\n//                 setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\r\n//                 setFiltered(transactions);\r\n//                 setSearch('');\r\n//               }} className=\"flex-1 bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600 text-sm\">Reset</button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Main content */}\r\n//       <div className=\"flex-1 p-6\">\r\n//         {/* Header with search and dark mode toggle */}\r\n//         <div className=\"flex justify-between items-center mb-6\">\r\n//           <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">\r\n//             {activeView === 'dashboard' ? 'Dashboard' :\r\n//               activeView === 'transactions' ? 'Transactions' :\r\n//                 activeView.charAt(0).toUpperCase() + activeView.slice(1)}\r\n//           </h1>\r\n//           <div className=\"flex gap-3 items-center\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\r\n//               placeholder=\"🔍 Search transactions...\"\r\n//               value={search}\r\n//               onChange={e => setSearch(e.target.value)}\r\n//             />\r\n//             <button\r\n//               onClick={() => setDarkMode(d => !d)}\r\n//               className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\r\n//               title=\"Toggle dark mode\"\r\n//             >\r\n//               {darkMode ? '☀️' : '🌙'}\r\n//             </button>\r\n//             <button\r\n//               onClick={handleLogout}\r\n//               className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\r\n//             >\r\n//               Logout\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* DASHBOARD VIEW */}\r\n//         {activeView === 'dashboard' && (\r\n//           <>\r\n//             {/* Summary metrics */}\r\n//             <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//                 <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\r\n//                 <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\r\n//               </div>\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//                 <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\r\n//                 <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">₹{totalAmount.toLocaleString()}</span>\r\n//               </div>\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//                 <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\r\n//                 <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">₹{totalPaid.toLocaleString()}</span>\r\n//               </div>\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//                 <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\r\n//                 <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">₹{totalPending.toLocaleString()}</span>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n//             {/* Charts */}\r\n//             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4\">\r\n//                 <h2 className=\"text-xl font-semibold mb-4 text-blue-600 dark:text-blue-300\">📈 Spending by Category</h2>\r\n//                 <ResponsiveContainer width=\"100%\" height={300}>\r\n//                   <PieChart>\r\n//                     <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\r\n//                       {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\r\n//                     </Pie>\r\n//                     <Tooltip />\r\n//                     <Legend />\r\n//                   </PieChart>\r\n//                 </ResponsiveContainer>\r\n//               </div>\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4\">\r\n//                 <h2 className=\"text-xl font-semibold mb-4 text-green-600 dark:text-green-300\">📊 Monthly Spending</h2>\r\n//                 <ResponsiveContainer width=\"100%\" height={300}>\r\n//                   <BarChart data={barData}>\r\n//                     <CartesianGrid strokeDasharray=\"3 3\" />\r\n//                     <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\r\n//                     <YAxis stroke={darkMode ? '#ddd' : '#333'} />\r\n//                     <Tooltip />\r\n//                     <Legend />\r\n//                     {groupByWeek\r\n//                       ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\r\n//                       : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\r\n//                   </BarChart>\r\n//                 </ResponsiveContainer>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Group by week toggle */}\r\n//             <div className=\"flex justify-between items-center mb-4\">\r\n//               <label className=\"flex items-center gap-2 text-sm dark:text-gray-300\">\r\n//                 <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\r\n//                 Group by Week\r\n//               </label>\r\n//               <div className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n//                 Showing {startIndex + 1}–{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\r\n//               </div>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n\r\n//         {/* TRANSACTIONS VIEW */}\r\n//         {activeView === 'transactions' && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded shadow overflow-hidden\">\r\n//             <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n//               <thead className=\"bg-gray-50 dark:bg-gray-900\">\r\n//                 <tr>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Date</th>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Amount</th>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Category</th>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Description</th>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Status</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n//                 {currentEntries.map((transaction) => (\r\n//                   <tr key={transaction._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n//                       {new Date(transaction.date).toLocaleDateString()}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n//                       ₹{transaction.amount.toLocaleString()}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n//                       {transaction.category}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n//                       {transaction.description || '-'}\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n//                       <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n//                         transaction.status === 'Paid'\r\n//                           ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\r\n//                           : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\r\n//                       }`}>\r\n//                         {transaction.status}\r\n//                       </span>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n\r\n//             {/* Pagination */}\r\n//             <div className=\"px-4 py-3 flex items-center justify-between border-t border-gray-200 dark:border-gray-700 sm:px-6\">\r\n//               <div className=\"flex-1 flex justify-between sm:hidden\">\r\n//                 <button onClick={() => setCurrentPage(p => Math.max(1, p - 1))} disabled={currentPage === 1} className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\r\n//                   Previous\r\n//                 </button>\r\n//                 <button onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))} disabled={currentPage === totalPages} className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\r\n//                   Next\r\n//                 </button>\r\n//               </div>\r\n//               <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n//                 <div>\r\n//                   <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n//                     Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{Math.min(startIndex + rowsPerPage, totalEntries)}</span> of{' '}\r\n//                     <span className=\"font-medium\">{totalEntries}</span> results\r\n//                   </p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\r\n//                     <button onClick={() => setCurrentPage(p => Math.max(1, p - 1))} disabled={currentPage === 1} className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                       Previous\r\n//                     </button>\r\n//                     {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\r\n//                       <button key={page} onClick={() => setCurrentPage(page)} className={`relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium ${currentPage === page ? 'text-blue-600 dark:text-blue-400' : 'text-gray-700 dark:text-gray-300'} hover:bg-gray-50 dark:hover:bg-gray-700`}>\r\n//                         {page}\r\n//                       </button>\r\n//                     ))}\r\n//                     <button onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))} disabled={currentPage === totalPages} className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                       Next\r\n//                     </button>\r\n//                   </nav>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* ANALYTICS VIEW */}\r\n//         {activeView === 'analytics' && (\r\n//           <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\r\n//             <h2 className=\"text-2xl font-semibold mb-2\">Analytics</h2>\r\n//             <p>Analytics content will appear here.</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* WALLET VIEW */}\r\n//         {activeView === 'wallet' && (\r\n//           <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\r\n//             <h2 className=\"text-2xl font-semibold mb-2\">Wallet</h2>\r\n//             <p>Wallet content will appear here.</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* MESSAGES VIEW */}\r\n//         {activeView === 'messages' && (\r\n//           <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\r\n//             <h2 className=\"text-2xl font-semibold mb-2\">Messages</h2>\r\n//             <p>Messages content will appear here.</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* SETTINGS VIEW */}\r\n//         {activeView === 'settings' && (\r\n//           <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\r\n//             <h2 className=\"text-2xl font-semibold mb-2\">Settings</h2>\r\n//             <p>Settings content will appear here.</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}