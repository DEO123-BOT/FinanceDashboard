{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\looper-frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import {\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer\n// } from 'recharts';\n\n// interface Transaction {\n//   _id: string;\n//   date: string;\n//   amount: number;\n//   category: string;\n//   description?: string;\n//   user_id: string;\n//   status: 'Paid' | 'Pending';\n// }\n\n// function Dashboard() {\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\n//   const [month, setMonth] = useState('');\n//   const [status, setStatus] = useState('');\n//   const [category, setCategory] = useState('');\n//   const [user, setUser] = useState('');\n//   const [minAmount, setMinAmount] = useState('');\n//   const [maxAmount, setMaxAmount] = useState('');\n//   const [groupByWeek, setGroupByWeek] = useState(false);\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const rowsPerPage = 10;\n//   const [error, setError] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [darkMode, setDarkMode] = useState(() => {\n//     // On first load, check localStorage or system preference\n//     if (typeof window !== \"undefined\") {\n//       const stored = localStorage.getItem('dashboard-darkmode');\n//       if (stored) return stored === 'true';\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\n//     }\n//     return false;\n//   });\n\n//   const navigate = useNavigate();\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\n\n//   // Apply dark mode class to <html>\n//   useEffect(() => {\n//     if (darkMode) {\n//       document.documentElement.classList.add('dark');\n//       localStorage.setItem('dashboard-darkmode', 'true');\n//     } else {\n//       document.documentElement.classList.remove('dark');\n//       localStorage.setItem('dashboard-darkmode', 'false');\n//     }\n//   }, [darkMode]);\n\n//   useEffect(() => {\n//     const fetchTransactions = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\n//         setTransactions(data);\n//         setFiltered(data);\n//       } catch (err) {\n//         setError('Failed to load transactions');\n//       }\n//     };\n//     fetchTransactions();\n//   }, []);\n\n//   useEffect(() => {\n//     let result = [...transactions];\n\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\n//     if (status) result = result.filter((t) => t.status === status);\n//     if (category) result = result.filter((t) => t.category === category);\n//     if (user) result = result.filter((t) => t.user_id === user);\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\n\n//     // Real-time search filter\n//     if (search.trim()) {\n//       const s = search.trim().toLowerCase();\n//       result = result.filter((t) =>\n//         t.user_id?.toLowerCase().includes(s) ||\n//         t.status?.toLowerCase().includes(s) ||\n//         t.category?.toLowerCase().includes(s) ||\n//         t.description?.toLowerCase().includes(s) ||\n//         t.amount.toString().includes(s) ||\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\n//       );\n//     }\n\n//     setCurrentPage(1);\n//     setFiltered(result);\n//   }, [\n//     month, status, category, user, minAmount, maxAmount,\n//     startDate, endDate, transactions, search\n//   ]);\n\n//   const exportToCSV = () => {\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\n//     const rows = filtered\n//       .map((t) => {\n//         const date = new Date(t.date).toISOString().split('T')[0];\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\n//       })\n//       .join('\\n');\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = 'transactions.csv';\n//     a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     navigate('/');\n//   };\n\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\n\n//   const getWeek = (dateStr: string) => {\n//     const date = new Date(dateStr);\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//     const dayOfWeek = firstDay.getDay();\n//     const adjustedDate = date.getDate() + dayOfWeek;\n//     return Math.ceil(adjustedDate / 7);\n//   };\n\n//   const categoryData = Object.entries(\n//     filtered.reduce((acc, t) => {\n//       const key = t.category || 'Uncategorized';\n//       acc[key] = (acc[key] || 0) + t.amount;\n//       return acc;\n//     }, {} as Record<string, number>)\n//   ).map(([name, value]) => ({ name, value }));\n\n//   const barData = groupByWeek\n//     ? Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const weeks = [0, 0, 0, 0, 0];\n//         filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .forEach((t) => {\n//             const week = getWeek(t.date);\n//             weeks[week - 1] += t.amount;\n//           });\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\n//       })\n//     : Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const total = filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .reduce((sum, t) => sum + t.amount, 0);\n//         return { name: monthName, total };\n//       });\n\n//   const totalEntries = filtered.length;\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\n//   const startIndex = (currentPage - 1) * rowsPerPage;\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\n\n//   // --- SUMMARY METRICS LOGIC ---\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\n\n//   return (\n//     <div className=\"p-6 min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\n//       <div className=\"flex justify-between items-center mb-6\">\n//         <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">üìä Dashboard</h1>\n//         <div className=\"flex gap-3 items-center\">\n//           <button\n//             onClick={() => setDarkMode(d => !d)}\n//             className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\n//             title=\"Toggle dark mode\"\n//           >\n//             {darkMode ? '‚òÄÔ∏è' : 'üåô'}\n//           </button>\n//           <button\n//             onClick={handleLogout}\n//             className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* --- REAL-TIME SEARCH INPUT --- */}\n//       <div className=\"mb-4 flex\">\n//         <input\n//           type=\"text\"\n//           className=\"w-full md:w-1/3 p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\n//           placeholder=\"üîç Search transactions (user, status, amount, date, category, description)...\"\n//           value={search}\n//           onChange={e => setSearch(e.target.value)}\n//         />\n//       </div>\n\n//       {/* --- SUMMARY METRICS SECTION --- */}\n//       <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\n//           <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\n//         </div>\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\n//           <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">‚Çπ{totalAmount.toLocaleString()}</span>\n//         </div>\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\n//           <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">‚Çπ{totalPaid.toLocaleString()}</span>\n//         </div>\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\n//           <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">‚Çπ{totalPending.toLocaleString()}</span>\n//         </div>\n//       </div>\n//       {/* --- END SUMMARY METRICS SECTION --- */}\n\n//       {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n\n//       {/* Filters */}\n//       <div className=\"grid md:grid-cols-3 lg:grid-cols-6 gap-4 mb-4\">\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\n//           <option value=\"\">All Months</option>\n//           {Array.from({ length: 12 }, (_, i) => (\n//             <option key={i + 1} value={i + 1}>\n//               {new Date(0, i).toLocaleString('default', { month: 'long' })}\n//             </option>\n//           ))}\n//         </select>\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\n//           <option value=\"\">All Status</option>\n//           <option value=\"Paid\">Paid</option>\n//           <option value=\"Pending\">Pending</option>\n//         </select>\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\n//           <option value=\"\">All Categories</option>\n//           {uniqueCategories.map((cat) => (\n//             <option key={cat}>{cat}</option>\n//           ))}\n//         </select>\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\n//           <option value=\"\">All Users</option>\n//           {uniqueUsers.map((u) => (\n//             <option key={u}>{u}</option>\n//           ))}\n//         </select>\n//         <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Min ‚Çπ\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\n//         <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Max ‚Çπ\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\n//       </div>\n//       <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n//         <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n//         <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n//         <button onClick={exportToCSV} className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\">Export CSV</button>\n//         <button onClick={() => {\n//           setMonth(''); setStatus(''); setCategory(''); setUser('');\n//           setMinAmount(''); setMaxAmount(''); setStartDate('');\n//           setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\n//           setFiltered(transactions);\n//           setSearch('');\n//         }} className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\">Reset Filters</button>\n//       </div>\n\n//       <label className=\"flex items-center gap-2 mb-4 text-sm dark:text-gray-300\">\n//         <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\n//         Group by Week\n//       </label>\n\n//       {/* Table */}\n//       <div className=\"overflow-x-auto mb-2\">\n//         <table className=\"w-full bg-white dark:bg-gray-800 rounded shadow-md\">\n//           <thead className=\"bg-blue-600 dark:bg-blue-900 text-white\">\n//             <tr>\n//               <th className=\"p-3 text-left\">User ID</th>\n//               <th className=\"p-3 text-left\">Date</th>\n//               <th className=\"p-3 text-left\">Amount (‚Çπ)</th>\n//               <th className=\"p-3 text-left\">Category</th>\n//               <th className=\"p-3 text-left\">Description</th>\n//               <th className=\"p-3 text-left\">Status</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {currentEntries.length === 0 ? (\n//               <tr>\n//                 <td colSpan={6} className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No transactions found.</td>\n//               </tr>\n//             ) : (\n//               currentEntries.map((t) => (\n//                 <tr key={t._id} className=\"border-t hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                   <td className=\"p-3\">{t.user_id}</td>\n//                   <td className=\"p-3\">{new Date(t.date).toLocaleDateString()}</td>\n//                   <td className=\"p-3\">‚Çπ{t.amount}</td>\n//                   <td className=\"p-3\">{t.category || 'N/A'}</td>\n//                   <td className=\"p-3\">{t.description || '-'}</td>\n//                   <td className={`p-3 font-medium ${t.status === 'Paid' ? 'text-green-600 dark:text-green-400' : 'text-yellow-600 dark:text-yellow-400'}`}>{t.status}</td>\n//                 </tr>\n//               ))\n//             )}\n//           </tbody>\n//         </table>\n//       </div>\n\n//       <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-2 text-center\">\n//         Showing {startIndex + 1}‚Äì{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\n//       </div>\n\n//       <div className=\"flex items-center justify-center gap-4 mb-10\">\n//         <button onClick={() => setCurrentPage((p) => Math.max(1, p - 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\n//           Prev\n//         </button>\n//         <span className=\"dark:text-gray-200\">Page</span>\n//         <input\n//           type=\"number\"\n//           min={1}\n//           max={totalPages}\n//           value={currentPage}\n//           onChange={(e) => {\n//             const val = parseInt(e.target.value);\n//             if (!isNaN(val) && val >= 1 && val <= totalPages) {\n//               setCurrentPage(val);\n//             }\n//           }}\n//           className=\"w-16 p-1 border rounded text-center dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\"\n//         />\n//         <span className=\"dark:text-gray-200\">of {totalPages}</span>\n//         <button onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\n//           Next\n//         </button>\n//       </div>\n\n//       {/* Charts */}\n//       <h2 className=\"text-xl font-semibold mt-8 mb-4 text-blue-600 dark:text-blue-300\">üìà Spending by Category</h2>\n//       <ResponsiveContainer width=\"100%\" height={300}>\n//         <PieChart>\n//           <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\n//             {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </ResponsiveContainer>\n\n//       <h2 className=\"text-xl font-semibold mt-8 mb-4 text-green-600 dark:text-green-300\">üìä Monthly Spending</h2>\n//       <ResponsiveContainer width=\"100%\" height={300}>\n//         <BarChart data={barData}>\n//           <CartesianGrid strokeDasharray=\"3 3\" />\n//           <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\n//           <YAxis stroke={darkMode ? '#ddd' : '#333'} />\n//           <Tooltip />\n//           <Legend />\n//           {groupByWeek\n//             ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\n//             : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\n//         </BarChart>\n//       </ResponsiveContainer>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import {\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer, AreaChart, Area\n// } from 'recharts';\n\n// interface Transaction {\n//   _id: string;\n//   date: string;\n//   amount: number;\n//   category: string;\n//   description?: string;\n//   user_id: string;\n//   status: 'Paid' | 'Pending';\n// }\n\n// function Dashboard() {\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\n//   const [month, setMonth] = useState('');\n//   const [status, setStatus] = useState('');\n//   const [category, setCategory] = useState('');\n//   const [user, setUser] = useState('');\n//   const [minAmount, setMinAmount] = useState('');\n//   const [maxAmount, setMaxAmount] = useState('');\n//   const [groupByWeek, setGroupByWeek] = useState(false);\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const rowsPerPage = 10;\n//   const [error, setError] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [darkMode, setDarkMode] = useState(() => {\n//     if (typeof window !== \"undefined\") {\n//       const stored = localStorage.getItem('dashboard-darkmode');\n//       if (stored) return stored === 'true';\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\n//     }\n//     return false;\n//   });\n//   const [showFilters, setShowFilters] = useState(false);\n//   const [activeTab, setActiveTab] = useState('dashboard');\n//   const [showTransactions, setShowTransactions] = useState(false);\n\n//   const navigate = useNavigate();\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\n\n//   useEffect(() => {\n//     if (darkMode) {\n//       document.documentElement.classList.add('dark');\n//       localStorage.setItem('dashboard-darkmode', 'true');\n//     } else {\n//       document.documentElement.classList.remove('dark');\n//       localStorage.setItem('dashboard-darkmode', 'false');\n//     }\n//   }, [darkMode]);\n\n//   useEffect(() => {\n//     const fetchTransactions = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\n//         setTransactions(data);\n//         setFiltered(data);\n//       } catch (err) {\n//         setError('Failed to load transactions');\n//       }\n//     };\n//     fetchTransactions();\n//   }, []);\n\n//   useEffect(() => {\n//     let result = [...transactions];\n\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\n//     if (status) result = result.filter((t) => t.status === status);\n//     if (category) result = result.filter((t) => t.category === category);\n//     if (user) result = result.filter((t) => t.user_id === user);\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\n\n//     if (search.trim()) {\n//       const s = search.trim().toLowerCase();\n//       result = result.filter((t) =>\n//         t.user_id?.toLowerCase().includes(s) ||\n//         t.status?.toLowerCase().includes(s) ||\n//         t.category?.toLowerCase().includes(s) ||\n//         t.description?.toLowerCase().includes(s) ||\n//         t.amount.toString().includes(s) ||\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\n//       );\n//     }\n\n//     setCurrentPage(1);\n//     setFiltered(result);\n//   }, [\n//     month, status, category, user, minAmount, maxAmount,\n//     startDate, endDate, transactions, search\n//   ]);\n\n//   const exportToCSV = () => {\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\n//     const rows = filtered\n//       .map((t) => {\n//         const date = new Date(t.date).toISOString().split('T')[0];\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\n//       })\n//       .join('\\n');\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = 'transactions.csv';\n//     a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     navigate('/');\n//   };\n\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\n\n//   const getWeek = (dateStr: string) => {\n//     const date = new Date(dateStr);\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//     const dayOfWeek = firstDay.getDay();\n//     const adjustedDate = date.getDate() + dayOfWeek;\n//     return Math.ceil(adjustedDate / 7);\n//   };\n\n//   const categoryData = Object.entries(\n//     filtered.reduce((acc, t) => {\n//       const key = t.category || 'Uncategorized';\n//       acc[key] = (acc[key] || 0) + t.amount;\n//       return acc;\n//     }, {} as Record<string, number>)\n//   ).map(([name, value]) => ({ name, value }));\n\n//   const barData = groupByWeek\n//     ? Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const weeks = [0, 0, 0, 0, 0];\n//         filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .forEach((t) => {\n//             const week = getWeek(t.date);\n//             weeks[week - 1] += t.amount;\n//           });\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\n//       })\n//     : Array.from({ length: 12 }, (_, i) => {\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\n//         const total = filtered\n//           .filter((t) => new Date(t.date).getMonth() === i)\n//           .reduce((sum, t) => sum + t.amount, 0);\n//         return { name: monthName, total };\n//       });\n\n//   // Recent transactions data for the sidebar\n//   const recentTransactions = [...transactions]\n//     .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n//     .slice(0, 5);\n\n//   const totalEntries = filtered.length;\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\n//   const startIndex = (currentPage - 1) * rowsPerPage;\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\n\n//   // Summary metrics\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\n\n//   return (\n//     <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\n//       {/* Sidebar - Redesigned */}\n//       <div className=\"w-64 bg-indigo-700 dark:bg-gray-800 shadow-md p-4 flex flex-col text-white\">\n//         <div className=\"flex items-center mb-8\">\n//           <div className=\"w-10 h-10 rounded-full bg-white flex items-center justify-center mr-3\">\n//             <span className=\"text-indigo-700 font-bold text-xl\">$</span>\n//           </div>\n//           <h2 className=\"text-xl font-bold\">Finance Dashboard</h2>\n//         </div>\n\n//         {/* Main Navigation */}\n//         <nav className=\"space-y-1 mb-8\">\n//           <button \n//             onClick={() => { setActiveTab('dashboard'); setShowTransactions(false); }}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'dashboard' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">üìä</span>\n//             Dashboard\n//           </button>\n\n//           <button \n//             onClick={() => { setActiveTab('transactions'); setShowTransactions(true); }}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'transactions' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">üí≥</span>\n//             Transactions\n//           </button>\n\n//           <button \n//             onClick={() => setActiveTab('accounts')}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'accounts' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">üè¶</span>\n//             Accounts\n//           </button>\n\n//           <button \n//             onClick={() => setActiveTab('reports')}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'reports' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">üìà</span>\n//             Reports\n//           </button>\n\n//           <button \n//             onClick={() => setActiveTab('settings')}\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'settings' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\n//           >\n//             <span className=\"mr-3\">‚öôÔ∏è</span>\n//             Settings\n//           </button>\n//         </nav>\n\n//         {/* Recent Transactions Section */}\n//         <div className=\"mt-auto\">\n//           <h3 className=\"text-sm font-semibold uppercase tracking-wider mb-2 opacity-70\">Recent Transactions</h3>\n//           <div className=\"space-y-3\">\n//             {recentTransactions.map((t) => (\n//               <div key={t._id} className=\"flex justify-between items-center p-2 bg-indigo-600 dark:bg-gray-700 rounded-lg\">\n//                 <div>\n//                   <p className=\"text-sm font-medium\">{t.category || 'Other'}</p>\n//                   <p className=\"text-xs opacity-80\">{new Date(t.date).toLocaleDateString()}</p>\n//                 </div>\n//                 <div className={`text-sm font-bold ${t.status === 'Paid' ? 'text-green-300' : 'text-yellow-300'}`}>\n//                   ‚Çπ{t.amount}\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Main content */}\n//       <div className=\"flex-1 p-6\">\n//         {/* Header with search and user controls */}\n//         <div className=\"flex justify-between items-center mb-8\">\n//           <h1 className=\"text-2xl font-bold text-gray-800 dark:text-white\">\n//             {activeTab === 'dashboard' && 'Dashboard Overview'}\n//             {activeTab === 'transactions' && 'Transaction History'}\n//             {activeTab === 'accounts' && 'Accounts Management'}\n//             {activeTab === 'reports' && 'Financial Reports'}\n//             {activeTab === 'settings' && 'Settings'}\n//           </h1>\n\n//           <div className=\"flex items-center space-x-4\">\n//             <div className=\"relative\">\n//               <input\n//                 type=\"text\"\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-full shadow-sm dark:bg-gray-800 dark:text-white\"\n//                 placeholder=\"Search...\"\n//                 value={search}\n//                 onChange={e => setSearch(e.target.value)}\n//               />\n//               <span className=\"absolute left-3 top-2.5\">üîç</span>\n//             </div>\n\n//             <button\n//               onClick={() => setDarkMode(d => !d)}\n//               className=\"p-2 rounded-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600\"\n//               title=\"Toggle dark mode\"\n//             >\n//               {darkMode ? '‚òÄÔ∏è' : 'üåô'}\n//             </button>\n\n//             <div className=\"flex items-center\">\n//               <div className=\"w-8 h-8 rounded-full bg-indigo-600 flex items-center justify-center text-white mr-2\">\n//                 {user ? user.charAt(0).toUpperCase() : 'U'}\n//               </div>\n//               <button\n//                 onClick={handleLogout}\n//                 className=\"text-sm text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n//               >\n//                 Logout\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Dashboard Content */}\n//         {activeTab === 'dashboard' && (\n//           <>\n//             {/* Summary metrics - Redesigned */}\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\n//                 <div className=\"p-3 rounded-full bg-blue-100 dark:bg-blue-900 mr-4\">\n//                   <span className=\"text-blue-600 dark:text-blue-300\">üí∞</span>\n//                 </div>\n//                 <div>\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Balance</p>\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">‚Çπ{totalAmount.toLocaleString()}</p>\n//                 </div>\n//               </div>\n\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\n//                 <div className=\"p-3 rounded-full bg-green-100 dark:bg-green-900 mr-4\">\n//                   <span className=\"text-green-600 dark:text-green-300\">‚Üë</span>\n//                 </div>\n//                 <div>\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Income</p>\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">‚Çπ{totalPaid.toLocaleString()}</p>\n//                 </div>\n//               </div>\n\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\n//                 <div className=\"p-3 rounded-full bg-red-100 dark:bg-red-900 mr-4\">\n//                   <span className=\"text-red-600 dark:text-red-300\">‚Üì</span>\n//                 </div>\n//                 <div>\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Expenses</p>\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">‚Çπ{totalPending.toLocaleString()}</p>\n//                 </div>\n//               </div>\n\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\n//                 <div className=\"p-3 rounded-full bg-purple-100 dark:bg-purple-900 mr-4\">\n//                   <span className=\"text-purple-600 dark:text-purple-300\">üìä</span>\n//                 </div>\n//                 <div>\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</p>\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">{filtered.length}</p>\n//                 </div>\n//               </div>\n//             </div>\n\n//             {/* Charts Section */}\n//             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n//               {/* Spending Overview Chart */}\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//                 <div className=\"flex justify-between items-center mb-4\">\n//                   <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Spending Overview</h2>\n//                   <select \n//                     className=\"text-sm border-none bg-gray-100 dark:bg-gray-700 rounded-lg px-3 py-1\"\n//                     value={month}\n//                     onChange={(e) => setMonth(e.target.value)}\n//                   >\n//                     <option value=\"\">All Months</option>\n//                     {Array.from({ length: 12 }, (_, i) => (\n//                       <option key={i + 1} value={i + 1}>\n//                         {new Date(0, i).toLocaleString('default', { month: 'long' })}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div className=\"h-64\">\n//                   <ResponsiveContainer width=\"100%\" height=\"100%\">\n//                     <AreaChart data={barData}>\n//                       <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" strokeOpacity={darkMode ? 0.1 : 1} />\n//                       <XAxis dataKey=\"name\" stroke={darkMode ? '#aaa' : '#666'} />\n//                       <YAxis stroke={darkMode ? '#aaa' : '#666'} />\n//                       <Tooltip />\n//                       <Area type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.2} />\n//                     </AreaChart>\n//                   </ResponsiveContainer>\n//                 </div>\n//               </div>\n\n//               {/* Categories Chart */}\n//               { <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Spending by Category</h2>\n//                 <div className=\"h-64\">\n//                   <ResponsiveContainer width=\"100%\" height=\"100%\">\n//                     <PieChart>\n//                       <Pie \n//                         data={categoryData} \n//                         dataKey=\"value\" \n//                         nameKey=\"name\" \n//                         cx=\"50%\" \n//                         cy=\"50%\" \n//                         outerRadius={80} \n//                         fill=\"#8884d8\" \n//                         // label={({ name, persent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n//                       >\n//                         {categoryData.map((_, i) => (\n//                           <Cell key={i} fill={COLORS[i % COLORS.length]} />\n//                         ))}\n//                       </Pie>\n//                       <Tooltip formatter={(value) => [`‚Çπ${value}`, 'Amount']} />\n//                       <Legend />\n//                     </PieChart>\n//                   </ResponsiveContainer>\n//                 </div> \n//                </div> }\n//             </div>\n\n//             {/* Recent Transactions Table */}\n//             <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow overflow-hidden\">\n//               <div className=\"p-6 flex justify-between items-center\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Recent Transactions</h2>\n//                 <button \n//                   onClick={() => setShowTransactions(true)}\n//                   className=\"text-sm text-indigo-600 dark:text-indigo-400 hover:underline\"\n//                 >\n//                   View All\n//                 </button>\n//               </div>\n\n//               <div className=\"overflow-x-auto\">\n//                 <table className=\"w-full\">\n//                   <thead className=\"bg-gray-50 dark:bg-gray-700\">\n//                     <tr>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Category</th>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n//                     {transactions.slice(0, 5).map((t) => (\n//                       <tr key={t._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"flex items-center\">\n//                             <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-indigo-100 dark:bg-indigo-900 flex items-center justify-center\">\n//                               <span className=\"text-indigo-600 dark:text-indigo-300\">üí≥</span>\n//                             </div>\n//                             <div className=\"ml-4\">\n//                               <div className=\"text-sm font-medium text-gray-900 dark:text-white\">{t.category || 'Other'}</div>\n//                               <div className=\"text-sm text-gray-500 dark:text-gray-400\">{t.user_id}</div>\n//                             </div>\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"text-sm text-gray-900 dark:text-white\">{t.description || '-'}</div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"text-sm text-gray-900 dark:text-white\">\n//                             {new Date(t.date).toLocaleDateString()}\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n//                             ‚Çπ{t.amount}\n//                           </div>\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n//                             ${t.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \n//                               'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\n//                             {t.status}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               </div>\n//             </div>\n//           </>\n//         )}\n\n//         {/* Transactions Tab Content */}\n//         {(activeTab === 'transactions' || showTransactions) && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow overflow-hidden\">\n//             <div className=\"p-6 flex justify-between items-center\">\n//               <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Transaction History</h2>\n//               <div className=\"flex space-x-3\">\n//                 <button \n//                   onClick={exportToCSV}\n//                   className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 text-sm\"\n//                 >\n//                   Export CSV\n//                 </button>\n//                 <button \n//                   onClick={() => setShowFilters(!showFilters)}\n//                   className=\"px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 text-sm\"\n//                 >\n//                   {showFilters ? 'Hide Filters' : 'Show Filters'}\n//                 </button>\n//               </div>\n//             </div>\n\n//             {/* Filters Section */}\n//             {showFilters && (\n//               <div className=\"px-6 pb-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n//                 <select \n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\n//                   value={status}\n//                   onChange={(e) => setStatus(e.target.value)}\n//                 >\n//                   <option value=\"\">All Status</option>\n//                   <option value=\"Paid\">Paid</option>\n//                   <option value=\"Pending\">Pending</option>\n//                 </select>\n\n//                 <select \n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\n//                   value={category}\n//                   onChange={(e) => setCategory(e.target.value)}\n//                 >\n//                   <option value=\"\">All Categories</option>\n//                   {uniqueCategories.map((cat) => (\n//                     <option key={cat}>{cat}</option>\n//                   ))}\n//                 </select>\n\n//                 <input \n//                   type=\"number\" \n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\n//                   placeholder=\"Min Amount\"\n//                   value={minAmount}\n//                   onChange={(e) => setMinAmount(e.target.value)}\n//                 />\n\n//                 <input \n//                   type=\"number\" \n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\n//                   placeholder=\"Max Amount\"\n//                   value={maxAmount}\n//                   onChange={(e) => setMaxAmount(e.target.value)}\n//                 />\n//               </div>\n//             )}\n\n//             {/* Transactions Table */}\n//             <div className=\"overflow-x-auto\">\n//               <table className=\"w-full\">\n//                 <thead className=\"bg-gray-50 dark:bg-gray-700\">\n//                   <tr>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">User</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Category</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n//                   {currentEntries.length === 0 ? (\n//                     <tr>\n//                       <td colSpan={6} className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\">\n//                         No transactions found.\n//                       </td>\n//                     </tr>\n//                   ) : (\n//                     currentEntries.map((t) => (\n//                       <tr key={t._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n//                           {t.user_id}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n//                           {new Date(t.date).toLocaleDateString()}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n//                           ‚Çπ{t.amount}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n//                           {t.category || 'N/A'}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n//                           {t.description || '-'}\n//                         </td>\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\n//                           <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n//                             ${t.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \n//                               'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\n//                             {t.status}\n//                           </span>\n//                         </td>\n//                       </tr>\n//                     ))\n//                   )}\n//                 </tbody>\n//               </table>\n//             </div>\n\n//             {/* Pagination */}\n//             <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200 dark:border-gray-700\">\n//               <div className=\"flex-1 flex justify-between sm:hidden\">\n//                 <button \n//                   onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n//                   disabled={currentPage === 1}\n//                   className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n//                 >\n//                   Previous\n//                 </button>\n//                 <button \n//                   onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n//                   disabled={currentPage === totalPages}\n//                   className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n//                 >\n//                   Next\n//                 </button>\n//               </div>\n//               <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n//                 <div>\n//                   <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n//                     Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{Math.min(startIndex + rowsPerPage, totalEntries)}</span> of <span className=\"font-medium\">{totalEntries}</span> results\n//                   </p>\n//                 </div>\n//                 <div>\n//                   <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n//                     <button\n//                       onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n//                       disabled={currentPage === 1}\n//                       className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\n//                     >\n//                       <span className=\"sr-only\">Previous</span>\n//                       &larr;\n//                     </button>\n//                     {Array.from({ length: totalPages }, (_, i) => (\n//                       <button\n//                         key={i + 1}\n//                         onClick={() => setCurrentPage(i + 1)}\n//                         className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n//                           currentPage === i + 1\n//                             ? 'z-10 bg-indigo-50 border-indigo-500 text-indigo-600 dark:bg-indigo-900 dark:border-indigo-700 dark:text-indigo-200'\n//                             : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300'\n//                         }`}\n//                       >\n//                         {i + 1}\n//                       </button>\n//                     ))}\n//                     <button\n//                       onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n//                       disabled={currentPage === totalPages}\n//                       className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\n//                     >\n//                       <span className=\"sr-only\">Next</span>\n//                       &rarr;\n//                     </button>\n//                   </nav>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Other Tab Content Placeholders */}\n//         {activeTab === 'accounts' && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Accounts Management</h2>\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your accounts management content will appear here.</p>\n//           </div>\n//         )}\n\n//         {activeTab === 'reports' && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Financial Reports</h2>\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your financial reports will appear here.</p>\n//           </div>\n//         )}\n\n//         {activeTab === 'settings' && (\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Settings</h2>\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your settings will appear here.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\n// dash board\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [month, setMonth] = useState('');\n  const [status, setStatus] = useState('');\n  const [category, setCategory] = useState('');\n  const [user, setUser] = useState('');\n  const [minAmount, setMinAmount] = useState('');\n  const [maxAmount, setMaxAmount] = useState('');\n  const [groupByWeek, setGroupByWeek] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 10;\n  const [error, setError] = useState('');\n  const [search, setSearch] = useState('');\n  const [darkMode, setDarkMode] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const stored = localStorage.getItem('dashboard-darkmode');\n      if (stored) return stored === 'true';\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\n    }\n    return false;\n  });\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Sidebar navigation\n  const [activeView, setActiveView] = useState('dashboard');\n  const navigate = useNavigate();\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('dashboard-darkmode', 'true');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('dashboard-darkmode', 'false');\n    }\n  }, [darkMode]);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get('http://localhost:5000/api/transactions', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\n        setTransactions(data);\n        setFiltered(data);\n      } catch (err) {\n        setError('Failed to load transactions');\n      }\n    };\n    fetchTransactions();\n  }, []);\n  useEffect(() => {\n    let result = [...transactions];\n    if (month) result = result.filter(t => new Date(t.date).getMonth() + 1 === Number(month));\n    if (status) result = result.filter(t => t.status === status);\n    if (category) result = result.filter(t => t.category === category);\n    if (user) result = result.filter(t => t.user_id === user);\n    if (minAmount) result = result.filter(t => t.amount >= parseFloat(minAmount));\n    if (maxAmount) result = result.filter(t => t.amount <= parseFloat(maxAmount));\n    if (startDate) result = result.filter(t => new Date(t.date) >= new Date(startDate));\n    if (endDate) result = result.filter(t => new Date(t.date) <= new Date(endDate));\n    if (search.trim()) {\n      const s = search.trim().toLowerCase();\n      result = result.filter(t => {\n        var _t$user_id, _t$status, _t$category, _t$description;\n        return ((_t$user_id = t.user_id) === null || _t$user_id === void 0 ? void 0 : _t$user_id.toLowerCase().includes(s)) || ((_t$status = t.status) === null || _t$status === void 0 ? void 0 : _t$status.toLowerCase().includes(s)) || ((_t$category = t.category) === null || _t$category === void 0 ? void 0 : _t$category.toLowerCase().includes(s)) || ((_t$description = t.description) === null || _t$description === void 0 ? void 0 : _t$description.toLowerCase().includes(s)) || t.amount.toString().includes(s) || new Date(t.date).toLocaleDateString().toLowerCase().includes(s);\n      });\n    }\n    setCurrentPage(1);\n    setFiltered(result);\n  }, [month, status, category, user, minAmount, maxAmount, startDate, endDate, transactions, search]);\n  const exportToCSV = () => {\n    const header = 'User ID,Status,Date,Amount,Category,Description\\n';\n    const rows = filtered.map(t => {\n      const date = new Date(t.date).toISOString().split('T')[0];\n      return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\n    }).join('\\n');\n    const blob = new Blob([header + rows], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'transactions.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  const uniqueCategories = Array.from(new Set(transactions.map(t => t.category)));\n  const uniqueUsers = Array.from(new Set(transactions.map(t => t.user_id)));\n  const getWeek = dateStr => {\n    const date = new Date(dateStr);\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfWeek = firstDay.getDay();\n    const adjustedDate = date.getDate() + dayOfWeek;\n    return Math.ceil(adjustedDate / 7);\n  };\n  const categoryData = Object.entries(filtered.reduce((acc, t) => {\n    const key = t.category || 'Uncategorized';\n    acc[key] = (acc[key] || 0) + t.amount;\n    return acc;\n  }, {})).map(([name, value]) => ({\n    name,\n    value\n  }));\n  const barData = groupByWeek ? Array.from({\n    length: 12\n  }, (_, i) => {\n    const monthName = new Date(0, i).toLocaleString('default', {\n      month: 'short'\n    });\n    const weeks = [0, 0, 0, 0, 0];\n    filtered.filter(t => new Date(t.date).getMonth() === i).forEach(t => {\n      const week = getWeek(t.date);\n      weeks[week - 1] += t.amount;\n    });\n    return {\n      name: monthName,\n      ...weeks.reduce((acc, val, idx) => ({\n        ...acc,\n        [`W${idx + 1}`]: val\n      }), {})\n    };\n  }) : Array.from({\n    length: 12\n  }, (_, i) => {\n    const monthName = new Date(0, i).toLocaleString('default', {\n      month: 'short'\n    });\n    const total = filtered.filter(t => new Date(t.date).getMonth() === i).reduce((sum, t) => sum + t.amount, 0);\n    return {\n      name: monthName,\n      total\n    };\n  });\n  const totalEntries = filtered.length;\n  const totalPages = Math.ceil(totalEntries / rowsPerPage);\n  const startIndex = (currentPage - 1) * rowsPerPage;\n  const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\n\n  // Summary metrics\n  const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\n  const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\n  const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\n\n  // Function to generate pagination range\n  const getPaginationRange = () => {\n    const range = [];\n    const maxVisiblePages = 5;\n\n    // Always show first page\n    range.push(1);\n\n    // If current page is more than 3, show ellipsis\n    if (currentPage > 3) {\n      range.push('...');\n    }\n\n    // Determine which pages to show around current page\n    let start = Math.max(2, currentPage - 1);\n    let end = Math.min(totalPages - 1, currentPage + 1);\n\n    // Adjust if we're near the start\n    if (currentPage <= 3) {\n      end = Math.min(4, totalPages - 1);\n    }\n\n    // Adjust if we're near the end\n    if (currentPage >= totalPages - 2) {\n      start = Math.max(totalPages - 3, 2);\n    }\n\n    // Add pages in range\n    for (let i = start; i <= end; i++) {\n      if (i > 1 && i < totalPages) {\n        range.push(i);\n      }\n    }\n\n    // If current page is more than totalPages - 3, show ellipsis\n    if (currentPage < totalPages - 2) {\n      range.push('...');\n    }\n\n    // Always show last page if there is more than one page\n    if (totalPages > 1) {\n      range.push(totalPages);\n    }\n    return range;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-white dark:bg-gray-800 shadow-md p-4 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-6 text-blue-600 dark:text-blue-300\",\n        children: \"Looper.ai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"flex-1 space-y-2 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveView('dashboard'),\n          className: `flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'dashboard' ? 'bg-blue-50 dark:bg-gray-700' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-3\",\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveView('transactions'),\n          className: `flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'transactions' ? 'bg-blue-50 dark:bg-gray-700' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-3\",\n            children: \"\\uD83D\\uDCB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveView('analytics'),\n          className: `flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'analytics' ? 'bg-blue-50 dark:bg-gray-700' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-3\",\n            children: \"\\uD83D\\uDCC8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveView('wallet'),\n          className: `flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'wallet' ? 'bg-blue-50 dark:bg-gray-700' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-3\",\n            children: \"\\uD83D\\uDC5B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveView('messages'),\n          className: `flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'messages' ? 'bg-blue-50 dark:bg-gray-700' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-3\",\n            children: \"\\uD83D\\uDCAC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveView('settings'),\n          className: `flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'settings' ? 'bg-blue-50 dark:bg-gray-700' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-3\",\n            children: \"\\u2699\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowFilters(!showFilters),\n        className: \"flex items-center justify-between w-full p-2 mb-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: showFilters ? '‚ñ≤' : '‚ñº'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 9\n      }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: month,\n          onChange: e => setMonth(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 15\n          }, this), Array.from({\n            length: 12\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: new Date(0, i).toLocaleString('default', {\n              month: 'long'\n            })\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: status,\n          onChange: e => setStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Paid\",\n            children: \"Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 15\n          }, this), uniqueCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1357,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: user,\n          onChange: e => setUser(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1362,\n            columnNumber: 15\n          }, this), uniqueUsers.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          placeholder: \"Min \\u20B9\",\n          value: minAmount,\n          onChange: e => setMinAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          placeholder: \"Max \\u20B9\",\n          value: maxAmount,\n          onChange: e => setMaxAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportToCSV,\n            className: \"flex-1 bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700 text-sm\",\n            children: \"Export CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setMonth('');\n              setStatus('');\n              setCategory('');\n              setUser('');\n              setMinAmount('');\n              setMaxAmount('');\n              setStartDate('');\n              setEndDate('');\n              setGroupByWeek(false);\n              setCurrentPage(1);\n              setFiltered(transactions);\n              setSearch('');\n            },\n            className: \"flex-1 bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600 text-sm\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1374,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-blue-600 dark:text-blue-300\",\n          children: activeView === 'dashboard' ? 'Dashboard' : activeView === 'transactions' ? 'Transactions' : activeView.charAt(0).toUpperCase() + activeView.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-3 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\",\n            placeholder: \"\\uD83D\\uDD0D Search transactions...\",\n            value: search,\n            onChange: e => setSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDarkMode(d => !d),\n            className: \"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\",\n            title: \"Toggle dark mode\",\n            children: darkMode ? '‚òÄÔ∏è' : 'üåô'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1391,\n        columnNumber: 9\n      }, this), activeView === 'dashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 dark:text-gray-400 text-sm\",\n              children: \"Total Transactions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-2xl font-bold text-blue-700 dark:text-blue-300\",\n              children: filtered.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 dark:text-gray-400 text-sm\",\n              children: \"Total Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-2xl font-bold text-green-700 dark:text-green-400\",\n              children: [\"\\u20B9\", totalAmount.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 dark:text-gray-400 text-sm\",\n              children: \"Paid Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-2xl font-bold text-green-600 dark:text-green-300\",\n              children: [\"\\u20B9\", totalPaid.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 dark:text-gray-400 text-sm\",\n              children: \"Pending Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-2xl font-bold text-yellow-600 dark:text-yellow-400\",\n              children: [\"\\u20B9\", totalPending.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1444,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded shadow p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4 text-blue-600 dark:text-blue-300\",\n              children: \"\\uD83D\\uDCC8 Spending by Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: categoryData,\n                  dataKey: \"value\",\n                  nameKey: \"name\",\n                  cx: \"50%\",\n                  cy: \"50%\",\n                  outerRadius: 100,\n                  fill: \"#8884d8\",\n                  label: true,\n                  children: categoryData.map((_, i) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: COLORS[i % COLORS.length]\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1453,\n                    columnNumber: 51\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1455,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1456,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1451,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1450,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded shadow p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4 text-green-600 dark:text-green-300\",\n              children: \"\\uD83D\\uDCCA Monthly Spending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: barData,\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1464,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\",\n                  stroke: darkMode ? '#ddd' : '#333'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1465,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  stroke: darkMode ? '#ddd' : '#333'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1466,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1467,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1468,\n                  columnNumber: 21\n                }, this), groupByWeek ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: w,\n                  fill: COLORS[i % COLORS.length]\n                }, w, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1470,\n                  columnNumber: 70\n                }, this)) : /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"total\",\n                  fill: \"#82ca9d\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1471,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1463,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1462,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 text-sm dark:text-gray-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: groupByWeek,\n              onChange: e => setGroupByWeek(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1480,\n              columnNumber: 17\n            }, this), \"Group by Week\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 dark:text-gray-300\",\n            children: [\"Showing \", startIndex + 1, \"\\u2013\", Math.min(startIndex + rowsPerPage, totalEntries), \" of \", totalEntries, \" entries\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeView === 'transactions' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded shadow overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200 dark:divide-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50 dark:bg-gray-900\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",\n                children: \"user_id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1496,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1497,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1498,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1499,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1501,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1495,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\",\n            children: currentEntries.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50 dark:hover:bg-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\",\n                children: transaction.user_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1507,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\",\n                children: new Date(transaction.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1510,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\",\n                children: [\"\\u20B9\", transaction.amount.toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1513,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\",\n                children: transaction.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1516,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\",\n                children: transaction.description || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1519,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${transaction.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`,\n                  children: transaction.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1523,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1522,\n                columnNumber: 21\n              }, this)]\n            }, transaction._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1506,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1504,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-3 flex items-center justify-between border-t border-gray-200 dark:border-gray-700 sm:px-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex justify-between sm:hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n              disabled: currentPage === 1,\n              className: \"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n              disabled: currentPage === totalPages,\n              className: \"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1546,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-700 dark:text-gray-300\",\n                children: [\"Showing \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: startIndex + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1557,\n                  columnNumber: 29\n                }, this), \" to \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: Math.min(startIndex + rowsPerPage, totalEntries)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1557,\n                  columnNumber: 86\n                }, this), \" of\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: totalEntries\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1558,\n                  columnNumber: 21\n                }, this), \" results\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1556,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                className: \"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\",\n                \"aria-label\": \"Pagination\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n                  disabled: currentPage === 1,\n                  className: \"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700\",\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1563,\n                  columnNumber: 21\n                }, this), getPaginationRange().map((item, index) => {\n                  if (item === '...') {\n                    return /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-700 dark:text-gray-300\",\n                      children: \"...\"\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1574,\n                      columnNumber: 27\n                    }, this);\n                  }\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setCurrentPage(Number(item)),\n                    className: `relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium ${currentPage === item ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900' : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`,\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1584,\n                    columnNumber: 25\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n                  disabled: currentPage === totalPages,\n                  className: \"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700\",\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1596,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1562,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1561,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1554,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1537,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1492,\n        columnNumber: 11\n      }, this), activeView === 'analytics' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-10 text-gray-600 dark:text-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-2\",\n          children: \"Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Analytics content will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1614,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1612,\n        columnNumber: 11\n      }, this), activeView === 'wallet' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-10 text-gray-600 dark:text-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-2\",\n          children: \"Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wallet content will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1622,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 11\n      }, this), activeView === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-10 text-gray-600 dark:text-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-2\",\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1629,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Messages content will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1630,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1628,\n        columnNumber: 11\n      }, this), activeView === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-10 text-gray-600 dark:text-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-2\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Settings content will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1638,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1389,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1283,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"cpc25awUBDe2TPREo62UZG/ygUs=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","axios","useNavigate","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","transactions","setTransactions","filtered","setFiltered","month","setMonth","status","setStatus","category","setCategory","user","setUser","minAmount","setMinAmount","maxAmount","setMaxAmount","groupByWeek","setGroupByWeek","startDate","setStartDate","endDate","setEndDate","currentPage","setCurrentPage","rowsPerPage","error","setError","search","setSearch","darkMode","setDarkMode","window","stored","localStorage","getItem","matchMedia","matches","showFilters","setShowFilters","activeView","setActiveView","navigate","COLORS","document","documentElement","classList","add","setItem","remove","fetchTransactions","token","res","get","headers","Authorization","data","Array","isArray","err","result","filter","t","Date","date","getMonth","Number","user_id","amount","parseFloat","trim","s","toLowerCase","_t$user_id","_t$status","_t$category","_t$description","includes","description","toString","toLocaleDateString","exportToCSV","header","rows","map","toISOString","split","join","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","handleLogout","removeItem","uniqueCategories","from","Set","uniqueUsers","getWeek","dateStr","firstDay","getFullYear","dayOfWeek","getDay","adjustedDate","getDate","Math","ceil","categoryData","Object","entries","reduce","acc","key","name","value","barData","length","_","i","monthName","toLocaleString","weeks","forEach","week","val","idx","total","sum","totalEntries","totalPages","startIndex","currentEntries","slice","totalAmount","totalPaid","totalPending","getPaginationRange","range","maxVisiblePages","push","start","max","end","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","cat","u","placeholder","charAt","toUpperCase","d","title","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","label","strokeDasharray","stroke","w","checked","transaction","_id","p","disabled","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Asus/looper-frontend/src/pages/Dashboard.tsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import {\r\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\r\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer\r\n// } from 'recharts';\r\n\r\n// interface Transaction {\r\n//   _id: string;\r\n//   date: string;\r\n//   amount: number;\r\n//   category: string;\r\n//   description?: string;\r\n//   user_id: string;\r\n//   status: 'Paid' | 'Pending';\r\n// }\r\n\r\n// function Dashboard() {\r\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\r\n//   const [month, setMonth] = useState('');\r\n//   const [status, setStatus] = useState('');\r\n//   const [category, setCategory] = useState('');\r\n//   const [user, setUser] = useState('');\r\n//   const [minAmount, setMinAmount] = useState('');\r\n//   const [maxAmount, setMaxAmount] = useState('');\r\n//   const [groupByWeek, setGroupByWeek] = useState(false);\r\n//   const [startDate, setStartDate] = useState('');\r\n//   const [endDate, setEndDate] = useState('');\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const rowsPerPage = 10;\r\n//   const [error, setError] = useState('');\r\n//   const [search, setSearch] = useState('');\r\n//   const [darkMode, setDarkMode] = useState(() => {\r\n//     // On first load, check localStorage or system preference\r\n//     if (typeof window !== \"undefined\") {\r\n//       const stored = localStorage.getItem('dashboard-darkmode');\r\n//       if (stored) return stored === 'true';\r\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n//     }\r\n//     return false;\r\n//   });\r\n\r\n//   const navigate = useNavigate();\r\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\r\n\r\n//   // Apply dark mode class to <html>\r\n//   useEffect(() => {\r\n//     if (darkMode) {\r\n//       document.documentElement.classList.add('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'true');\r\n//     } else {\r\n//       document.documentElement.classList.remove('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'false');\r\n//     }\r\n//   }, [darkMode]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchTransactions = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\r\n//         setTransactions(data);\r\n//         setFiltered(data);\r\n//       } catch (err) {\r\n//         setError('Failed to load transactions');\r\n//       }\r\n//     };\r\n//     fetchTransactions();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     let result = [...transactions];\r\n\r\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\r\n//     if (status) result = result.filter((t) => t.status === status);\r\n//     if (category) result = result.filter((t) => t.category === category);\r\n//     if (user) result = result.filter((t) => t.user_id === user);\r\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\r\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\r\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\r\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\r\n\r\n//     // Real-time search filter\r\n//     if (search.trim()) {\r\n//       const s = search.trim().toLowerCase();\r\n//       result = result.filter((t) =>\r\n//         t.user_id?.toLowerCase().includes(s) ||\r\n//         t.status?.toLowerCase().includes(s) ||\r\n//         t.category?.toLowerCase().includes(s) ||\r\n//         t.description?.toLowerCase().includes(s) ||\r\n//         t.amount.toString().includes(s) ||\r\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\r\n//       );\r\n//     }\r\n\r\n//     setCurrentPage(1);\r\n//     setFiltered(result);\r\n//   }, [\r\n//     month, status, category, user, minAmount, maxAmount,\r\n//     startDate, endDate, transactions, search\r\n//   ]);\r\n\r\n//   const exportToCSV = () => {\r\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\r\n//     const rows = filtered\r\n//       .map((t) => {\r\n//         const date = new Date(t.date).toISOString().split('T')[0];\r\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\r\n//       })\r\n//       .join('\\n');\r\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.href = url;\r\n//     a.download = 'transactions.csv';\r\n//     a.click();\r\n//     URL.revokeObjectURL(url);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\r\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\r\n\r\n//   const getWeek = (dateStr: string) => {\r\n//     const date = new Date(dateStr);\r\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n//     const dayOfWeek = firstDay.getDay();\r\n//     const adjustedDate = date.getDate() + dayOfWeek;\r\n//     return Math.ceil(adjustedDate / 7);\r\n//   };\r\n\r\n//   const categoryData = Object.entries(\r\n//     filtered.reduce((acc, t) => {\r\n//       const key = t.category || 'Uncategorized';\r\n//       acc[key] = (acc[key] || 0) + t.amount;\r\n//       return acc;\r\n//     }, {} as Record<string, number>)\r\n//   ).map(([name, value]) => ({ name, value }));\r\n\r\n//   const barData = groupByWeek\r\n//     ? Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const weeks = [0, 0, 0, 0, 0];\r\n//         filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .forEach((t) => {\r\n//             const week = getWeek(t.date);\r\n//             weeks[week - 1] += t.amount;\r\n//           });\r\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\r\n//       })\r\n//     : Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const total = filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .reduce((sum, t) => sum + t.amount, 0);\r\n//         return { name: monthName, total };\r\n//       });\r\n\r\n//   const totalEntries = filtered.length;\r\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\r\n//   const startIndex = (currentPage - 1) * rowsPerPage;\r\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n//   // --- SUMMARY METRICS LOGIC ---\r\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\r\n\r\n//   return (\r\n//     <div className=\"p-6 min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\r\n//       <div className=\"flex justify-between items-center mb-6\">\r\n//         <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">üìä Dashboard</h1>\r\n//         <div className=\"flex gap-3 items-center\">\r\n//           <button\r\n//             onClick={() => setDarkMode(d => !d)}\r\n//             className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\r\n//             title=\"Toggle dark mode\"\r\n//           >\r\n//             {darkMode ? '‚òÄÔ∏è' : 'üåô'}\r\n//           </button>\r\n//           <button\r\n//             onClick={handleLogout}\r\n//             className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\r\n//           >\r\n//             Logout\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* --- REAL-TIME SEARCH INPUT --- */}\r\n//       <div className=\"mb-4 flex\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"w-full md:w-1/3 p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\r\n//           placeholder=\"üîç Search transactions (user, status, amount, date, category, description)...\"\r\n//           value={search}\r\n//           onChange={e => setSearch(e.target.value)}\r\n//         />\r\n//       </div>\r\n\r\n//       {/* --- SUMMARY METRICS SECTION --- */}\r\n//       <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\r\n//           <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\r\n//         </div>\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\r\n//           <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">‚Çπ{totalAmount.toLocaleString()}</span>\r\n//         </div>\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\r\n//           <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">‚Çπ{totalPaid.toLocaleString()}</span>\r\n//         </div>\r\n//         <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n//           <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\r\n//           <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">‚Çπ{totalPending.toLocaleString()}</span>\r\n//         </div>\r\n//       </div>\r\n//       {/* --- END SUMMARY METRICS SECTION --- */}\r\n\r\n//       {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n//       {/* Filters */}\r\n//       <div className=\"grid md:grid-cols-3 lg:grid-cols-6 gap-4 mb-4\">\r\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\r\n//           <option value=\"\">All Months</option>\r\n//           {Array.from({ length: 12 }, (_, i) => (\r\n//             <option key={i + 1} value={i + 1}>\r\n//               {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\r\n//           <option value=\"\">All Status</option>\r\n//           <option value=\"Paid\">Paid</option>\r\n//           <option value=\"Pending\">Pending</option>\r\n//         </select>\r\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n//           <option value=\"\">All Categories</option>\r\n//           {uniqueCategories.map((cat) => (\r\n//             <option key={cat}>{cat}</option>\r\n//           ))}\r\n//         </select>\r\n//         <select className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\r\n//           <option value=\"\">All Users</option>\r\n//           {uniqueUsers.map((u) => (\r\n//             <option key={u}>{u}</option>\r\n//           ))}\r\n//         </select>\r\n//         <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Min ‚Çπ\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\r\n//         <input type=\"number\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" placeholder=\"Max ‚Çπ\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\r\n//       </div>\r\n//       <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n//         <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n//         <input type=\"date\" className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n//         <button onClick={exportToCSV} className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\">Export CSV</button>\r\n//         <button onClick={() => {\r\n//           setMonth(''); setStatus(''); setCategory(''); setUser('');\r\n//           setMinAmount(''); setMaxAmount(''); setStartDate('');\r\n//           setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\r\n//           setFiltered(transactions);\r\n//           setSearch('');\r\n//         }} className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\">Reset Filters</button>\r\n//       </div>\r\n\r\n//       <label className=\"flex items-center gap-2 mb-4 text-sm dark:text-gray-300\">\r\n//         <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\r\n//         Group by Week\r\n//       </label>\r\n\r\n//       {/* Table */}\r\n//       <div className=\"overflow-x-auto mb-2\">\r\n//         <table className=\"w-full bg-white dark:bg-gray-800 rounded shadow-md\">\r\n//           <thead className=\"bg-blue-600 dark:bg-blue-900 text-white\">\r\n//             <tr>\r\n//               <th className=\"p-3 text-left\">User ID</th>\r\n//               <th className=\"p-3 text-left\">Date</th>\r\n//               <th className=\"p-3 text-left\">Amount (‚Çπ)</th>\r\n//               <th className=\"p-3 text-left\">Category</th>\r\n//               <th className=\"p-3 text-left\">Description</th>\r\n//               <th className=\"p-3 text-left\">Status</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {currentEntries.length === 0 ? (\r\n//               <tr>\r\n//                 <td colSpan={6} className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No transactions found.</td>\r\n//               </tr>\r\n//             ) : (\r\n//               currentEntries.map((t) => (\r\n//                 <tr key={t._id} className=\"border-t hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                   <td className=\"p-3\">{t.user_id}</td>\r\n//                   <td className=\"p-3\">{new Date(t.date).toLocaleDateString()}</td>\r\n//                   <td className=\"p-3\">‚Çπ{t.amount}</td>\r\n//                   <td className=\"p-3\">{t.category || 'N/A'}</td>\r\n//                   <td className=\"p-3\">{t.description || '-'}</td>\r\n//                   <td className={`p-3 font-medium ${t.status === 'Paid' ? 'text-green-600 dark:text-green-400' : 'text-yellow-600 dark:text-yellow-400'}`}>{t.status}</td>\r\n//                 </tr>\r\n//               ))\r\n//             )}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n\r\n//       <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-2 text-center\">\r\n//         Showing {startIndex + 1}‚Äì{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\r\n//       </div>\r\n\r\n//       <div className=\"flex items-center justify-center gap-4 mb-10\">\r\n//         <button onClick={() => setCurrentPage((p) => Math.max(1, p - 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\r\n//           Prev\r\n//         </button>\r\n//         <span className=\"dark:text-gray-200\">Page</span>\r\n//         <input\r\n//           type=\"number\"\r\n//           min={1}\r\n//           max={totalPages}\r\n//           value={currentPage}\r\n//           onChange={(e) => {\r\n//             const val = parseInt(e.target.value);\r\n//             if (!isNaN(val) && val >= 1 && val <= totalPages) {\r\n//               setCurrentPage(val);\r\n//             }\r\n//           }}\r\n//           className=\"w-16 p-1 border rounded text-center dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100\"\r\n//         />\r\n//         <span className=\"dark:text-gray-200\">of {totalPages}</span>\r\n//         <button onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))} className=\"px-3 py-1 bg-gray-300 dark:bg-gray-700 rounded\">\r\n//           Next\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Charts */}\r\n//       <h2 className=\"text-xl font-semibold mt-8 mb-4 text-blue-600 dark:text-blue-300\">üìà Spending by Category</h2>\r\n//       <ResponsiveContainer width=\"100%\" height={300}>\r\n//         <PieChart>\r\n//           <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\r\n//             {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\r\n//           </Pie>\r\n//           <Tooltip />\r\n//           <Legend />\r\n//         </PieChart>\r\n//       </ResponsiveContainer>\r\n\r\n//       <h2 className=\"text-xl font-semibold mt-8 mb-4 text-green-600 dark:text-green-300\">üìä Monthly Spending</h2>\r\n//       <ResponsiveContainer width=\"100%\" height={300}>\r\n//         <BarChart data={barData}>\r\n//           <CartesianGrid strokeDasharray=\"3 3\" />\r\n//           <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\r\n//           <YAxis stroke={darkMode ? '#ddd' : '#333'} />\r\n//           <Tooltip />\r\n//           <Legend />\r\n//           {groupByWeek\r\n//             ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\r\n//             : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\r\n//         </BarChart>\r\n//       </ResponsiveContainer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n\r\n// import { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import {\r\n//   PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\r\n//   XAxis, YAxis, CartesianGrid, ResponsiveContainer, AreaChart, Area\r\n// } from 'recharts';\r\n\r\n// interface Transaction {\r\n//   _id: string;\r\n//   date: string;\r\n//   amount: number;\r\n//   category: string;\r\n//   description?: string;\r\n//   user_id: string;\r\n//   status: 'Paid' | 'Pending';\r\n// }\r\n\r\n// function Dashboard() {\r\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n//   const [filtered, setFiltered] = useState<Transaction[]>([]);\r\n//   const [month, setMonth] = useState('');\r\n//   const [status, setStatus] = useState('');\r\n//   const [category, setCategory] = useState('');\r\n//   const [user, setUser] = useState('');\r\n//   const [minAmount, setMinAmount] = useState('');\r\n//   const [maxAmount, setMaxAmount] = useState('');\r\n//   const [groupByWeek, setGroupByWeek] = useState(false);\r\n//   const [startDate, setStartDate] = useState('');\r\n//   const [endDate, setEndDate] = useState('');\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const rowsPerPage = 10;\r\n//   const [error, setError] = useState('');\r\n//   const [search, setSearch] = useState('');\r\n//   const [darkMode, setDarkMode] = useState(() => {\r\n//     if (typeof window !== \"undefined\") {\r\n//       const stored = localStorage.getItem('dashboard-darkmode');\r\n//       if (stored) return stored === 'true';\r\n//       return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n//     }\r\n//     return false;\r\n//   });\r\n//   const [showFilters, setShowFilters] = useState(false);\r\n//   const [activeTab, setActiveTab] = useState('dashboard');\r\n//   const [showTransactions, setShowTransactions] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n//   const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\r\n\r\n//   useEffect(() => {\r\n//     if (darkMode) {\r\n//       document.documentElement.classList.add('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'true');\r\n//     } else {\r\n//       document.documentElement.classList.remove('dark');\r\n//       localStorage.setItem('dashboard-darkmode', 'false');\r\n//     }\r\n//   }, [darkMode]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchTransactions = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const res = await axios.get('http://localhost:5000/api/transactions', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\r\n//         setTransactions(data);\r\n//         setFiltered(data);\r\n//       } catch (err) {\r\n//         setError('Failed to load transactions');\r\n//       }\r\n//     };\r\n//     fetchTransactions();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     let result = [...transactions];\r\n\r\n//     if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\r\n//     if (status) result = result.filter((t) => t.status === status);\r\n//     if (category) result = result.filter((t) => t.category === category);\r\n//     if (user) result = result.filter((t) => t.user_id === user);\r\n//     if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\r\n//     if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\r\n//     if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\r\n//     if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\r\n\r\n//     if (search.trim()) {\r\n//       const s = search.trim().toLowerCase();\r\n//       result = result.filter((t) =>\r\n//         t.user_id?.toLowerCase().includes(s) ||\r\n//         t.status?.toLowerCase().includes(s) ||\r\n//         t.category?.toLowerCase().includes(s) ||\r\n//         t.description?.toLowerCase().includes(s) ||\r\n//         t.amount.toString().includes(s) ||\r\n//         new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\r\n//       );\r\n//     }\r\n\r\n//     setCurrentPage(1);\r\n//     setFiltered(result);\r\n//   }, [\r\n//     month, status, category, user, minAmount, maxAmount,\r\n//     startDate, endDate, transactions, search\r\n//   ]);\r\n\r\n//   const exportToCSV = () => {\r\n//     const header = 'User ID,Status,Date,Amount,Category,Description\\n';\r\n//     const rows = filtered\r\n//       .map((t) => {\r\n//         const date = new Date(t.date).toISOString().split('T')[0];\r\n//         return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\r\n//       })\r\n//       .join('\\n');\r\n//     const blob = new Blob([header + rows], { type: 'text/csv' });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const a = document.createElement('a');\r\n//     a.href = url;\r\n//     a.download = 'transactions.csv';\r\n//     a.click();\r\n//     URL.revokeObjectURL(url);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\r\n//   const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\r\n\r\n//   const getWeek = (dateStr: string) => {\r\n//     const date = new Date(dateStr);\r\n//     const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n//     const dayOfWeek = firstDay.getDay();\r\n//     const adjustedDate = date.getDate() + dayOfWeek;\r\n//     return Math.ceil(adjustedDate / 7);\r\n//   };\r\n\r\n//   const categoryData = Object.entries(\r\n//     filtered.reduce((acc, t) => {\r\n//       const key = t.category || 'Uncategorized';\r\n//       acc[key] = (acc[key] || 0) + t.amount;\r\n//       return acc;\r\n//     }, {} as Record<string, number>)\r\n//   ).map(([name, value]) => ({ name, value }));\r\n\r\n//   const barData = groupByWeek\r\n//     ? Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const weeks = [0, 0, 0, 0, 0];\r\n//         filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .forEach((t) => {\r\n//             const week = getWeek(t.date);\r\n//             weeks[week - 1] += t.amount;\r\n//           });\r\n//         return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\r\n//       })\r\n//     : Array.from({ length: 12 }, (_, i) => {\r\n//         const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n//         const total = filtered\r\n//           .filter((t) => new Date(t.date).getMonth() === i)\r\n//           .reduce((sum, t) => sum + t.amount, 0);\r\n//         return { name: monthName, total };\r\n//       });\r\n\r\n//   // Recent transactions data for the sidebar\r\n//   const recentTransactions = [...transactions]\r\n//     .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\r\n//     .slice(0, 5);\r\n\r\n//   const totalEntries = filtered.length;\r\n//   const totalPages = Math.ceil(totalEntries / rowsPerPage);\r\n//   const startIndex = (currentPage - 1) * rowsPerPage;\r\n//   const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n//   // Summary metrics\r\n//   const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\r\n//   const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\r\n\r\n//   return (\r\n//     <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\r\n//       {/* Sidebar - Redesigned */}\r\n//       <div className=\"w-64 bg-indigo-700 dark:bg-gray-800 shadow-md p-4 flex flex-col text-white\">\r\n//         <div className=\"flex items-center mb-8\">\r\n//           <div className=\"w-10 h-10 rounded-full bg-white flex items-center justify-center mr-3\">\r\n//             <span className=\"text-indigo-700 font-bold text-xl\">$</span>\r\n//           </div>\r\n//           <h2 className=\"text-xl font-bold\">Finance Dashboard</h2>\r\n//         </div>\r\n        \r\n//         {/* Main Navigation */}\r\n//         <nav className=\"space-y-1 mb-8\">\r\n//           <button \r\n//             onClick={() => { setActiveTab('dashboard'); setShowTransactions(false); }}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'dashboard' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">üìä</span>\r\n//             Dashboard\r\n//           </button>\r\n          \r\n//           <button \r\n//             onClick={() => { setActiveTab('transactions'); setShowTransactions(true); }}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'transactions' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">üí≥</span>\r\n//             Transactions\r\n//           </button>\r\n          \r\n//           <button \r\n//             onClick={() => setActiveTab('accounts')}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'accounts' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">üè¶</span>\r\n//             Accounts\r\n//           </button>\r\n          \r\n//           <button \r\n//             onClick={() => setActiveTab('reports')}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'reports' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">üìà</span>\r\n//             Reports\r\n//           </button>\r\n          \r\n//           <button \r\n//             onClick={() => setActiveTab('settings')}\r\n//             className={`flex items-center w-full p-3 rounded-lg ${activeTab === 'settings' ? 'bg-indigo-800 dark:bg-gray-700' : 'hover:bg-indigo-600 dark:hover:bg-gray-700'}`}\r\n//           >\r\n//             <span className=\"mr-3\">‚öôÔ∏è</span>\r\n//             Settings\r\n//           </button>\r\n//         </nav>\r\n        \r\n//         {/* Recent Transactions Section */}\r\n//         <div className=\"mt-auto\">\r\n//           <h3 className=\"text-sm font-semibold uppercase tracking-wider mb-2 opacity-70\">Recent Transactions</h3>\r\n//           <div className=\"space-y-3\">\r\n//             {recentTransactions.map((t) => (\r\n//               <div key={t._id} className=\"flex justify-between items-center p-2 bg-indigo-600 dark:bg-gray-700 rounded-lg\">\r\n//                 <div>\r\n//                   <p className=\"text-sm font-medium\">{t.category || 'Other'}</p>\r\n//                   <p className=\"text-xs opacity-80\">{new Date(t.date).toLocaleDateString()}</p>\r\n//                 </div>\r\n//                 <div className={`text-sm font-bold ${t.status === 'Paid' ? 'text-green-300' : 'text-yellow-300'}`}>\r\n//                   ‚Çπ{t.amount}\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Main content */}\r\n//       <div className=\"flex-1 p-6\">\r\n//         {/* Header with search and user controls */}\r\n//         <div className=\"flex justify-between items-center mb-8\">\r\n//           <h1 className=\"text-2xl font-bold text-gray-800 dark:text-white\">\r\n//             {activeTab === 'dashboard' && 'Dashboard Overview'}\r\n//             {activeTab === 'transactions' && 'Transaction History'}\r\n//             {activeTab === 'accounts' && 'Accounts Management'}\r\n//             {activeTab === 'reports' && 'Financial Reports'}\r\n//             {activeTab === 'settings' && 'Settings'}\r\n//           </h1>\r\n          \r\n//           <div className=\"flex items-center space-x-4\">\r\n//             <div className=\"relative\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-full shadow-sm dark:bg-gray-800 dark:text-white\"\r\n//                 placeholder=\"Search...\"\r\n//                 value={search}\r\n//                 onChange={e => setSearch(e.target.value)}\r\n//               />\r\n//               <span className=\"absolute left-3 top-2.5\">üîç</span>\r\n//             </div>\r\n            \r\n//             <button\r\n//               onClick={() => setDarkMode(d => !d)}\r\n//               className=\"p-2 rounded-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600\"\r\n//               title=\"Toggle dark mode\"\r\n//             >\r\n//               {darkMode ? '‚òÄÔ∏è' : 'üåô'}\r\n//             </button>\r\n            \r\n//             <div className=\"flex items-center\">\r\n//               <div className=\"w-8 h-8 rounded-full bg-indigo-600 flex items-center justify-center text-white mr-2\">\r\n//                 {user ? user.charAt(0).toUpperCase() : 'U'}\r\n//               </div>\r\n//               <button\r\n//                 onClick={handleLogout}\r\n//                 className=\"text-sm text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\r\n//               >\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Dashboard Content */}\r\n//         {activeTab === 'dashboard' && (\r\n//           <>\r\n//             {/* Summary metrics - Redesigned */}\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\r\n//                 <div className=\"p-3 rounded-full bg-blue-100 dark:bg-blue-900 mr-4\">\r\n//                   <span className=\"text-blue-600 dark:text-blue-300\">üí∞</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Balance</p>\r\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">‚Çπ{totalAmount.toLocaleString()}</p>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\r\n//                 <div className=\"p-3 rounded-full bg-green-100 dark:bg-green-900 mr-4\">\r\n//                   <span className=\"text-green-600 dark:text-green-300\">‚Üë</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Income</p>\r\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">‚Çπ{totalPaid.toLocaleString()}</p>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\r\n//                 <div className=\"p-3 rounded-full bg-red-100 dark:bg-red-900 mr-4\">\r\n//                   <span className=\"text-red-600 dark:text-red-300\">‚Üì</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Expenses</p>\r\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">‚Çπ{totalPending.toLocaleString()}</p>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6 flex items-center\">\r\n//                 <div className=\"p-3 rounded-full bg-purple-100 dark:bg-purple-900 mr-4\">\r\n//                   <span className=\"text-purple-600 dark:text-purple-300\">üìä</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <p className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</p>\r\n//                   <p className=\"text-2xl font-bold text-gray-800 dark:text-white\">{filtered.length}</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Charts Section */}\r\n//             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n//               {/* Spending Overview Chart */}\r\n//               <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//                 <div className=\"flex justify-between items-center mb-4\">\r\n//                   <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Spending Overview</h2>\r\n//                   <select \r\n//                     className=\"text-sm border-none bg-gray-100 dark:bg-gray-700 rounded-lg px-3 py-1\"\r\n//                     value={month}\r\n//                     onChange={(e) => setMonth(e.target.value)}\r\n//                   >\r\n//                     <option value=\"\">All Months</option>\r\n//                     {Array.from({ length: 12 }, (_, i) => (\r\n//                       <option key={i + 1} value={i + 1}>\r\n//                         {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//                 <div className=\"h-64\">\r\n//                   <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n//                     <AreaChart data={barData}>\r\n//                       <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" strokeOpacity={darkMode ? 0.1 : 1} />\r\n//                       <XAxis dataKey=\"name\" stroke={darkMode ? '#aaa' : '#666'} />\r\n//                       <YAxis stroke={darkMode ? '#aaa' : '#666'} />\r\n//                       <Tooltip />\r\n//                       <Area type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.2} />\r\n//                     </AreaChart>\r\n//                   </ResponsiveContainer>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               {/* Categories Chart */}\r\n//               { <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//                 <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Spending by Category</h2>\r\n//                 <div className=\"h-64\">\r\n//                   <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n//                     <PieChart>\r\n//                       <Pie \r\n//                         data={categoryData} \r\n//                         dataKey=\"value\" \r\n//                         nameKey=\"name\" \r\n//                         cx=\"50%\" \r\n//                         cy=\"50%\" \r\n//                         outerRadius={80} \r\n//                         fill=\"#8884d8\" \r\n//                         // label={({ name, persent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n//                       >\r\n//                         {categoryData.map((_, i) => (\r\n//                           <Cell key={i} fill={COLORS[i % COLORS.length]} />\r\n//                         ))}\r\n//                       </Pie>\r\n//                       <Tooltip formatter={(value) => [`‚Çπ${value}`, 'Amount']} />\r\n//                       <Legend />\r\n//                     </PieChart>\r\n//                   </ResponsiveContainer>\r\n//                 </div> \r\n//                </div> }\r\n//             </div>\r\n\r\n\r\n//             {/* Recent Transactions Table */}\r\n//             <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow overflow-hidden\">\r\n//               <div className=\"p-6 flex justify-between items-center\">\r\n//                 <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Recent Transactions</h2>\r\n//                 <button \r\n//                   onClick={() => setShowTransactions(true)}\r\n//                   className=\"text-sm text-indigo-600 dark:text-indigo-400 hover:underline\"\r\n//                 >\r\n//                   View All\r\n//                 </button>\r\n//               </div>\r\n              \r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full\">\r\n//                   <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n//                     <tr>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Category</th>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\r\n//                       <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n//                     {transactions.slice(0, 5).map((t) => (\r\n//                       <tr key={t._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"flex items-center\">\r\n//                             <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-indigo-100 dark:bg-indigo-900 flex items-center justify-center\">\r\n//                               <span className=\"text-indigo-600 dark:text-indigo-300\">üí≥</span>\r\n//                             </div>\r\n//                             <div className=\"ml-4\">\r\n//                               <div className=\"text-sm font-medium text-gray-900 dark:text-white\">{t.category || 'Other'}</div>\r\n//                               <div className=\"text-sm text-gray-500 dark:text-gray-400\">{t.user_id}</div>\r\n//                             </div>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"text-sm text-gray-900 dark:text-white\">{t.description || '-'}</div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"text-sm text-gray-900 dark:text-white\">\r\n//                             {new Date(t.date).toLocaleDateString()}\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n//                             ‚Çπ{t.amount}\r\n//                           </div>\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \r\n//                             ${t.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \r\n//                               'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\r\n//                             {t.status}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               </div>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n\r\n//         {/* Transactions Tab Content */}\r\n//         {(activeTab === 'transactions' || showTransactions) && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow overflow-hidden\">\r\n//             <div className=\"p-6 flex justify-between items-center\">\r\n//               <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Transaction History</h2>\r\n//               <div className=\"flex space-x-3\">\r\n//                 <button \r\n//                   onClick={exportToCSV}\r\n//                   className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 text-sm\"\r\n//                 >\r\n//                   Export CSV\r\n//                 </button>\r\n//                 <button \r\n//                   onClick={() => setShowFilters(!showFilters)}\r\n//                   className=\"px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 text-sm\"\r\n//                 >\r\n//                   {showFilters ? 'Hide Filters' : 'Show Filters'}\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Filters Section */}\r\n//             {showFilters && (\r\n//               <div className=\"px-6 pb-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n//                 <select \r\n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\r\n//                   value={status}\r\n//                   onChange={(e) => setStatus(e.target.value)}\r\n//                 >\r\n//                   <option value=\"\">All Status</option>\r\n//                   <option value=\"Paid\">Paid</option>\r\n//                   <option value=\"Pending\">Pending</option>\r\n//                 </select>\r\n                \r\n//                 <select \r\n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\r\n//                   value={category}\r\n//                   onChange={(e) => setCategory(e.target.value)}\r\n//                 >\r\n//                   <option value=\"\">All Categories</option>\r\n//                   {uniqueCategories.map((cat) => (\r\n//                     <option key={cat}>{cat}</option>\r\n//                   ))}\r\n//                 </select>\r\n                \r\n//                 <input \r\n//                   type=\"number\" \r\n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\r\n//                   placeholder=\"Min Amount\"\r\n//                   value={minAmount}\r\n//                   onChange={(e) => setMinAmount(e.target.value)}\r\n//                 />\r\n                \r\n//                 <input \r\n//                   type=\"number\" \r\n//                   className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-700 dark:text-white\"\r\n//                   placeholder=\"Max Amount\"\r\n//                   value={maxAmount}\r\n//                   onChange={(e) => setMaxAmount(e.target.value)}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n\r\n//             {/* Transactions Table */}\r\n//             <div className=\"overflow-x-auto\">\r\n//               <table className=\"w-full\">\r\n//                 <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n//                   <tr>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">User</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Category</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\r\n//                     <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n//                   {currentEntries.length === 0 ? (\r\n//                     <tr>\r\n//                       <td colSpan={6} className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\">\r\n//                         No transactions found.\r\n//                       </td>\r\n//                     </tr>\r\n//                   ) : (\r\n//                     currentEntries.map((t) => (\r\n//                       <tr key={t._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n//                           {t.user_id}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n//                           {new Date(t.date).toLocaleDateString()}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\r\n//                           ‚Çπ{t.amount}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n//                           {t.category || 'N/A'}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n//                           {t.description || '-'}\r\n//                         </td>\r\n//                         <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                           <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \r\n//                             ${t.status === 'Paid' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \r\n//                               'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\r\n//                             {t.status}\r\n//                           </span>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))\r\n//                   )}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n\r\n//             {/* Pagination */}\r\n//             <div className=\"px-6 py-4 flex items-center justify-between border-t border-gray-200 dark:border-gray-700\">\r\n//               <div className=\"flex-1 flex justify-between sm:hidden\">\r\n//                 <button \r\n//                   onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\r\n//                   disabled={currentPage === 1}\r\n//                   className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n//                 >\r\n//                   Previous\r\n//                 </button>\r\n//                 <button \r\n//                   onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\r\n//                   disabled={currentPage === totalPages}\r\n//                   className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n//                 >\r\n//                   Next\r\n//                 </button>\r\n//               </div>\r\n//               <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n//                 <div>\r\n//                   <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n//                     Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{Math.min(startIndex + rowsPerPage, totalEntries)}</span> of <span className=\"font-medium\">{totalEntries}</span> results\r\n//                   </p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\r\n//                     <button\r\n//                       onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\r\n//                       disabled={currentPage === 1}\r\n//                       className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\r\n//                     >\r\n//                       <span className=\"sr-only\">Previous</span>\r\n//                       &larr;\r\n//                     </button>\r\n//                     {Array.from({ length: totalPages }, (_, i) => (\r\n//                       <button\r\n//                         key={i + 1}\r\n//                         onClick={() => setCurrentPage(i + 1)}\r\n//                         className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\r\n//                           currentPage === i + 1\r\n//                             ? 'z-10 bg-indigo-50 border-indigo-500 text-indigo-600 dark:bg-indigo-900 dark:border-indigo-700 dark:text-indigo-200'\r\n//                             : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300'\r\n//                         }`}\r\n//                       >\r\n//                         {i + 1}\r\n//                       </button>\r\n//                     ))}\r\n//                     <button\r\n//                       onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\r\n//                       disabled={currentPage === totalPages}\r\n//                       className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300\"\r\n//                     >\r\n//                       <span className=\"sr-only\">Next</span>\r\n//                       &rarr;\r\n//                     </button>\r\n//                   </nav>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Other Tab Content Placeholders */}\r\n//         {activeTab === 'accounts' && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Accounts Management</h2>\r\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your accounts management content will appear here.</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reports' && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Financial Reports</h2>\r\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your financial reports will appear here.</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'settings' && (\r\n//           <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n//             <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Settings</h2>\r\n//             <p className=\"text-gray-600 dark:text-gray-300\">Your settings will appear here.</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n\r\n// dash board\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar,\r\n  XAxis, YAxis, CartesianGrid, ResponsiveContainer\r\n} from 'recharts';\r\n\r\ninterface Transaction {\r\n  _id: string;\r\n  date: string;\r\n  amount: number;\r\n  category: string;\r\n  description?: string;\r\n  user_id: string;\r\n  status: 'Paid' | 'Pending';\r\n}\r\n\r\nfunction Dashboard() {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [filtered, setFiltered] = useState<Transaction[]>([]);\r\n  const [month, setMonth] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [user, setUser] = useState('');\r\n  const [minAmount, setMinAmount] = useState('');\r\n  const [maxAmount, setMaxAmount] = useState('');\r\n  const [groupByWeek, setGroupByWeek] = useState(false);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 10;\r\n  const [error, setError] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const stored = localStorage.getItem('dashboard-darkmode');\r\n      if (stored) return stored === 'true';\r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    }\r\n    return false;\r\n  });\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Sidebar navigation\r\n  const [activeView, setActiveView] = useState<'dashboard' | 'transactions' | 'analytics' | 'wallet' | 'messages' | 'settings'>('dashboard');\r\n\r\n  const navigate = useNavigate();\r\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#00c49f', '#ffb6b9'];\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('dashboard-darkmode', 'true');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('dashboard-darkmode', 'false');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await axios.get('http://localhost:5000/api/transactions', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = Array.isArray(res.data) ? res.data : res.data.transactions || [];\r\n        setTransactions(data);\r\n        setFiltered(data);\r\n      } catch (err) {\r\n        setError('Failed to load transactions');\r\n      }\r\n    };\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let result = [...transactions];\r\n\r\n    if (month) result = result.filter((t) => new Date(t.date).getMonth() + 1 === Number(month));\r\n    if (status) result = result.filter((t) => t.status === status);\r\n    if (category) result = result.filter((t) => t.category === category);\r\n    if (user) result = result.filter((t) => t.user_id === user);\r\n    if (minAmount) result = result.filter((t) => t.amount >= parseFloat(minAmount));\r\n    if (maxAmount) result = result.filter((t) => t.amount <= parseFloat(maxAmount));\r\n    if (startDate) result = result.filter((t) => new Date(t.date) >= new Date(startDate));\r\n    if (endDate) result = result.filter((t) => new Date(t.date) <= new Date(endDate));\r\n\r\n    if (search.trim()) {\r\n      const s = search.trim().toLowerCase();\r\n      result = result.filter((t) =>\r\n        t.user_id?.toLowerCase().includes(s) ||\r\n        t.status?.toLowerCase().includes(s) ||\r\n        t.category?.toLowerCase().includes(s) ||\r\n        t.description?.toLowerCase().includes(s) ||\r\n        t.amount.toString().includes(s) ||\r\n        new Date(t.date).toLocaleDateString().toLowerCase().includes(s)\r\n      );\r\n    }\r\n\r\n    setCurrentPage(1);\r\n    setFiltered(result);\r\n  }, [\r\n    month, status, category, user, minAmount, maxAmount,\r\n    startDate, endDate, transactions, search\r\n  ]);\r\n\r\n  const exportToCSV = () => {\r\n    const header = 'User ID,Status,Date,Amount,Category,Description\\n';\r\n    const rows = filtered\r\n      .map((t) => {\r\n        const date = new Date(t.date).toISOString().split('T')[0];\r\n        return `${t.user_id},${t.status},${date},${t.amount},${t.category || 'N/A'},${t.description || '-'}`;\r\n      })\r\n      .join('\\n');\r\n    const blob = new Blob([header + rows], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'transactions.csv';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  };\r\n\r\n  const uniqueCategories = Array.from(new Set(transactions.map((t) => t.category)));\r\n  const uniqueUsers = Array.from(new Set(transactions.map((t) => t.user_id)));\r\n\r\n  const getWeek = (dateStr: string) => {\r\n    const date = new Date(dateStr);\r\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const dayOfWeek = firstDay.getDay();\r\n    const adjustedDate = date.getDate() + dayOfWeek;\r\n    return Math.ceil(adjustedDate / 7);\r\n  };\r\n\r\n  const categoryData = Object.entries(\r\n    filtered.reduce((acc, t) => {\r\n      const key = t.category || 'Uncategorized';\r\n      acc[key] = (acc[key] || 0) + t.amount;\r\n      return acc;\r\n    }, {} as Record<string, number>)\r\n  ).map(([name, value]) => ({ name, value }));\r\n\r\n  const barData = groupByWeek\r\n    ? Array.from({ length: 12 }, (_, i) => {\r\n        const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n        const weeks = [0, 0, 0, 0, 0];\r\n        filtered\r\n          .filter((t) => new Date(t.date).getMonth() === i)\r\n          .forEach((t) => {\r\n            const week = getWeek(t.date);\r\n            weeks[week - 1] += t.amount;\r\n          });\r\n        return { name: monthName, ...weeks.reduce((acc, val, idx) => ({ ...acc, [`W${idx + 1}`]: val }), {}) };\r\n      })\r\n    : Array.from({ length: 12 }, (_, i) => {\r\n        const monthName = new Date(0, i).toLocaleString('default', { month: 'short' });\r\n        const total = filtered\r\n          .filter((t) => new Date(t.date).getMonth() === i)\r\n          .reduce((sum, t) => sum + t.amount, 0);\r\n        return { name: monthName, total };\r\n      });\r\n\r\n  const totalEntries = filtered.length;\r\n  const totalPages = Math.ceil(totalEntries / rowsPerPage);\r\n  const startIndex = (currentPage - 1) * rowsPerPage;\r\n  const currentEntries = filtered.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n  // Summary metrics\r\n  const totalAmount = filtered.reduce((sum, t) => sum + t.amount, 0);\r\n  const totalPaid = filtered.filter(t => t.status === 'Paid').reduce((sum, t) => sum + t.amount, 0);\r\n  const totalPending = filtered.filter(t => t.status === 'Pending').reduce((sum, t) => sum + t.amount, 0);\r\n\r\n  // Function to generate pagination range\r\n  const getPaginationRange = () => {\r\n    const range = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    // Always show first page\r\n    range.push(1);\r\n    \r\n    // If current page is more than 3, show ellipsis\r\n    if (currentPage > 3) {\r\n      range.push('...');\r\n    }\r\n    \r\n    // Determine which pages to show around current page\r\n    let start = Math.max(2, currentPage - 1);\r\n    let end = Math.min(totalPages - 1, currentPage + 1);\r\n    \r\n    // Adjust if we're near the start\r\n    if (currentPage <= 3) {\r\n      end = Math.min(4, totalPages - 1);\r\n    }\r\n    \r\n    // Adjust if we're near the end\r\n    if (currentPage >= totalPages - 2) {\r\n      start = Math.max(totalPages - 3, 2);\r\n    }\r\n    \r\n    // Add pages in range\r\n    for (let i = start; i <= end; i++) {\r\n      if (i > 1 && i < totalPages) {\r\n        range.push(i);\r\n      }\r\n    }\r\n    \r\n    // If current page is more than totalPages - 3, show ellipsis\r\n    if (currentPage < totalPages - 2) {\r\n      range.push('...');\r\n    }\r\n    \r\n    // Always show last page if there is more than one page\r\n    if (totalPages > 1) {\r\n      range.push(totalPages);\r\n    }\r\n    \r\n    return range;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900 transition-colors duration-300\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-64 bg-white dark:bg-gray-800 shadow-md p-4 flex flex-col\">\r\n        <h2 className=\"text-xl font-bold mb-6 text-blue-600 dark:text-blue-300\">Looper.ai</h2>\r\n        {/* Sidebar Menu Items */}\r\n        <nav className=\"flex-1 space-y-2 mb-6\">\r\n          <button\r\n            onClick={() => setActiveView('dashboard')}\r\n            className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'dashboard' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n            <span className=\"mr-3\">üìä</span>\r\n            <span>Dashboard</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveView('transactions')}\r\n            className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'transactions' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n            <span className=\"mr-3\">üí∞</span>\r\n            <span>Transactions</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveView('analytics')}\r\n            className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'analytics' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n            <span className=\"mr-3\">üìà</span>\r\n            <span>Analytics</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveView('wallet')}\r\n            className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'wallet' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n            <span className=\"mr-3\">üëõ</span>\r\n            <span>Wallet</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveView('messages')}\r\n            className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'messages' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n            <span className=\"mr-3\">üí¨</span>\r\n            <span>Messages</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveView('settings')}\r\n            className={`flex items-center w-full p-2 rounded hover:bg-blue-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 ${activeView === 'settings' ? 'bg-blue-50 dark:bg-gray-700' : ''}`}>\r\n            <span className=\"mr-3\">‚öôÔ∏è</span>\r\n            <span>Settings</span>\r\n          </button>\r\n        </nav>\r\n\r\n        {/* Filter toggle button */}\r\n        <button\r\n          onClick={() => setShowFilters(!showFilters)}\r\n          className=\"flex items-center justify-between w-full p-2 mb-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n        >\r\n          <span className=\"font-medium\">Filters</span>\r\n          <span>{showFilters ? '‚ñ≤' : '‚ñº'}</span>\r\n        </button>\r\n\r\n        {/* Filters section - conditionally rendered */}\r\n        {showFilters && (\r\n          <div className=\"space-y-4 mb-4\">\r\n            <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={month} onChange={(e) => setMonth(e.target.value)}>\r\n              <option value=\"\">All Months</option>\r\n              {Array.from({ length: 12 }, (_, i) => (\r\n                <option key={i + 1} value={i + 1}>\r\n                  {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={status} onChange={(e) => setStatus(e.target.value)}>\r\n              <option value=\"\">All Status</option>\r\n              <option value=\"Paid\">Paid</option>\r\n              <option value=\"Pending\">Pending</option>\r\n            </select>\r\n\r\n            <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n              <option value=\"\">All Categories</option>\r\n              {uniqueCategories.map((cat) => (\r\n                <option key={cat}>{cat}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <select className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={user} onChange={(e) => setUser(e.target.value)}>\r\n              <option value=\"\">All Users</option>\r\n              {uniqueUsers.map((u) => (\r\n                <option key={u}>{u}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <input type=\"number\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" placeholder=\"Min ‚Çπ\" value={minAmount} onChange={(e) => setMinAmount(e.target.value)} />\r\n            <input type=\"number\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" placeholder=\"Max ‚Çπ\" value={maxAmount} onChange={(e) => setMaxAmount(e.target.value)} />\r\n\r\n            <input type=\"date\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n            <input type=\"date\" className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n\r\n            <div className=\"flex space-x-2\">\r\n              <button onClick={exportToCSV} className=\"flex-1 bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700 text-sm\">Export CSV</button>\r\n              <button onClick={() => {\r\n                setMonth(''); setStatus(''); setCategory(''); setUser('');\r\n                setMinAmount(''); setMaxAmount(''); setStartDate('');\r\n                setEndDate(''); setGroupByWeek(false); setCurrentPage(1);\r\n                setFiltered(transactions);\r\n                setSearch('');\r\n              }} className=\"flex-1 bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600 text-sm\">Reset</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex-1 p-6\">\r\n        {/* Header with search and dark mode toggle */}\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-3xl font-bold text-blue-600 dark:text-blue-300\">\r\n            {activeView === 'dashboard' ? 'Dashboard' :\r\n              activeView === 'transactions' ? 'Transactions' :\r\n                activeView.charAt(0).toUpperCase() + activeView.slice(1)}\r\n          </h1>\r\n          <div className=\"flex gap-3 items-center\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"p-2 border border-gray-300 dark:border-gray-700 rounded shadow-sm dark:bg-gray-800 dark:text-gray-100\"\r\n              placeholder=\"üîç Search transactions...\"\r\n              value={search}\r\n              onChange={e => setSearch(e.target.value)}\r\n            />\r\n            <button\r\n              onClick={() => setDarkMode(d => !d)}\r\n              className=\"rounded px-3 py-2 text-xl focus:outline-none bg-gray-200 dark:bg-gray-700 dark:text-yellow-300 text-gray-800 hover:bg-gray-300 dark:hover:bg-gray-600 transition\"\r\n              title=\"Toggle dark mode\"\r\n            >\r\n              {darkMode ? '‚òÄÔ∏è' : 'üåô'}\r\n            </button>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* DASHBOARD VIEW */}\r\n        {activeView === 'dashboard' && (\r\n          <>\r\n            {/* Summary metrics */}\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\r\n              <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n                <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Transactions</span>\r\n                <span className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{filtered.length}</span>\r\n              </div>\r\n              <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n                <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Amount</span>\r\n                <span className=\"text-2xl font-bold text-green-700 dark:text-green-400\">‚Çπ{totalAmount.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n                <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Paid Amount</span>\r\n                <span className=\"text-2xl font-bold text-green-600 dark:text-green-300\">‚Çπ{totalPaid.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4 flex flex-col items-center\">\r\n                <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Pending Amount</span>\r\n                <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">‚Çπ{totalPending.toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n            {/* Charts */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\r\n              <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4\">\r\n                <h2 className=\"text-xl font-semibold mb-4 text-blue-600 dark:text-blue-300\">üìà Spending by Category</h2>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <PieChart>\r\n                    <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\r\n                      {categoryData.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                    <Legend />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n              <div className=\"bg-white dark:bg-gray-800 rounded shadow p-4\">\r\n                <h2 className=\"text-xl font-semibold mb-4 text-green-600 dark:text-green-300\">üìä Monthly Spending</h2>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <BarChart data={barData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" stroke={darkMode ? '#ddd' : '#333'} />\r\n                    <YAxis stroke={darkMode ? '#ddd' : '#333'} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    {groupByWeek\r\n                      ? ['W1', 'W2', 'W3', 'W4', 'W5'].map((w, i) => <Bar key={w} dataKey={w} fill={COLORS[i % COLORS.length]} />)\r\n                      : <Bar dataKey=\"total\" fill=\"#82ca9d\" />}\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Group by week toggle */}\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <label className=\"flex items-center gap-2 text-sm dark:text-gray-300\">\r\n                <input type=\"checkbox\" checked={groupByWeek} onChange={(e) => setGroupByWeek(e.target.checked)} />\r\n                Group by Week\r\n              </label>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                Showing {startIndex + 1}‚Äì{Math.min(startIndex + rowsPerPage, totalEntries)} of {totalEntries} entries\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* TRANSACTIONS VIEW */}\r\n        {activeView === 'transactions' && (\r\n          <div className=\"bg-white dark:bg-gray-800 rounded shadow overflow-hidden\">\r\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <thead className=\"bg-gray-50 dark:bg-gray-900\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">user_id</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Date</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Amount</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Category</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Description</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                {currentEntries.map((transaction) => (\r\n                  <tr key={transaction._id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n                      {transaction.user_id}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n                      {new Date(transaction.date).toLocaleDateString()}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n                      ‚Çπ{transaction.amount.toLocaleString()}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n                      {transaction.category}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-200\">\r\n                      {transaction.description || '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                        transaction.status === 'Paid'\r\n                          ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\r\n                          : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\r\n                      }`}>\r\n                        {transaction.status}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"px-4 py-3 flex items-center justify-between border-t border-gray-200 dark:border-gray-700 sm:px-6\">\r\n              <div className=\"flex-1 flex justify-between sm:hidden\">\r\n                <button \r\n                  onClick={() => setCurrentPage(p => Math.max(1, p - 1))} \r\n                  disabled={currentPage === 1} \r\n                  className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button \r\n                  onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))} \r\n                  disabled={currentPage === totalPages} \r\n                  className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n              <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                    Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{Math.min(startIndex + rowsPerPage, totalEntries)}</span> of{' '}\r\n                    <span className=\"font-medium\">{totalEntries}</span> results\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\r\n                    <button \r\n                      onClick={() => setCurrentPage(p => Math.max(1, p - 1))} \r\n                      disabled={currentPage === 1} \r\n                      className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n                    >\r\n                      Previous\r\n                    </button>\r\n                    \r\n                    {getPaginationRange().map((item, index) => {\r\n                      if (item === '...') {\r\n                        return (\r\n                          <span \r\n                            key={index} \r\n                            className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n                          >\r\n                            ...\r\n                          </span>\r\n                        );\r\n                      }\r\n                      \r\n                      return (\r\n                        <button\r\n                          key={index}\r\n                          onClick={() => setCurrentPage(Number(item))}\r\n                          className={`relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium ${\r\n                            currentPage === item ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900' : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\r\n                          }`}\r\n                        >\r\n                          {item}\r\n                        </button>\r\n                      );\r\n                    })}\r\n                    \r\n                    <button \r\n                      onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))} \r\n                      disabled={currentPage === totalPages} \r\n                      className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* ANALYTICS VIEW */}\r\n        {activeView === 'analytics' && (\r\n          <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\r\n            <h2 className=\"text-2xl font-semibold mb-2\">Analytics</h2>\r\n            <p>Analytics content will appear here.</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* WALLET VIEW */}\r\n        {activeView === 'wallet' && (\r\n          <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\r\n            <h2 className=\"text-2xl font-semibold mb-2\">Wallet</h2>\r\n            <p>Wallet content will appear here.</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* MESSAGES VIEW */}\r\n        {activeView === 'messages' && (\r\n          <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\r\n            <h2 className=\"text-2xl font-semibold mb-2\">Messages</h2>\r\n            <p>Messages content will appear here.</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* SETTINGS VIEW */}\r\n        {activeView === 'settings' && (\r\n          <div className=\"text-center py-10 text-gray-600 dark:text-gray-300\">\r\n            <h2 className=\"text-2xl font-semibold mb-2\">Settings</h2>\r\n            <p>Settings content will appear here.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}